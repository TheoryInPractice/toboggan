# Timeout is set to 300
# Recovering paths
# Running on instances 10240
# Ground-truth available in file ../../research/instances/rnaseq/zebrafish/85.truth

File 85.graph instance 10239 name ENSDARG00000056322 with n = 35, m = 57, and truth = 12:
[(0, 3, 355), (0, 12, 2220), (0, 12, 202), (0, 12, 405), (0, 12, 13), (0, 3, 186), (0, 3, 142), (3, 12, 355), (3, 12, 186), (3, 12, 142), (12, 34, 355), (12, 25, 1087), (12, 25, 190), (12, 25, 1), (12, 18, 405), (12, 25, 388), (12, 18, 196), (12, 25, 544), (12, 25, 13), (12, 18, 344), (18, 34, 186), (18, 34, 547), (18, 34, 10), (18, 34, 202), (25, 34, 1), (25, 34, 1821), (25, 34, 388), (25, 34, 13)]
# Preprocessing
#	Graph has an edge cut of size 11.
#	Investigating cutsets yields bound 12.
#	User supplied k value of 1.
#	Continuing using k = 12
# Reduced instance has n = 6, m = 28, and lower_bound = 12:
Searching for minimum-sized set of weights, timeout set at 300
# 	Call guess_weight with k = 12
Number of 1s is 1
Timed out after 300 seconds
         84117644 function calls (84116625 primitive calls) in 300.000 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
   609473   86.674    0.000   99.429    0.000 linalg.py:296(solve)
  1218970   43.189    0.000   43.189    0.000 {built-in method numpy.linalg.lapack_lite.dgelsd}
   609485   28.674    0.000  124.604    0.000 linalg.py:1830(lstsq)
   609485   18.710    0.000  266.190    0.000 flow.py:296(_test_row)
  6704343   16.376    0.000   16.376    0.000 {built-in method numpy.core.multiarray.array}
   609475   11.595    0.000   19.157    0.000 flow.py:553(push)
  1219023    8.316    0.000   12.234    0.000 defmatrix.py:314(__getitem__)
  2437915    7.276    0.000    7.276    0.000 {method 'astype' of 'numpy.ndarray' objects}
        1    5.807    5.807  299.990  299.990 dp.py:14(solve)
   609474    4.750    0.000    5.724    0.000 flow.py:505(copy)
   609485    4.599    0.000    4.599    0.000 {method 'reduce' of 'numpy.ufunc' objects}
   609485    4.487    0.000  274.096    0.000 flow.py:343(add_constraint)
  3047428    4.463    0.000    4.463    0.000 {built-in method numpy.core.multiarray.zeros}
2437957/2437944    3.177    0.000    3.796    0.000 defmatrix.py:292(__array_finalize__)
  2437916    3.160    0.000   10.178    0.000 linalg.py:106(_makearray)
  1218970    2.894    0.000    7.472    0.000 fromnumeric.py:1364(ravel)
  1218970    2.885    0.000    2.885    0.000 {built-in method numpy.core.multiarray._fastCopyAndTranspose}
  2437927    2.631    0.000    6.301    0.000 numeric.py:463(asarray)
  1218958    2.610    0.000    3.155    0.000 linalg.py:139(_commonType)
   609485    2.544    0.000    7.833    0.000 fromnumeric.py:1710(sum)
   609485    2.469    0.000    7.158    0.000 linalg.py:180(_fastCopyAndTranspose)
  1218970    2.194    0.000    2.194    0.000 {method 'ravel' of 'numpy.ndarray' objects}
   609473    2.183    0.000    2.579    0.000 flow.py:431(__init__)
  3656898    1.881    0.000    1.881    0.000 {built-in method builtins.min}
  6094944    1.841    0.000    1.841    0.000 {built-in method builtins.isinstance}
   609475    1.835    0.000    1.838    0.000 flow.py:584(distribute)
  1218970    1.505    0.000    1.834    0.000 numeric.py:534(asanyarray)
   609485    1.503    0.000    1.929    0.000 linalg.py:168(_to_native_byte_order)
  1218970    1.478    0.000    2.644    0.000 {method 'transpose' of 'numpy.ndarray' objects}
   609497    1.372    0.000    1.372    0.000 {method 'copy' of 'numpy.ndarray' objects}
   609473    1.169    0.000    1.843    0.000 linalg.py:209(_assertNdSquareness)
  1828445    1.132    0.000    1.132    0.000 {built-in method builtins.max}
   609473    1.039    0.000    1.039    0.000 {method 'squeeze' of 'numpy.ndarray' objects}
  4266359    1.010    0.000    1.010    0.000 {built-in method builtins.issubclass}
  1828443    0.950    0.000    1.415    0.000 linalg.py:111(isComplexType)
   609473    0.931    0.000    0.931    0.000 flow.py:464(add_constraint)
   609473    0.917    0.000    0.917    0.000 linalg.py:101(get_linalg_error_extobj)
   609485    0.902    0.000    1.018    0.000 linalg.py:192(_assertRank2)
   609473    0.901    0.000    1.939    0.000 fromnumeric.py:1143(squeeze)
  7313676    0.855    0.000    0.855    0.000 {method 'is_integer' of 'float' objects}
   609473    0.777    0.000    0.874    0.000 linalg.py:198(_assertRankAtLeast2)
  4878260    0.764    0.000    0.764    0.000 {built-in method builtins.len}
   609475    0.744    0.000    0.744    0.000 flow.py:495(__init__)
   609474    0.724    0.000    0.906    0.000 numeric.py:2160(isscalar)
  2437916    0.717    0.000    0.717    0.000 {built-in method builtins.getattr}
   609473    0.561    0.000    0.561    0.000 {method 'tolist' of 'numpy.ndarray' objects}
   609485    0.440    0.000    5.039    0.000 _methods.py:31(_sum)
   609485    0.420    0.000    0.420    0.000 {built-in method math.log}
  1218982    0.396    0.000    0.396    0.000 {built-in method builtins.hash}
   609485    0.373    0.000    0.566    0.000 linalg.py:124(_realType)
  1220429    0.339    0.000    0.339    0.000 {method 'append' of 'list' objects}
  1828441    0.318    0.000    0.318    0.000 {method '__array_prepare__' of 'numpy.ndarray' objects}
  1218950    0.230    0.000    0.230    0.000 {method 'items' of 'dict' objects}
   609485    0.193    0.000    0.193    0.000 {method 'get' of 'dict' objects}
   609485    0.108    0.000    0.108    0.000 linalg.py:130(_linalgRealType)
     1177    0.007    0.000    0.008    0.000 guess_weight.py:43(is_feasible)
        1    0.002    0.002  300.000  300.000 guess_weight.py:62(solve)
      121    0.001    0.000    0.002    0.000 partition.py:17(visit)
     2333    0.001    0.000    0.001    0.000 {built-in method builtins.sum}
 1036/122    0.001    0.000    0.002    0.000 partition.py:23(f)
      121    0.000    0.000    0.000    0.000 partition.py:18(<listcomp>)
  196/104    0.000    0.000    0.002    0.000 partition.py:55(b)
       11    0.000    0.000    0.000    0.000 function_base.py:4740(insert)
       12    0.000    0.000    0.000    0.000 flow.py:239(__init__)
       12    0.000    0.000    0.000    0.000 {method 'dot' of 'numpy.ndarray' objects}
        1    0.000    0.000  300.000  300.000 toboggan.py:77(find_opt_size)
       11    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.empty}
       12    0.000    0.000    0.000    0.000 defmatrix.py:246(__new__)
        1    0.000    0.000    0.000    0.000 flow.py:211(has_bad_bounds)
       12    0.000    0.000    0.000    0.000 {method 'view' of 'numpy.ndarray' objects}
       11    0.000    0.000    0.000    0.000 numeric.py:1490(rollaxis)
        2    0.000    0.000    0.000    0.000 twodim_base.py:139(eye)
       11    0.000    0.000    0.000    0.000 {method '__array_wrap__' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.arange}
        4    0.000    0.000    0.000    0.000 {built-in method builtins.print}
        2    0.000    0.000    0.000    0.000 signal.py:35(_enum_to_int)
        4    0.000    0.000    0.000    0.000 {method 'format' of 'str' objects}
        1    0.000    0.000    0.000    0.000 graphs.py:67(labeled_neighborhood)
        1    0.000    0.000    0.000    0.000 signal.py:45(signal)
        1    0.000    0.000    0.000    0.000 flow.py:550(__hash__)
        1    0.000    0.000    0.000    0.000 partition.py:15(algorithm_u)
        7    0.000    0.000    0.000    0.000 guess_weight.py:74(<genexpr>)
        1    0.000    0.000    0.000    0.000 toboggan.py:44(__exit__)
        1    0.000    0.000    0.000    0.000 toboggan.py:39(__enter__)
       23    0.000    0.000    0.000    0.000 {method 'tobytes' of 'memoryview' objects}
        1    0.000    0.000    0.000    0.000 toboggan.py:36(handle_timeout)
        2    0.000    0.000    0.000    0.000 {built-in method _signal.alarm}
        1    0.000    0.000    0.000    0.000 signal.py:25(_int_to_enum)
        1    0.000    0.000    0.000    0.000 graphs.py:55(source)
        1    0.000    0.000    0.000    0.000 enum.py:215(__call__)
        1    0.000    0.000    0.000    0.000 enum.py:459(__new__)
        9    0.000    0.000    0.000    0.000 guess_weight.py:99(<genexpr>)
        1    0.000    0.000    0.000    0.000 {built-in method _signal.signal}
        1    0.000    0.000    0.000    0.000 graphs.py:52(__iter__)
        1    0.000    0.000    0.000    0.000 toboggan.py:32(__init__)
       11    0.000    0.000    0.000    0.000 {method 'item' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 graphs.py:87(in_neighborhood)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 graphs.py:129(in_degree)
        1    0.000    0.000    0.000    0.000 {built-in method builtins.iter}
        1    0.000    0.000    0.000    0.000 guess_weight.py:101(<listcomp>)
       17    0.000    0.000    0.000    0.000 guess_weight.py:82(<lambda>)
        1    0.000    0.000    0.000    0.000 flow.py:422(__hash__)


# All_info	n_in	m_in	n_red	m_red	k_gtrue	k_cut	k_impro	k_opt	time_w	time_p
All_info	35	57	6	28	12	11	12	None	300	0
weights	
Finished instance.

# Timeout is set to 300
# Recovering paths
# Running on instances 2367
# Ground-truth available in file ../../research/instances/rnaseq/zebrafish/29.truth

File 29.graph instance 2366 name ENSDARG00000035325 with n = 28, m = 44, and truth = 8:
[(0, 6, 8), (0, 6, 848), (0, 6, 223), (0, 6, 59), (0, 6, 43), (0, 6, 2), (6, 9, 856), (6, 9, 220), (6, 9, 107), (9, 11, 1181), (9, 11, 2), (11, 13, 1140), (11, 13, 43), (13, 27, 2), (13, 20, 224), (13, 20, 66), (13, 27, 43), (13, 20, 848), (20, 27, 59), (20, 27, 48), (20, 27, 7), (20, 27, 176), (20, 27, 848)]
# Preprocessing
#	Graph has an edge cut of size 7.
#	Investigating cutsets yields bound 7.
#	User supplied k value of 1.
#	Continuing using k = 7
# Reduced instance has n = 7, m = 23, and lower_bound = 7:
Searching for minimum-sized set of weights, timeout set at 300
# 	Call guess_weight with k = 7
# 	Call guess_weight with k = 8
Timed out after 300 seconds
         171721875 function calls (170580196 primitive calls) in 300.000 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
  2764270   52.194    0.000   52.194    0.000 {built-in method numpy.linalg.lapack_lite.dgelsd}
  1382135   41.226    0.000  166.317    0.000 linalg.py:1830(lstsq)
 15762282   25.303    0.000   25.303    0.000 {built-in method numpy.core.multiarray.array}
  1397473   19.379    0.000  282.797    0.000 flow.py:343(add_constraint)
  4237678   11.727    0.000   16.584    0.000 defmatrix.py:314(__getitem__)
  1382135   11.514    0.000  211.551    0.000 flow.py:296(_test_row)
   669592   10.808    0.000   18.836    0.000 linalg.py:296(solve)
   669834   10.505    0.000   17.438    0.000 function_base.py:4740(insert)
8833487/7703113    9.192    0.000   10.459    0.000 defmatrix.py:292(__array_finalize__)
  1383478    7.216    0.000    7.216    0.000 {method 'reduce' of 'numpy.ufunc' objects}
   700062    6.206    0.000   11.684    0.000 flow.py:553(push)
  6911045    6.075    0.000    6.075    0.000 {built-in method numpy.core.multiarray.zeros}
  3212053    5.261    0.000    5.261    0.000 {method 'astype' of 'numpy.ndarray' objects}
        4    5.254    1.314  299.986   74.997 dp.py:14(solve)
   669838    5.063    0.000   14.130    0.000 flow.py:239(__init__)
  1130370    4.582    0.000    6.665    0.000 {method 'dot' of 'numpy.ndarray' objects}
  2764276    4.085    0.000   10.515    0.000 fromnumeric.py:1364(ravel)
 20361989    3.897    0.000    3.897    0.000 {built-in method builtins.isinstance}
  1382134    3.838    0.000   12.032    0.000 fromnumeric.py:1710(sum)
  4773488    3.357    0.000    8.140    0.000 numeric.py:463(asarray)
  1382135    3.274    0.000    7.901    0.000 linalg.py:180(_fastCopyAndTranspose)
  4103454    3.239    0.000   10.361    0.000 linalg.py:106(_makearray)
  2052501    3.218    0.000    3.733    0.000 {method 'copy' of 'numpy.ndarray' objects}
  2764270    3.083    0.000    3.083    0.000 {built-in method numpy.core.multiarray._fastCopyAndTranspose}
   700054    3.076    0.000    3.899    0.000 flow.py:505(copy)
  2764276    2.977    0.000    2.977    0.000 {method 'ravel' of 'numpy.ndarray' objects}
  2051727    2.735    0.000    3.283    0.000 linalg.py:139(_commonType)
  7580290    2.321    0.000    2.321    0.000 {built-in method builtins.min}
  2764408    2.132    0.000    2.582    0.000 numeric.py:534(asanyarray)
  1382135    2.049    0.000    2.660    0.000 linalg.py:168(_to_native_byte_order)
  2764270    1.881    0.000    3.364    0.000 {method 'transpose' of 'numpy.ndarray' objects}
   700062    1.550    0.000    1.579    0.000 flow.py:584(distribute)
  1382135    1.277    0.000    1.425    0.000 linalg.py:192(_assertRank2)
  3433935    1.213    0.000    1.213    0.000 {built-in method builtins.max}
  3433861    1.209    0.000    1.741    0.000 linalg.py:111(isComplexType)
   669838    1.204    0.000    6.552    0.000 defmatrix.py:246(__new__)
 12162857    1.153    0.000    1.153    0.000 {built-in method builtins.len}
  1130132    1.123    0.000    1.310    0.000 numeric.py:2160(isscalar)
  7537667    1.080    0.000    1.080    0.000 {built-in method builtins.issubclass}
   669834    1.006    0.000    1.006    0.000 numeric.py:1490(rollaxis)
   669592    0.797    0.000    1.231    0.000 linalg.py:209(_assertNdSquareness)
  4110870    0.769    0.000    0.769    0.000 {built-in method builtins.getattr}
   670374    0.755    0.000    3.321    0.000 {method 'view' of 'numpy.ndarray' objects}
   669592    0.750    0.000    1.488    0.000 fromnumeric.py:1143(squeeze)
   669592    0.738    0.000    0.738    0.000 {method 'squeeze' of 'numpy.ndarray' objects}
  1382135    0.736    0.000    0.736    0.000 {built-in method math.log}
   669842    0.717    0.000    0.717    0.000 {built-in method numpy.core.multiarray.empty}
   669834    0.705    0.000    1.498    0.000 {method '__array_wrap__' of 'numpy.ndarray' objects}
  1382318    0.651    0.000    7.862    0.000 _methods.py:31(_sum)
   700061    0.638    0.000    0.638    0.000 flow.py:495(__init__)
   669592    0.617    0.000    0.684    0.000 linalg.py:198(_assertRankAtLeast2)
   669592    0.613    0.000    0.613    0.000 linalg.py:101(get_linalg_error_extobj)
  2119388    0.554    0.000    0.554    0.000 {built-in method builtins.hash}
  1382135    0.543    0.000    0.852    0.000 linalg.py:124(_realType)
  2788893    0.494    0.000    0.494    0.000 {method 'append' of 'list' objects}
   445700    0.491    0.000    0.491    0.000 linalg.py:89(_raise_linalgerror_singular)
  2988160    0.311    0.000    0.311    0.000 {method '__array_prepare__' of 'numpy.ndarray' objects}
  1382224    0.309    0.000    0.309    0.000 {method 'get' of 'dict' objects}
  1339672    0.269    0.000    0.269    0.000 {method 'tobytes' of 'memoryview' objects}
  1400151    0.185    0.000    0.185    0.000 {method 'items' of 'dict' objects}
   219294    0.184    0.000    0.184    0.000 flow.py:464(add_constraint)
   223892    0.149    0.000    0.149    0.000 {method 'tolist' of 'numpy.ndarray' objects}
   669834    0.142    0.000    0.142    0.000 {method 'item' of 'numpy.ndarray' objects}
  1382135    0.135    0.000    0.135    0.000 linalg.py:130(_linalgRealType)
    54927    0.122    0.000    0.142    0.000 flow.py:431(__init__)
   524668    0.053    0.000    0.053    0.000 {method 'is_integer' of 'float' objects}
     3059    0.016    0.000    0.021    0.000 partition.py:17(visit)
        8    0.012    0.001    0.064    0.008 _linprog.py:212(_solve_simplex)
     2104    0.010    0.000    0.011    0.000 guess_weight.py:43(is_feasible)
      716    0.006    0.000    0.016    0.000 core.py:2913(__array_finalize__)
10741/3067    0.005    0.000    0.029    0.000 partition.py:23(f)
      804    0.004    0.000    0.008    0.000 core.py:2887(_update_from)
5623/2264    0.003    0.000    0.019    0.000 partition.py:55(b)
        2    0.003    0.001  300.000  150.000 guess_weight.py:62(solve)
     3059    0.003    0.000    0.003    0.000 partition.py:18(<listcomp>)
       88    0.003    0.000    0.010    0.000 core.py:1157(__call__)
1544/1272    0.002    0.000    0.005    0.000 core.py:3320(__setattr__)
      532    0.002    0.000    0.009    0.000 core.py:3639(filled)
       88    0.002    0.000    0.034    0.000 _linprog.py:173(_pivot_row)
      620    0.001    0.000    0.001    0.000 {built-in method numpy.core.multiarray.copyto}
      272    0.001    0.000    0.003    0.000 core.py:3351(__setmask__)
        4    0.001    0.000    0.067    0.017 _linprog.py:391(_linprog_simplex)
      532    0.001    0.000    0.003    0.000 core.py:440(_check_fill_value)
      176    0.001    0.000    0.008    0.000 core.py:3893(__eq__)
       96    0.001    0.000    0.019    0.000 _linprog.py:137(_pivot_col)
      272    0.001    0.000    0.014    0.000 core.py:1810(masked_where)
     3932    0.001    0.000    0.001    0.000 {method 'update' of 'dict' objects}
      892    0.001    0.000    0.001    0.000 core.py:3540(_get_data)
       88    0.001    0.000    0.002    0.000 core.py:848(__call__)
      184    0.001    0.000    0.002    0.000 core.py:4289(count)
      176    0.001    0.000    0.012    0.000 core.py:5460(min)
     3166    0.001    0.000    0.001    0.000 {built-in method builtins.sum}
      544    0.001    0.000    0.001    0.000 core.py:1308(make_mask_descr)
      900    0.001    0.000    0.001    0.000 {built-in method builtins.hasattr}
      352    0.001    0.000    0.002    0.000 numeric.py:2686(seterr)
      176    0.001    0.000    0.005    0.000 {method 'view' of 'numpy.generic' objects}
      352    0.001    0.000    0.001    0.000 numeric.py:2786(geterr)
      272    0.001    0.000    0.003    0.000 core.py:1531(make_mask)
      808    0.000    0.000    0.004    0.000 {method 'any' of 'numpy.ndarray' objects}
      176    0.000    0.000    0.001    0.000 numerictypes.py:603(obj2sctype)
      448    0.000    0.000    0.004    0.000 core.py:599(filled)
      808    0.000    0.000    0.003    0.000 _methods.py:37(_any)
      272    0.000    0.000    0.001    0.000 core.py:1626(make_mask_none)
       88    0.000    0.000    0.000    0.000 core.py:645(get_masked_subclass)
      176    0.000    0.000    0.004    0.000 core.py:6951(where)
      128    0.000    0.000    0.000    0.000 shape_base.py:61(atleast_2d)
      128    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.concatenate}
      176    0.000    0.000    0.001    0.000 core.py:242(_recursive_extremum_fill_value)
      544    0.000    0.000    0.000    0.000 core.py:1287(_recursive_make_descr)
      176    0.000    0.000    0.001    0.000 numeric.py:3088(__exit__)
      176    0.000    0.000    0.001    0.000 core.py:1798(_check_mask_axis)
      176    0.000    0.000    0.000    0.000 {method 'nonzero' of 'numpy.ndarray' objects}
       88    0.000    0.000    0.010    0.000 core.py:4023(__truediv__)
      176    0.000    0.000    0.001    0.000 numeric.py:3083(__enter__)
      176    0.000    0.000    0.001    0.000 {method 'min' of 'numpy.ndarray' objects}
      176    0.000    0.000    0.000    0.000 numeric.py:3079(__init__)
      184    0.000    0.000    0.001    0.000 {method 'sum' of 'numpy.ndarray' objects}
      352    0.000    0.000    0.000    0.000 {built-in method numpy.core.umath.seterrobj}
      176    0.000    0.000    0.001    0.000 numerictypes.py:774(__getitem__)
       88    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.can_cast}
      176    0.000    0.000    0.001    0.000 core.py:253(minimum_fill_value)
      176    0.000    0.000    0.001    0.000 {method 'all' of 'numpy.ndarray' objects}
      704    0.000    0.000    0.000    0.000 {built-in method numpy.core.umath.geterrobj}
      176    0.000    0.000    0.000    0.000 core.py:672(getdata)
       64    0.000    0.000    0.001    0.000 shape_base.py:180(vstack)
       88    0.000    0.000    0.000    0.000 core.py:659(<listcomp>)
      176    0.000    0.000    0.001    0.000 _methods.py:28(_amin)
      176    0.000    0.000    0.001    0.000 _methods.py:40(_all)
        4    0.000    0.000    0.000    0.000 function_base.py:4538(delete)
        4    0.000    0.000    0.067    0.017 flow.py:261(is_redundant)
       64    0.000    0.000    0.000    0.000 shape_base.py:234(<listcomp>)
      176    0.000    0.000    0.000    0.000 core.py:1344(getmask)
        4    0.000    0.000    0.000    0.000 _linprog.py:325(<listcomp>)
       88    0.000    0.000    0.000    0.000 core.py:3883(_delegate_binop)
       24    0.000    0.000    0.000    0.000 flow.py:550(__hash__)
        4    0.000    0.000    0.000    0.000 core.py:2753(__new__)
       10    0.000    0.000    0.000    0.000 flow.py:441(is_redundant)
        8    0.000    0.000    0.000    0.000 partition.py:15(algorithm_u)
        8    0.000    0.000    0.000    0.000 graphs.py:67(labeled_neighborhood)
      176    0.000    0.000    0.000    0.000 {method 'pop' of 'dict' objects}
      176    0.000    0.000    0.000    0.000 {method 'count' of 'tuple' objects}
        1    0.000    0.000    0.000    0.000 flow.py:60(_compute_max_weight_bounds)
        1    0.000    0.000  300.000  300.000 toboggan.py:77(find_opt_size)
        2    0.000    0.000    0.000    0.000 flow.py:211(has_bad_bounds)
        4    0.000    0.000    0.000    0.000 twodim_base.py:139(eye)
        4    0.000    0.000    0.067    0.017 _linprog.py:824(linprog)
        4    0.000    0.000    0.000    0.000 index_tricks.py:665(fill_diagonal)
       14    0.000    0.000    0.000    0.000 {built-in method builtins.all}
        1    0.000    0.000    0.000    0.000 flow.py:81(_compute_weight_bounds)
        4    0.000    0.000    0.000    0.000 core.py:6155(array)
       57    0.000    0.000    0.000    0.000 flow.py:444(<genexpr>)
        4    0.000    0.000    0.000    0.000 graphs.py:61(sink)
       28    0.000    0.000    0.000    0.000 graphs.py:84(out_neighborhood)
       35    0.000    0.000    0.000    0.000 graphs.py:78(neighborhood)
        4    0.000    0.000    0.000    0.000 fromnumeric.py:1866(any)
       28    0.000    0.000    0.000    0.000 graphs.py:126(out_degree)
        3    0.000    0.000    0.000    0.000 flow.py:533(__eq__)
        5    0.000    0.000    0.000    0.000 graphs.py:55(source)
        2    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.arange}
       10    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
        4    0.000    0.000    0.000    0.000 {built-in method builtins.print}
        4    0.000    0.000    0.000    0.000 numeric.py:150(ones)
        4    0.000    0.000    0.000    0.000 {method 'format' of 'str' objects}
       10    0.000    0.000    0.000    0.000 graphs.py:52(__iter__)
        4    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.count_nonzero}
       24    0.000    0.000    0.000    0.000 flow.py:265(<genexpr>)
        1    0.000    0.000    0.000    0.000 flow.py:198(try_larger_k)
        2    0.000    0.000    0.000    0.000 signal.py:35(_enum_to_int)
       16    0.000    0.000    0.000    0.000 guess_weight.py:74(<genexpr>)
        1    0.000    0.000    0.000    0.000 toboggan.py:39(__enter__)
        4    0.000    0.000    0.000    0.000 flow.py:264(<listcomp>)
        1    0.000    0.000    0.000    0.000 signal.py:25(_int_to_enum)
        4    0.000    0.000    0.000    0.000 optimize.py:112(__getattr__)
        1    0.000    0.000    0.000    0.000 signal.py:45(signal)
        4    0.000    0.000    0.000    0.000 numeric.py:380(count_nonzero)
        4    0.000    0.000    0.000    0.000 index_tricks.py:650(__getitem__)
        1    0.000    0.000    0.000    0.000 toboggan.py:36(handle_timeout)
        5    0.000    0.000    0.000    0.000 graphs.py:87(in_neighborhood)
        4    0.000    0.000    0.000    0.000 core.py:3562(get_fill_value)
        4    0.000    0.000    0.000    0.000 {method 'indices' of 'slice' objects}
        5    0.000    0.000    0.000    0.000 graphs.py:129(in_degree)
        4    0.000    0.000    0.000    0.000 {built-in method builtins.abs}
        2    0.000    0.000    0.000    0.000 {built-in method _signal.alarm}
        1    0.000    0.000    0.000    0.000 {built-in method builtins.sorted}
        1    0.000    0.000    0.000    0.000 {built-in method _signal.signal}
        1    0.000    0.000    0.000    0.000 enum.py:459(__new__)
        1    0.000    0.000    0.000    0.000 enum.py:215(__call__)
        7    0.000    0.000    0.000    0.000 flow.py:422(__hash__)
        1    0.000    0.000    0.000    0.000 toboggan.py:44(__exit__)
        7    0.000    0.000    0.000    0.000 flow.py:488(__hash__)
        1    0.000    0.000    0.000    0.000 getlimits.py:96(__new__)
        4    0.000    0.000    0.000    0.000 {method 'lower' of 'str' objects}
        1    0.000    0.000    0.000    0.000 flow.py:72(<dictcomp>)
        4    0.000    0.000    0.000    0.000 optimize.py:137(_check_unknown_options)
        8    0.000    0.000    0.000    0.000 guess_weight.py:78(<genexpr>)
       10    0.000    0.000    0.000    0.000 {built-in method builtins.iter}
        1    0.000    0.000    0.000    0.000 toboggan.py:32(__init__)
        1    0.000    0.000    0.000    0.000 flow.py:474(__eq__)
       16    0.000    0.000    0.000    0.000 guess_weight.py:82(<lambda>)
        1    0.000    0.000    0.000    0.000 flow.py:101(<listcomp>)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 flow.py:97(<listcomp>)


# All_info	n_in	m_in	n_red	m_red	k_gtrue	k_cut	k_impro	k_opt	time_w	time_p
All_info	28	44	7	23	8	7	7	None	300	0
weights	
Finished instance.

# Timeout is set to 300
# Recovering paths
# Running on instances 7708
# Ground-truth available in file ../../research/instances/rnaseq/zebrafish/29.truth

File 29.graph instance 7707 name ENSDARG00000020711 with n = 25, m = 39, and truth = 8:
[(0, 13, 328), (0, 5, 2), (0, 5, 31), (0, 5, 231), (0, 13, 3), (0, 13, 504), (5, 15, 2), (5, 13, 262), (13, 15, 504), (13, 21, 5), (13, 15, 588), (15, 21, 328), (15, 24, 9), (15, 21, 20), (15, 24, 504), (15, 24, 2), (15, 24, 231), (21, 24, 328), (21, 24, 22), (21, 24, 3)]
# Preprocessing
#	Graph has an edge cut of size 7.
#	Investigating cutsets yields bound 8.
#	User supplied k value of 1.
#	Continuing using k = 8
# Reduced instance has n = 6, m = 20, and lower_bound = 8:
Searching for minimum-sized set of weights, timeout set at 300
# 	Call guess_weight with k = 8
# Weights computation took 262.57 seconds
# Solution: {SolvedConstr (2, 2, 3, 9, 20, 231, 328, 504)}
         151410288 function calls (150289618 primitive calls) in 262.564 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
  2364308   45.875    0.000   45.875    0.000 {built-in method numpy.linalg.lapack_lite.dgelsd}
  1182154   35.345    0.000  143.870    0.000 linalg.py:1830(lstsq)
 13442371   22.051    0.000   22.051    0.000 {built-in method numpy.core.multiarray.array}
  1202318   19.201    0.000  249.005    0.000 flow.py:343(add_constraint)
  5305831   12.149    0.000   16.969    0.000 defmatrix.py:314(__getitem__)
  1182154    9.359    0.000  180.932    0.000 flow.py:296(_test_row)
   556214    8.940    0.000   15.621    0.000 linalg.py:296(solve)
   573872    8.855    0.000   14.816    0.000 function_base.py:4740(insert)
8388357/7274139    8.605    0.000    9.806    0.000 defmatrix.py:292(__array_finalize__)
  1182796    6.176    0.000    6.176    0.000 {method 'reduce' of 'numpy.ufunc' objects}
  5910949    5.217    0.000    5.217    0.000 {built-in method numpy.core.multiarray.zeros}
   583368    4.824    0.000    9.353    0.000 flow.py:553(push)
  1114215    4.728    0.000    7.165    0.000 {method 'dot' of 'numpy.ndarray' objects}
  2743268    4.526    0.000    4.526    0.000 {method 'astype' of 'numpy.ndarray' objects}
   573875    4.232    0.000   11.887    0.000 flow.py:239(__init__)
        3    4.156    1.385  262.560   87.520 dp.py:14(solve)
 20061117    3.764    0.000    3.764    0.000 {built-in method builtins.isinstance}
  2364312    3.340    0.000    8.932    0.000 fromnumeric.py:1364(ravel)
  1182154    3.250    0.000   10.308    0.000 fromnumeric.py:1710(sum)
  4050704    2.852    0.000    7.009    0.000 numeric.py:463(asarray)
  3476736    2.759    0.000    8.820    0.000 linalg.py:106(_makearray)
  1756281    2.752    0.000    3.173    0.000 {method 'copy' of 'numpy.ndarray' objects}
  1182154    2.721    0.000    6.687    0.000 linalg.py:180(_fastCopyAndTranspose)
  2364308    2.626    0.000    2.626    0.000 {built-in method numpy.core.multiarray._fastCopyAndTranspose}
  2364312    2.546    0.000    2.546    0.000 {method 'ravel' of 'numpy.ndarray' objects}
   583354    2.498    0.000    3.206    0.000 flow.py:505(copy)
  1738368    2.351    0.000    2.822    0.000 linalg.py:139(_commonType)
  6466985    1.995    0.000    1.995    0.000 {built-in method builtins.min}
  2364378    1.856    0.000    2.284    0.000 numeric.py:534(asanyarray)
  1182154    1.844    0.000    2.367    0.000 linalg.py:168(_to_native_byte_order)
  2364308    1.584    0.000    2.864    0.000 {method 'transpose' of 'numpy.ndarray' objects}
   583368    1.307    0.000    1.323    0.000 flow.py:584(distribute)
  1096559    1.160    0.000    1.335    0.000 numeric.py:2160(isscalar)
  2920531    1.047    0.000    1.047    0.000 {built-in method builtins.max}
  1182154    1.043    0.000    1.174    0.000 linalg.py:192(_assertRank2)
  2920522    1.012    0.000    1.485    0.000 linalg.py:111(isComplexType)
   573875    1.002    0.000    5.451    0.000 defmatrix.py:246(__new__)
 10540454    0.998    0.000    0.998    0.000 {built-in method builtins.len}
  6397426    0.944    0.000    0.944    0.000 {built-in method builtins.issubclass}
   573872    0.842    0.000    0.842    0.000 numeric.py:1490(rollaxis)
   556214    0.666    0.000    1.031    0.000 linalg.py:209(_assertNdSquareness)
  1182154    0.639    0.000    0.639    0.000 {built-in method math.log}
   574131    0.636    0.000    2.720    0.000 {method 'view' of 'numpy.ndarray' objects}
  3480278    0.613    0.000    0.613    0.000 {built-in method builtins.getattr}
   573876    0.607    0.000    0.607    0.000 {built-in method numpy.core.multiarray.empty}
   573872    0.596    0.000    1.262    0.000 {method '__array_wrap__' of 'numpy.ndarray' objects}
   556214    0.591    0.000    0.591    0.000 {method 'squeeze' of 'numpy.ndarray' objects}
   556214    0.589    0.000    1.180    0.000 fromnumeric.py:1143(squeeze)
  1182242    0.583    0.000    6.758    0.000 _methods.py:31(_sum)
   583360    0.558    0.000    0.558    0.000 flow.py:495(__init__)
   556214    0.545    0.000    0.545    0.000 linalg.py:101(get_linalg_error_extobj)
  1182154    0.486    0.000    0.747    0.000 linalg.py:124(_realType)
   556214    0.458    0.000    0.509    0.000 linalg.py:198(_assertRankAtLeast2)
  1740376    0.451    0.000    0.451    0.000 {built-in method builtins.hash}
  2379429    0.416    0.000    0.416    0.000 {method 'append' of 'list' objects}
   366734    0.408    0.000    0.408    0.000 linalg.py:89(_raise_linalgerror_singular)
  2553788    0.263    0.000    0.263    0.000 {method '__array_prepare__' of 'numpy.ndarray' objects}
  1182197    0.261    0.000    0.261    0.000 {method 'get' of 'dict' objects}
  1147747    0.230    0.000    0.230    0.000 {method 'tobytes' of 'memoryview' objects}
  1166757    0.150    0.000    0.150    0.000 {method 'items' of 'dict' objects}
  1182154    0.142    0.000    0.142    0.000 linalg.py:130(_linalgRealType)
   189480    0.121    0.000    0.121    0.000 {method 'tolist' of 'numpy.ndarray' objects}
   573872    0.118    0.000    0.118    0.000 {method 'item' of 'numpy.ndarray' objects}
   164940    0.025    0.000    0.025    0.000 {method 'is_integer' of 'float' objects}
     9360    0.021    0.000    0.024    0.000 flow.py:431(__init__)
    17813    0.014    0.000    0.014    0.000 flow.py:464(add_constraint)
     2045    0.009    0.000    0.012    0.000 partition.py:17(visit)
        4    0.006    0.001    0.031    0.008 _linprog.py:212(_solve_simplex)
      342    0.003    0.000    0.008    0.000 core.py:2913(__array_finalize__)
6697/2059    0.003    0.000    0.016    0.000 partition.py:23(f)
      506    0.002    0.000    0.003    0.000 guess_weight.py:43(is_feasible)
      384    0.002    0.000    0.004    0.000 core.py:2887(_update_from)
3074/1390    0.002    0.000    0.009    0.000 partition.py:55(b)
     2045    0.001    0.000    0.001    0.000 partition.py:18(<listcomp>)
       42    0.001    0.000    0.005    0.000 core.py:1157(__call__)
  738/608    0.001    0.000    0.002    0.000 core.py:3320(__setattr__)
      254    0.001    0.000    0.004    0.000 core.py:3639(filled)
       42    0.001    0.000    0.016    0.000 _linprog.py:173(_pivot_row)
        1    0.001    0.001  262.563  262.563 guess_weight.py:62(solve)
      296    0.001    0.000    0.001    0.000 {built-in method numpy.core.multiarray.copyto}
        2    0.001    0.000    0.032    0.016 _linprog.py:391(_linprog_simplex)
      130    0.001    0.000    0.001    0.000 core.py:3351(__setmask__)
      254    0.001    0.000    0.001    0.000 core.py:440(_check_fill_value)
       46    0.000    0.000    0.009    0.000 _linprog.py:137(_pivot_col)
       84    0.000    0.000    0.004    0.000 core.py:3893(__eq__)
       42    0.000    0.000    0.001    0.000 core.py:848(__call__)
     1878    0.000    0.000    0.000    0.000 {method 'update' of 'dict' objects}
      130    0.000    0.000    0.007    0.000 core.py:1810(masked_where)
      426    0.000    0.000    0.000    0.000 core.py:3540(_get_data)
       84    0.000    0.000    0.006    0.000 core.py:5460(min)
       88    0.000    0.000    0.001    0.000 core.py:4289(count)
      430    0.000    0.000    0.000    0.000 {built-in method builtins.hasattr}
      260    0.000    0.000    0.000    0.000 core.py:1308(make_mask_descr)
      168    0.000    0.000    0.001    0.000 numeric.py:2686(seterr)
      168    0.000    0.000    0.000    0.000 numeric.py:2786(geterr)
       84    0.000    0.000    0.002    0.000 {method 'view' of 'numpy.generic' objects}
      130    0.000    0.000    0.001    0.000 core.py:1531(make_mask)
      386    0.000    0.000    0.002    0.000 {method 'any' of 'numpy.ndarray' objects}
      902    0.000    0.000    0.000    0.000 {built-in method builtins.sum}
       84    0.000    0.000    0.000    0.000 numerictypes.py:603(obj2sctype)
      386    0.000    0.000    0.002    0.000 _methods.py:37(_any)
       84    0.000    0.000    0.002    0.000 core.py:6951(where)
       42    0.000    0.000    0.000    0.000 core.py:645(get_masked_subclass)
      130    0.000    0.000    0.001    0.000 core.py:1626(make_mask_none)
      214    0.000    0.000    0.002    0.000 core.py:599(filled)
       64    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.concatenate}
       64    0.000    0.000    0.000    0.000 shape_base.py:61(atleast_2d)
       84    0.000    0.000    0.001    0.000 core.py:242(_recursive_extremum_fill_value)
      168    0.000    0.000    0.000    0.000 {built-in method numpy.core.umath.seterrobj}
       84    0.000    0.000    0.000    0.000 numeric.py:3088(__exit__)
      260    0.000    0.000    0.000    0.000 core.py:1287(_recursive_make_descr)
       84    0.000    0.000    0.000    0.000 numerictypes.py:774(__getitem__)
       88    0.000    0.000    0.001    0.000 {method 'sum' of 'numpy.ndarray' objects}
       84    0.000    0.000    0.001    0.000 core.py:1798(_check_mask_axis)
       84    0.000    0.000    0.000    0.000 {method 'nonzero' of 'numpy.ndarray' objects}
       84    0.000    0.000    0.001    0.000 numeric.py:3083(__enter__)
       42    0.000    0.000    0.005    0.000 core.py:4023(__truediv__)
       84    0.000    0.000    0.000    0.000 numeric.py:3079(__init__)
       84    0.000    0.000    0.000    0.000 {method 'min' of 'numpy.ndarray' objects}
       84    0.000    0.000    0.001    0.000 core.py:253(minimum_fill_value)
       42    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.can_cast}
       84    0.000    0.000    0.000    0.000 {method 'all' of 'numpy.ndarray' objects}
      336    0.000    0.000    0.000    0.000 {built-in method numpy.core.umath.geterrobj}
       84    0.000    0.000    0.000    0.000 _methods.py:28(_amin)
       15    0.000    0.000    0.000    0.000 flow.py:441(is_redundant)
       14    0.000    0.000    0.000    0.000 partition.py:15(algorithm_u)
       32    0.000    0.000    0.000    0.000 shape_base.py:180(vstack)
       14    0.000    0.000    0.000    0.000 graphs.py:67(labeled_neighborhood)
       34    0.000    0.000    0.000    0.000 flow.py:550(__hash__)
       84    0.000    0.000    0.000    0.000 core.py:672(getdata)
       42    0.000    0.000    0.000    0.000 core.py:659(<listcomp>)
       84    0.000    0.000    0.000    0.000 core.py:1344(getmask)
        2    0.000    0.000    0.000    0.000 function_base.py:4538(delete)
        2    0.000    0.000    0.032    0.016 flow.py:261(is_redundant)
      103    0.000    0.000    0.000    0.000 flow.py:444(<genexpr>)
       84    0.000    0.000    0.000    0.000 _methods.py:40(_all)
       42    0.000    0.000    0.000    0.000 core.py:3883(_delegate_binop)
       32    0.000    0.000    0.000    0.000 shape_base.py:234(<listcomp>)
        2    0.000    0.000    0.000    0.000 _linprog.py:325(<listcomp>)
        2    0.000    0.000    0.000    0.000 core.py:2753(__new__)
       17    0.000    0.000    0.000    0.000 {built-in method builtins.all}
        1    0.000    0.000  262.564  262.564 toboggan.py:77(find_opt_size)
        1    0.000    0.000    0.000    0.000 flow.py:211(has_bad_bounds)
       84    0.000    0.000    0.000    0.000 {method 'pop' of 'dict' objects}
        2    0.000    0.000    0.032    0.016 _linprog.py:824(linprog)
        2    0.000    0.000    0.000    0.000 twodim_base.py:139(eye)
        4    0.000    0.000    0.000    0.000 {built-in method builtins.print}
        3    0.000    0.000    0.000    0.000 {method 'format' of 'str' objects}
       18    0.000    0.000    0.000    0.000 graphs.py:84(out_neighborhood)
        2    0.000    0.000    0.000    0.000 index_tricks.py:665(fill_diagonal)
        3    0.000    0.000    0.000    0.000 graphs.py:61(sink)
       18    0.000    0.000    0.000    0.000 graphs.py:126(out_degree)
        2    0.000    0.000    0.000    0.000 core.py:6155(array)
        6    0.000    0.000    0.000    0.000 graphs.py:52(__iter__)
       84    0.000    0.000    0.000    0.000 {method 'count' of 'tuple' objects}
        2    0.000    0.000    0.000    0.000 signal.py:35(_enum_to_int)
       14    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
        1    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.arange}
        3    0.000    0.000    0.000    0.000 flow.py:533(__eq__)
        2    0.000    0.000    0.000    0.000 fromnumeric.py:1866(any)
        2    0.000    0.000    0.000    0.000 numeric.py:150(ones)
        1    0.000    0.000    0.000    0.000 toboggan.py:39(__enter__)
        3    0.000    0.000    0.000    0.000 graphs.py:55(source)
        3    0.000    0.000    0.000    0.000 graphs.py:129(in_degree)
        1    0.000    0.000    0.000    0.000 signal.py:45(signal)
       18    0.000    0.000    0.000    0.000 graphs.py:78(neighborhood)
        1    0.000    0.000    0.000    0.000 flow.py:438(__repr__)
       12    0.000    0.000    0.000    0.000 flow.py:488(__hash__)
        2    0.000    0.000    0.000    0.000 numeric.py:380(count_nonzero)
        1    0.000    0.000    0.000    0.000 enum.py:215(__call__)
        2    0.000    0.000    0.000    0.000 flow.py:264(<listcomp>)
       12    0.000    0.000    0.000    0.000 flow.py:265(<genexpr>)
        7    0.000    0.000    0.000    0.000 guess_weight.py:74(<genexpr>)
        1    0.000    0.000    0.000    0.000 getlimits.py:96(__new__)
        2    0.000    0.000    0.000    0.000 index_tricks.py:650(__getitem__)
        1    0.000    0.000    0.000    0.000 enum.py:459(__new__)
        1    0.000    0.000    0.000    0.000 toboggan.py:44(__exit__)
        5    0.000    0.000    0.000    0.000 flow.py:422(__hash__)
        2    0.000    0.000    0.000    0.000 core.py:3562(get_fill_value)
        2    0.000    0.000    0.000    0.000 optimize.py:112(__getattr__)
        2    0.000    0.000    0.000    0.000 {method 'indices' of 'slice' objects}
        1    0.000    0.000    0.000    0.000 flow.py:474(__eq__)
        2    0.000    0.000    0.000    0.000 {built-in method _signal.alarm}
        1    0.000    0.000    0.000    0.000 signal.py:25(_int_to_enum)
        2    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.count_nonzero}
        2    0.000    0.000    0.000    0.000 {built-in method builtins.abs}
       12    0.000    0.000    0.000    0.000 guess_weight.py:82(<lambda>)
        1    0.000    0.000    0.000    0.000 toboggan.py:32(__init__)
        1    0.000    0.000    0.000    0.000 {built-in method _signal.signal}
        3    0.000    0.000    0.000    0.000 graphs.py:87(in_neighborhood)
        1    0.000    0.000    0.000    0.000 {built-in method time.time}
        2    0.000    0.000    0.000    0.000 optimize.py:137(_check_unknown_options)
        2    0.000    0.000    0.000    0.000 {method 'lower' of 'str' objects}
        6    0.000    0.000    0.000    0.000 {built-in method builtins.iter}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}


#	Now recovering the 8 paths in the solution (2, 2, 3, 9, 20, 231, 328, 504)
# Recovery took 2.19 seconds
# Paths, weights pass test: flow decomposition confirmed.
# Solutions:
# 	Path with weight = 2
# 	[0, 4, 5, 15, 17, 18, 19, 20, 24]
# 	Path with weight = 2
# 	[0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 21, 22, 23, 24]
# 	Path with weight = 3
# 	[0, 11, 12, 13, 14, 21, 22, 24]
# 	Path with weight = 9
# 	[0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 24]
# 	Path with weight = 20
# 	[0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 21, 22, 23, 24]
# 	Path with weight = 231
# 	[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 24]
# 	Path with weight = 328
# 	[0, 7, 8, 9, 10, 11, 12, 13, 14, 15, 21, 24]
# 	Path with weight = 504
# 	[0, 8, 9, 10, 11, 12, 13, 15, 17, 18, 24]
# All_info	n_in	m_in	n_red	m_red	k_gtrue	k_cut	k_impro	k_opt	time_w	time_p
All_info	25	39	6	20	8	7	8	8	262.5650637149811	2.187108278274536
weights	 2 2 3 9 20 231 328 504
Finished instance.

# Timeout is set to 300
# Recovering paths
# Running on instances 10206
# Ground-truth available in file ../../research/instances/rnaseq/zebrafish/29.truth

File 29.graph instance 10205 name ENSDARG00000056322 with n = 41, m = 63, and truth = 12:
[(0, 12, 1839), (0, 3, 43), (0, 12, 444), (0, 12, 751), (0, 3, 1147), (0, 12, 1), (0, 3, 47), (3, 12, 43), (3, 12, 1147), (3, 12, 47), (12, 24, 2538), (12, 40, 43), (12, 17, 1), (12, 24, 1), (12, 17, 97), (12, 24, 1), (12, 17, 1591), (17, 40, 47), (17, 40, 1147), (17, 40, 444), (17, 40, 51), (24, 26, 1168), (24, 26, 1372), (26, 28, 1372), (26, 28, 1168), (28, 36, 860), (28, 40, 1), (28, 36, 1679), (36, 38, 1679), (36, 38, 860), (38, 40, 2538), (38, 40, 1)]
# Preprocessing
#	Graph has an edge cut of size 8.
#	Investigating cutsets yields bound 8.
#	User supplied k value of 1.
#	Continuing using k = 8
# Reduced instance has n = 10, m = 32, and lower_bound = 8:
Searching for minimum-sized set of weights, timeout set at 300
# 	Call guess_weight with k = 8
# 	Call guess_weight with k = 9
Number of 1s is 3
Timed out after 300 seconds
         181241587 function calls (181240524 primitive calls) in 300.000 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
  2684888   54.370    0.000   54.370    0.000 {built-in method numpy.linalg.lapack_lite.dgelsd}
  1342444   40.494    0.000  166.471    0.000 linalg.py:1830(lstsq)
 14766886   22.890    0.000   22.890    0.000 {built-in method numpy.core.multiarray.array}
  1342444   21.862    0.000  258.055    0.000 flow.py:296(_test_row)
  1342435   20.901    0.000   37.833    0.000 linalg.py:296(solve)
  1342437   11.999    0.000   21.354    0.000 flow.py:553(push)
  2684913   11.414    0.000   16.629    0.000 defmatrix.py:314(__getitem__)
  5369757    8.651    0.000    8.651    0.000 {method 'astype' of 'numpy.ndarray' objects}
        1    8.253    8.253  299.993  299.993 dp.py:14(solve)
  1342443    7.073    0.000    7.073    0.000 {method 'reduce' of 'numpy.ufunc' objects}
  1342444    6.436    0.000  269.141    0.000 flow.py:343(add_constraint)
  6712223    5.815    0.000    5.815    0.000 {built-in method numpy.core.multiarray.zeros}
  1342436    5.307    0.000    6.680    0.000 flow.py:505(copy)
5369796/5369785    4.185    0.000    5.055    0.000 defmatrix.py:292(__array_finalize__)
  5369758    4.181    0.000   13.519    0.000 linalg.py:106(_makearray)
  2684886    3.908    0.000   10.144    0.000 fromnumeric.py:1364(ravel)
  1342443    3.728    0.000   11.848    0.000 fromnumeric.py:1710(sum)
  5369766    3.595    0.000    8.307    0.000 numeric.py:463(asarray)
  2684879    3.492    0.000    4.244    0.000 linalg.py:139(_commonType)
  1342444    3.193    0.000    7.746    0.000 linalg.py:180(_fastCopyAndTranspose)
  1342435    3.016    0.000    3.531    0.000 flow.py:431(__init__)
  2684888    2.986    0.000    2.986    0.000 {built-in method numpy.core.multiarray._fastCopyAndTranspose}
  2684886    2.884    0.000    2.884    0.000 {method 'ravel' of 'numpy.ndarray' objects}
  1342437    2.673    0.000    2.675    0.000 flow.py:584(distribute)
 13424501    2.622    0.000    2.622    0.000 {built-in method builtins.isinstance}
  8054687    2.503    0.000    2.503    0.000 {built-in method builtins.min}
  2684886    2.051    0.000    2.508    0.000 numeric.py:534(asanyarray)
  1342453    2.009    0.000    2.009    0.000 {method 'copy' of 'numpy.ndarray' objects}
  1342444    2.001    0.000    2.625    0.000 linalg.py:168(_to_native_byte_order)
  2684888    1.952    0.000    3.520    0.000 {method 'transpose' of 'numpy.ndarray' objects}
  4027431    1.527    0.000    1.527    0.000 {built-in method builtins.max}
  1342435    1.496    0.000    2.391    0.000 linalg.py:209(_assertNdSquareness)
  1342435    1.398    0.000    1.398    0.000 {method 'squeeze' of 'numpy.ndarray' objects}
  1342435    1.391    0.000    2.789    0.000 fromnumeric.py:1143(squeeze)
  4027322    1.374    0.000    1.984    0.000 linalg.py:111(isComplexType)
  9397080    1.362    0.000    1.362    0.000 {built-in method builtins.issubclass}
  1342435    1.299    0.000    1.299    0.000 linalg.py:101(get_linalg_error_extobj)
  1344955    1.244    0.000    1.244    0.000 flow.py:464(add_constraint)
  1342444    1.215    0.000    1.370    0.000 linalg.py:192(_assertRank2)
  1342435    1.145    0.000    1.274    0.000 linalg.py:198(_assertRankAtLeast2)
 10741431    1.049    0.000    1.049    0.000 {built-in method builtins.len}
  1342437    1.035    0.000    1.035    0.000 flow.py:495(__init__)
  5369758    1.031    0.000    1.031    0.000 {built-in method builtins.getattr}
  1342437    0.978    0.000    1.215    0.000 numeric.py:2160(isscalar)
  1342435    0.893    0.000    0.893    0.000 {method 'tolist' of 'numpy.ndarray' objects}
 12081915    0.881    0.000    0.881    0.000 {method 'is_integer' of 'float' objects}
  1342443    0.697    0.000    7.771    0.000 _methods.py:31(_sum)
  1342444    0.695    0.000    0.695    0.000 {built-in method math.log}
  1342444    0.546    0.000    0.854    0.000 linalg.py:124(_realType)
  2684897    0.515    0.000    0.515    0.000 {built-in method builtins.hash}
  2687307    0.500    0.000    0.500    0.000 {method 'append' of 'list' objects}
  4027321    0.453    0.000    0.453    0.000 {method '__array_prepare__' of 'numpy.ndarray' objects}
  2684874    0.339    0.000    0.339    0.000 {method 'items' of 'dict' objects}
  1342444    0.308    0.000    0.308    0.000 {method 'get' of 'dict' objects}
  1342444    0.178    0.000    0.178    0.000 linalg.py:130(_linalgRealType)
      913    0.005    0.000    0.005    0.000 guess_weight.py:43(is_feasible)
        2    0.002    0.001  300.000  150.000 guess_weight.py:62(solve)
      267    0.001    0.000    0.002    0.000 partition.py:17(visit)
 1114/268    0.000    0.000    0.003    0.000 partition.py:23(f)
     1768    0.000    0.000    0.000    0.000 {built-in method builtins.sum}
      267    0.000    0.000    0.000    0.000 partition.py:18(<listcomp>)
  353/147    0.000    0.000    0.001    0.000 partition.py:55(b)
        8    0.000    0.000    0.000    0.000 function_base.py:4740(insert)
        9    0.000    0.000    0.000    0.000 flow.py:239(__init__)
        1    0.000    0.000    0.000    0.000 flow.py:60(_compute_max_weight_bounds)
       10    0.000    0.000    0.000    0.000 {method 'dot' of 'numpy.ndarray' objects}
        1    0.000    0.000  300.000  300.000 toboggan.py:77(find_opt_size)
        1    0.000    0.000    0.000    0.000 flow.py:81(_compute_weight_bounds)
        2    0.000    0.000    0.000    0.000 flow.py:211(has_bad_bounds)
        8    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.empty}
        9    0.000    0.000    0.000    0.000 defmatrix.py:246(__new__)
        9    0.000    0.000    0.000    0.000 {method 'view' of 'numpy.ndarray' objects}
        2    0.000    0.000    0.000    0.000 twodim_base.py:139(eye)
        8    0.000    0.000    0.000    0.000 numeric.py:1490(rollaxis)
        5    0.000    0.000    0.000    0.000 {built-in method builtins.print}
       21    0.000    0.000    0.000    0.000 guess_weight.py:99(<genexpr>)
        5    0.000    0.000    0.000    0.000 {method 'format' of 'str' objects}
        1    0.000    0.000    0.000    0.000 flow.py:198(try_larger_k)
        1    0.000    0.000    0.000    0.000 graphs.py:61(sink)
        1    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.arange}
        1    0.000    0.000    0.000    0.000 flow.py:550(__hash__)
        8    0.000    0.000    0.000    0.000 {method '__array_wrap__' of 'numpy.ndarray' objects}
        2    0.000    0.000    0.000    0.000 signal.py:35(_enum_to_int)
        1    0.000    0.000    0.000    0.000 graphs.py:67(labeled_neighborhood)
       20    0.000    0.000    0.000    0.000 graphs.py:78(neighborhood)
       10    0.000    0.000    0.000    0.000 graphs.py:126(out_degree)
        1    0.000    0.000    0.000    0.000 signal.py:45(signal)
        1    0.000    0.000    0.000    0.000 partition.py:15(algorithm_u)
        4    0.000    0.000    0.000    0.000 graphs.py:52(__iter__)
        1    0.000    0.000    0.000    0.000 enum.py:215(__call__)
        1    0.000    0.000    0.000    0.000 signal.py:25(_int_to_enum)
        1    0.000    0.000    0.000    0.000 toboggan.py:36(handle_timeout)
       17    0.000    0.000    0.000    0.000 {method 'tobytes' of 'memoryview' objects}
       10    0.000    0.000    0.000    0.000 graphs.py:84(out_neighborhood)
        2    0.000    0.000    0.000    0.000 {built-in method _signal.alarm}
       11    0.000    0.000    0.000    0.000 guess_weight.py:74(<genexpr>)
        1    0.000    0.000    0.000    0.000 toboggan.py:39(__enter__)
        1    0.000    0.000    0.000    0.000 enum.py:459(__new__)
        2    0.000    0.000    0.000    0.000 graphs.py:55(source)
        1    0.000    0.000    0.000    0.000 toboggan.py:44(__exit__)
        1    0.000    0.000    0.000    0.000 {built-in method _signal.signal}
        2    0.000    0.000    0.000    0.000 graphs.py:129(in_degree)
        1    0.000    0.000    0.000    0.000 toboggan.py:32(__init__)
        1    0.000    0.000    0.000    0.000 flow.py:72(<dictcomp>)
        1    0.000    0.000    0.000    0.000 flow.py:101(<listcomp>)
       15    0.000    0.000    0.000    0.000 guess_weight.py:82(<lambda>)
        1    0.000    0.000    0.000    0.000 flow.py:97(<listcomp>)
        8    0.000    0.000    0.000    0.000 {method 'item' of 'numpy.ndarray' objects}
        2    0.000    0.000    0.000    0.000 graphs.py:87(in_neighborhood)
        1    0.000    0.000    0.000    0.000 flow.py:422(__hash__)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        4    0.000    0.000    0.000    0.000 {built-in method builtins.iter}
        1    0.000    0.000    0.000    0.000 guess_weight.py:101(<listcomp>)


# All_info	n_in	m_in	n_red	m_red	k_gtrue	k_cut	k_impro	k_opt	time_w	time_p
All_info	41	63	10	32	12	8	8	None	300	0
weights	
Finished instance.

# Timeout is set to 300
# Recovering paths
# Running on instances 6640
# Ground-truth available in file ../../research/instances/rnaseq/zebrafish/78.truth

File 78.graph instance 6639 name ENSDARG00000086819 with n = 42, m = 52, and truth = 9:
[(0, 25, 5), (0, 25, 571), (0, 29, 644), (0, 25, 378), (0, 25, 2), (25, 29, 951), (25, 41, 5), (29, 37, 376), (29, 31, 1217), (29, 31, 2), (31, 37, 644), (31, 37, 573), (31, 37, 2), (37, 41, 380), (37, 41, 422), (37, 41, 793)]
# Preprocessing
#	Graph has an edge cut of size 5.
#	Investigating cutsets yields bound 6.
#	User supplied k value of 1.
#	Continuing using k = 6
# Reduced instance has n = 6, m = 16, and lower_bound = 6:
Searching for minimum-sized set of weights, timeout set at 300
# 	Call guess_weight with k = 6
Timed out after 300 seconds
         178868435 function calls (177704103 primitive calls) in 300.000 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
  2928842   46.378    0.000   46.378    0.000 {built-in method numpy.linalg.lapack_lite.dgelsd}
  1464422   43.331    0.000  166.195    0.000 linalg.py:1830(lstsq)
 16690976   26.824    0.000   26.824    0.000 {built-in method numpy.core.multiarray.array}
  1464422   19.872    0.000  284.688    0.000 flow.py:343(add_constraint)
   789585   12.111    0.000   20.357    0.000 function_base.py:4740(insert)
  1464422   12.039    0.000  208.907    0.000 flow.py:296(_test_row)
  4290808   10.930    0.000   15.141    0.000 defmatrix.py:314(__getitem__)
   593618    9.591    0.000   16.724    0.000 linalg.py:296(solve)
8544134/7397687    9.029    0.000   10.248    0.000 defmatrix.py:292(__array_finalize__)
  1491982    7.657    0.000    7.657    0.000 {method 'reduce' of 'numpy.ufunc' objects}
  7329684    6.421    0.000    6.421    0.000 {built-in method numpy.core.multiarray.zeros}
   789913    5.781    0.000   16.367    0.000 flow.py:239(__init__)
  3367970    5.539    0.000    5.539    0.000 {method 'astype' of 'numpy.ndarray' objects}
      328    4.822    0.015  299.983    0.915 dp.py:14(solve)
  1146119    4.388    0.000    5.979    0.000 {method 'dot' of 'numpy.ndarray' objects}
   608258    4.272    0.000    8.982    0.000 flow.py:553(push)
  1464421    4.031    0.000   12.698    0.000 fromnumeric.py:1710(sum)
  2929062    4.017    0.000   10.809    0.000 fromnumeric.py:1364(ravel)
 20645811    4.014    0.000    4.014    0.000 {built-in method builtins.isinstance}
  2265152    3.523    0.000    4.113    0.000 {method 'copy' of 'numpy.ndarray' objects}
  4909883    3.492    0.000    8.610    0.000 numeric.py:463(asarray)
  1464421    3.409    0.000    8.243    0.000 linalg.py:180(_fastCopyAndTranspose)
  4116080    3.236    0.000   10.403    0.000 linalg.py:106(_makearray)
  2928842    3.223    0.000    3.223    0.000 {built-in method numpy.core.multiarray._fastCopyAndTranspose}
  2929062    3.131    0.000    3.131    0.000 {method 'ravel' of 'numpy.ndarray' objects}
  2058040    2.717    0.000    3.301    0.000 linalg.py:139(_commonType)
   607699    2.478    0.000    3.173    0.000 flow.py:505(copy)
  7915724    2.476    0.000    2.476    0.000 {built-in method builtins.min}
  2931812    2.231    0.000    2.747    0.000 numeric.py:534(asanyarray)
  1464421    2.118    0.000    2.753    0.000 linalg.py:168(_to_native_byte_order)
  2928844    1.957    0.000    3.538    0.000 {method 'transpose' of 'numpy.ndarray' objects}
   608258    1.473    0.000    1.537    0.000 flow.py:584(distribute)
   789913    1.437    0.000    7.799    0.000 defmatrix.py:246(__new__)
  1464422    1.277    0.000    1.442    0.000 linalg.py:192(_assertRank2)
  3522460    1.272    0.000    1.812    0.000 linalg.py:111(isComplexType)
  3522806    1.269    0.000    1.269    0.000 {built-in method builtins.max}
 12800545    1.231    0.000    1.231    0.000 {built-in method builtins.len}
   789585    1.159    0.000    1.159    0.000 numeric.py:1490(rollaxis)
  7645752    1.131    0.000    1.131    0.000 {built-in method builtins.issubclass}
   950262    0.950    0.000    1.105    0.000 numeric.py:2160(isscalar)
   800903    0.898    0.000    4.199    0.000 {method 'view' of 'numpy.ndarray' objects}
   789757    0.853    0.000    0.853    0.000 {built-in method numpy.core.multiarray.empty}
   789585    0.809    0.000    1.747    0.000 {method '__array_wrap__' of 'numpy.ndarray' objects}
  4267897    0.779    0.000    0.779    0.000 {built-in method builtins.getattr}
  1464421    0.766    0.000    0.766    0.000 {built-in method math.log}
  1468199    0.748    0.000    8.316    0.000 _methods.py:31(_sum)
   593618    0.703    0.000    1.102    0.000 linalg.py:209(_assertNdSquareness)
  2638234    0.642    0.000    0.642    0.000 {built-in method builtins.hash}
   593618    0.642    0.000    0.642    0.000 {method 'squeeze' of 'numpy.ndarray' objects}
   593618    0.633    0.000    1.275    0.000 fromnumeric.py:1143(squeeze)
  1464422    0.564    0.000    0.889    0.000 linalg.py:124(_realType)
   593618    0.557    0.000    0.557    0.000 linalg.py:101(get_linalg_error_extobj)
   608354    0.541    0.000    0.541    0.000 flow.py:495(__init__)
  2981444    0.507    0.000    0.507    0.000 {method 'append' of 'list' objects}
   593618    0.485    0.000    0.549    0.000 linalg.py:198(_assertRankAtLeast2)
   374054    0.422    0.000    0.422    0.000 linalg.py:89(_raise_linalgerror_singular)
  3148406    0.328    0.000    0.328    0.000 {method '__array_prepare__' of 'numpy.ndarray' objects}
  1466226    0.326    0.000    0.326    0.000 {method 'get' of 'dict' objects}
  1579498    0.309    0.000    0.309    0.000 {method 'tobytes' of 'memoryview' objects}
   133630    0.296    0.000    0.346    0.000 flow.py:431(__init__)
      172    0.185    0.001    1.265    0.007 _linprog.py:212(_solve_simplex)
   789585    0.164    0.000    0.164    0.000 {method 'item' of 'numpy.ndarray' objects}
  1218597    0.156    0.000    0.156    0.000 {method 'items' of 'dict' objects}
  1464422    0.143    0.000    0.143    0.000 linalg.py:130(_linalgRealType)
   160399    0.141    0.000    0.141    0.000 flow.py:464(add_constraint)
   219564    0.132    0.000    0.132    0.000 {method 'tolist' of 'numpy.ndarray' objects}
    14658    0.127    0.000    0.320    0.000 core.py:2913(__array_finalize__)
   941412    0.091    0.000    0.091    0.000 {method 'is_integer' of 'float' objects}
    16461    0.086    0.000    0.171    0.000 core.py:2887(_update_from)
     1803    0.052    0.000    0.200    0.000 core.py:1157(__call__)
31539/25958    0.041    0.000    0.094    0.000 core.py:3320(__setattr__)
    10880    0.038    0.000    0.188    0.000 core.py:3639(filled)
     8672    0.036    0.000    0.047    0.000 partition.py:17(visit)
     1803    0.033    0.000    0.685    0.000 _linprog.py:173(_pivot_row)
    12731    0.030    0.000    0.030    0.000 {built-in method numpy.core.multiarray.copyto}
     5581    0.028    0.000    0.059    0.000 core.py:3351(__setmask__)
      110    0.027    0.000    1.322    0.012 _linprog.py:391(_linprog_simplex)
    10880    0.024    0.000    0.053    0.000 core.py:440(_check_fill_value)
     3606    0.021    0.000    0.171    0.000 core.py:3893(__eq__)
     1975    0.020    0.000    0.393    0.000 _linprog.py:137(_pivot_col)
    18264    0.019    0.000    0.019    0.000 core.py:3540(_get_data)
     5581    0.019    0.000    0.285    0.000 core.py:1810(masked_where)
    80502    0.018    0.000    0.018    0.000 {method 'update' of 'dict' objects}
     1803    0.018    0.000    0.041    0.000 core.py:848(__call__)
     3778    0.018    0.000    0.047    0.000 core.py:4289(count)
     3606    0.017    0.000    0.240    0.000 core.py:5460(min)
    11162    0.016    0.000    0.022    0.000 core.py:1308(make_mask_descr)
    18436    0.015    0.000    0.015    0.000 {built-in method builtins.hasattr}
20951/9231    0.013    0.000    0.062    0.000 partition.py:23(f)
     7212    0.013    0.000    0.032    0.000 numeric.py:2686(seterr)
     3606    0.012    0.000    0.092    0.000 {method 'view' of 'numpy.generic' objects}
     7212    0.012    0.000    0.013    0.000 numeric.py:2786(geterr)
     5581    0.012    0.000    0.064    0.000 core.py:1531(make_mask)
     2270    0.011    0.000    0.012    0.000 guess_weight.py:43(is_feasible)
    16571    0.010    0.000    0.077    0.000 {method 'any' of 'numpy.ndarray' objects}
     3606    0.008    0.000    0.014    0.000 numerictypes.py:603(obj2sctype)
    16571    0.007    0.000    0.068    0.000 _methods.py:37(_any)
     9187    0.007    0.000    0.076    0.000 core.py:599(filled)
     8672    0.006    0.000    0.006    0.000 partition.py:18(<listcomp>)
     1803    0.006    0.000    0.009    0.000 core.py:645(get_masked_subclass)
     5581    0.006    0.000    0.023    0.000 core.py:1626(make_mask_none)
     3606    0.006    0.000    0.075    0.000 core.py:6951(where)
     2640    0.005    0.000    0.008    0.000 shape_base.py:61(atleast_2d)
     2640    0.005    0.000    0.005    0.000 {built-in method numpy.core.multiarray.concatenate}
        1    0.005    0.005  300.000  300.000 guess_weight.py:62(solve)
     3606    0.005    0.000    0.022    0.000 core.py:242(_recursive_extremum_fill_value)
     3606    0.004    0.000    0.019    0.000 numeric.py:3088(__exit__)
     1153    0.004    0.000    0.006    0.000 flow.py:441(is_redundant)
     7212    0.004    0.000    0.004    0.000 {built-in method numpy.core.umath.seterrobj}
     3606    0.004    0.000    0.022    0.000 core.py:1798(_check_mask_axis)
     3606    0.004    0.000    0.021    0.000 numeric.py:3083(__enter__)
     3606    0.004    0.000    0.018    0.000 numerictypes.py:774(__getitem__)
    11162    0.004    0.000    0.004    0.000 core.py:1287(_recursive_make_descr)
     3778    0.004    0.000    0.024    0.000 {method 'sum' of 'numpy.ndarray' objects}
     1803    0.004    0.000    0.205    0.000 core.py:4023(__truediv__)
     3606    0.004    0.000    0.004    0.000 {method 'nonzero' of 'numpy.ndarray' objects}
     3606    0.003    0.000    0.004    0.000 numeric.py:3079(__init__)
     3606    0.003    0.000    0.019    0.000 {method 'min' of 'numpy.ndarray' objects}
     3606    0.003    0.000    0.026    0.000 core.py:253(minimum_fill_value)
     1803    0.003    0.000    0.003    0.000 {built-in method numpy.core.multiarray.can_cast}
     3606    0.003    0.000    0.019    0.000 {method 'all' of 'numpy.ndarray' objects}
    14424    0.002    0.000    0.002    0.000 {built-in method numpy.core.umath.geterrobj}
     1563    0.002    0.000    0.003    0.000 flow.py:550(__hash__)
      559    0.002    0.000    0.002    0.000 partition.py:15(algorithm_u)
     3606    0.002    0.000    0.016    0.000 _methods.py:28(_amin)
     1803    0.002    0.000    0.002    0.000 core.py:659(<listcomp>)
     3606    0.002    0.000    0.005    0.000 core.py:672(getdata)
     4352    0.002    0.000    0.002    0.000 flow.py:444(<genexpr>)
     3606    0.002    0.000    0.016    0.000 _methods.py:40(_all)
     1320    0.002    0.000    0.014    0.000 shape_base.py:180(vstack)
2406/1822    0.002    0.000    0.008    0.000 partition.py:55(b)
      559    0.001    0.000    0.002    0.000 graphs.py:67(labeled_neighborhood)
      130    0.001    0.000    1.326    0.010 flow.py:261(is_redundant)
     3606    0.001    0.000    0.002    0.000 core.py:1344(getmask)
     1320    0.001    0.000    0.010    0.000 shape_base.py:234(<listcomp>)
     1283    0.001    0.000    0.002    0.000 {built-in method builtins.all}
       62    0.001    0.000    0.001    0.000 function_base.py:4538(delete)
      327    0.001    0.000    0.003    0.000 graphs.py:61(sink)
     1803    0.001    0.000    0.001    0.000 core.py:3883(_delegate_binop)
     1962    0.001    0.000    0.002    0.000 graphs.py:126(out_degree)
     3606    0.001    0.000    0.001    0.000 {method 'pop' of 'dict' objects}
     2941    0.001    0.000    0.001    0.000 {built-in method builtins.sum}
      110    0.001    0.000    1.322    0.012 _linprog.py:824(linprog)
       62    0.001    0.000    0.001    0.000 _linprog.py:325(<listcomp>)
       62    0.001    0.000    0.003    0.000 core.py:2753(__new__)
     3606    0.001    0.000    0.001    0.000 {method 'count' of 'tuple' objects}
     1962    0.001    0.000    0.001    0.000 graphs.py:84(out_neighborhood)
     1962    0.001    0.000    0.001    0.000 graphs.py:78(neighborhood)
      110    0.000    0.000    0.000    0.000 index_tricks.py:665(fill_diagonal)
      328    0.000    0.000    0.001    0.000 graphs.py:55(source)
      655    0.000    0.000    0.000    0.000 graphs.py:52(__iter__)
       62    0.000    0.000    0.003    0.000 core.py:6155(array)
      328    0.000    0.000    0.000    0.000 graphs.py:129(in_degree)
      350    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
      110    0.000    0.000    0.001    0.000 fromnumeric.py:1866(any)
       77    0.000    0.000    0.000    0.000 flow.py:533(__eq__)
      328    0.000    0.000    0.000    0.000 graphs.py:87(in_neighborhood)
      439    0.000    0.000    0.000    0.000 flow.py:265(<genexpr>)
      110    0.000    0.000    0.001    0.000 numeric.py:150(ones)
      655    0.000    0.000    0.000    0.000 {built-in method builtins.iter}
      390    0.000    0.000    0.000    0.000 flow.py:422(__hash__)
      130    0.000    0.000    0.000    0.000 flow.py:264(<listcomp>)
      110    0.000    0.000    0.000    0.000 optimize.py:112(__getattr__)
      110    0.000    0.000    0.000    0.000 numeric.py:380(count_nonzero)
      110    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.count_nonzero}
      288    0.000    0.000    0.000    0.000 flow.py:488(__hash__)
       62    0.000    0.000    0.000    0.000 core.py:3562(get_fill_value)
       62    0.000    0.000    0.000    0.000 {method 'indices' of 'slice' objects}
      110    0.000    0.000    0.000    0.000 {built-in method builtins.abs}
       62    0.000    0.000    0.000    0.000 index_tricks.py:650(__getitem__)
      110    0.000    0.000    0.000    0.000 optimize.py:137(_check_unknown_options)
       33    0.000    0.000    0.000    0.000 flow.py:474(__eq__)
      110    0.000    0.000    0.000    0.000 {method 'lower' of 'str' objects}
        1    0.000    0.000  300.000  300.000 toboggan.py:77(find_opt_size)
        2    0.000    0.000    0.000    0.000 twodim_base.py:139(eye)
        1    0.000    0.000    0.000    0.000 flow.py:211(has_bad_bounds)
        2    0.000    0.000    0.000    0.000 signal.py:35(_enum_to_int)
        3    0.000    0.000    0.000    0.000 {built-in method builtins.print}
        1    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.arange}
        3    0.000    0.000    0.000    0.000 {method 'format' of 'str' objects}
        1    0.000    0.000    0.000    0.000 enum.py:215(__call__)
        1    0.000    0.000    0.000    0.000 toboggan.py:39(__enter__)
       12    0.000    0.000    0.000    0.000 guess_weight.py:82(<lambda>)
        1    0.000    0.000    0.000    0.000 signal.py:45(signal)
        2    0.000    0.000    0.000    0.000 {built-in method _signal.alarm}
        1    0.000    0.000    0.000    0.000 toboggan.py:36(handle_timeout)
        7    0.000    0.000    0.000    0.000 guess_weight.py:74(<genexpr>)
        1    0.000    0.000    0.000    0.000 signal.py:25(_int_to_enum)
        1    0.000    0.000    0.000    0.000 getlimits.py:96(__new__)
        1    0.000    0.000    0.000    0.000 {built-in method _signal.signal}
        1    0.000    0.000    0.000    0.000 toboggan.py:44(__exit__)
        1    0.000    0.000    0.000    0.000 toboggan.py:32(__init__)
        1    0.000    0.000    0.000    0.000 enum.py:459(__new__)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}


# All_info	n_in	m_in	n_red	m_red	k_gtrue	k_cut	k_impro	k_opt	time_w	time_p
All_info	42	52	6	16	9	5	6	None	300	0
weights	
Finished instance.

# Timeout is set to 300
# Recovering paths
# Running on instances 10179
# Ground-truth available in file ../../research/instances/rnaseq/zebrafish/78.truth

File 78.graph instance 10178 name ENSDARG00000056322 with n = 37, m = 59, and truth = 13:
[(0, 12, 327), (0, 12, 1), (0, 12, 314), (0, 4, 1), (0, 4, 1), (0, 4, 84), (0, 4, 1), (4, 12, 1), (4, 12, 2), (4, 12, 84), (12, 24, 2), (12, 36, 1), (12, 17, 136), (12, 24, 15), (12, 24, 126), (12, 24, 15), (12, 17, 349), (12, 17, 85), (17, 36, 1), (17, 36, 1), (17, 36, 84), (17, 36, 170), (17, 36, 314), (24, 26, 147), (24, 26, 11), (26, 28, 11), (26, 28, 147), (28, 36, 126), (28, 36, 15), (28, 36, 17)]
# Preprocessing
#	Graph has an edge cut of size 10.
#	Investigating cutsets yields bound 10.
#	User supplied k value of 1.
#	Continuing using k = 10
# Reduced instance has n = 8, m = 30, and lower_bound = 10:
Searching for minimum-sized set of weights, timeout set at 300
# 	Call guess_weight with k = 10
Timed out after 300 seconds
         137117776 function calls (137099230 primitive calls) in 300.000 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
 19577779  141.573    0.000  235.855    0.000 flow.py:553(push)
 19577779   58.741    0.000   72.977    0.000 flow.py:505(copy)
        1   52.513   52.513  300.000  300.000 dp.py:14(solve)
 19577780   21.271    0.000   21.305    0.000 flow.py:584(distribute)
 19577778   11.625    0.000   11.625    0.000 flow.py:464(add_constraint)
 19577780   10.850    0.000   10.850    0.000 flow.py:495(__init__)
 39155560    3.386    0.000    3.386    0.000 {method 'items' of 'dict' objects}
     3885    0.019    0.000    0.025    0.000 partition.py:17(visit)
16990/3886    0.006    0.000    0.035    0.000 partition.py:23(f)
8335/2906    0.004    0.000    0.023    0.000 partition.py:55(b)
        1    0.004    0.004    0.004    0.004 linalg.py:296(solve)
    38877    0.003    0.000    0.003    0.000 {method 'append' of 'list' objects}
     3885    0.003    0.000    0.003    0.000 partition.py:18(<listcomp>)
       20    0.000    0.000    0.000    0.000 {built-in method numpy.linalg.lapack_lite.dgelsd}
       10    0.000    0.000    0.001    0.000 linalg.py:1830(lstsq)
       10    0.000    0.000    0.006    0.001 flow.py:343(add_constraint)
      120    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.array}
        9    0.000    0.000    0.000    0.000 function_base.py:4740(insert)
       10    0.000    0.000    0.000    0.000 flow.py:239(__init__)
       10    0.000    0.000    0.005    0.001 flow.py:296(_test_row)
       55    0.000    0.000    0.000    0.000 defmatrix.py:314(__getitem__)
    70/57    0.000    0.000    0.000    0.000 defmatrix.py:292(__array_finalize__)
       10    0.000    0.000    0.000    0.000 {method 'reduce' of 'numpy.ufunc' objects}
       12    0.000    0.000    0.000    0.000 {method 'dot' of 'numpy.ndarray' objects}
       22    0.000    0.000    0.000    0.000 {method 'astype' of 'numpy.ndarray' objects}
       10    0.000    0.000    0.000    0.000 linalg.py:180(_fastCopyAndTranspose)
       53    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.zeros}
      188    0.000    0.000    0.000    0.000 {built-in method builtins.isinstance}
       20    0.000    0.000    0.000    0.000 {method 'copy' of 'numpy.ndarray' objects}
       20    0.000    0.000    0.000    0.000 fromnumeric.py:1364(ravel)
       10    0.000    0.000    0.000    0.000 fromnumeric.py:1710(sum)
       31    0.000    0.000    0.000    0.000 numeric.py:463(asarray)
       22    0.000    0.000    0.000    0.000 linalg.py:106(_makearray)
       20    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray._fastCopyAndTranspose}
       20    0.000    0.000    0.000    0.000 {method 'ravel' of 'numpy.ndarray' objects}
       10    0.000    0.000    0.000    0.000 defmatrix.py:246(__new__)
       11    0.000    0.000    0.000    0.000 linalg.py:139(_commonType)
        1    0.000    0.000  300.000  300.000 toboggan.py:77(find_opt_size)
        9    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.empty}
       51    0.000    0.000    0.000    0.000 {built-in method builtins.min}
       20    0.000    0.000    0.000    0.000 numeric.py:534(asanyarray)
       10    0.000    0.000    0.000    0.000 linalg.py:168(_to_native_byte_order)
        1    0.000    0.000    0.000    0.000 flow.py:211(has_bad_bounds)
       10    0.000    0.000    0.000    0.000 {method 'view' of 'numpy.ndarray' objects}
       20    0.000    0.000    0.000    0.000 {method 'transpose' of 'numpy.ndarray' objects}
        9    0.000    0.000    0.000    0.000 numeric.py:1490(rollaxis)
       23    0.000    0.000    0.000    0.000 {built-in method builtins.max}
        2    0.000    0.000    0.000    0.000 twodim_base.py:139(eye)
        1    0.000    0.000  300.000  300.000 guess_weight.py:62(solve)
      108    0.000    0.000    0.000    0.000 {built-in method builtins.len}
       10    0.000    0.000    0.000    0.000 linalg.py:192(_assertRank2)
        9    0.000    0.000    0.000    0.000 {method '__array_wrap__' of 'numpy.ndarray' objects}
       32    0.000    0.000    0.000    0.000 {built-in method builtins.hash}
       21    0.000    0.000    0.000    0.000 linalg.py:111(isComplexType)
       10    0.000    0.000    0.000    0.000 _methods.py:31(_sum)
        3    0.000    0.000    0.000    0.000 {built-in method builtins.print}
        1    0.000    0.000    0.000    0.000 partition.py:15(algorithm_u)
        4    0.000    0.000    0.000    0.000 numeric.py:2160(isscalar)
        1    0.000    0.000    0.000    0.000 graphs.py:67(labeled_neighborhood)
       10    0.000    0.000    0.000    0.000 {built-in method math.log}
        3    0.000    0.000    0.000    0.000 {method 'format' of 'str' objects}
        1    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.arange}
        1    0.000    0.000    0.000    0.000 signal.py:45(signal)
       10    0.000    0.000    0.000    0.000 linalg.py:124(_realType)
        1    0.000    0.000    0.000    0.000 flow.py:431(__init__)
        2    0.000    0.000    0.000    0.000 signal.py:35(_enum_to_int)
       43    0.000    0.000    0.000    0.000 {built-in method builtins.issubclass}
        1    0.000    0.000    0.000    0.000 toboggan.py:39(__enter__)
        9    0.000    0.000    0.000    0.000 {method 'item' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 flow.py:550(__hash__)
        1    0.000    0.000    0.000    0.000 graphs.py:52(__iter__)
       19    0.000    0.000    0.000    0.000 {method 'tobytes' of 'memoryview' objects}
        1    0.000    0.000    0.000    0.000 toboggan.py:36(handle_timeout)
        1    0.000    0.000    0.000    0.000 enum.py:215(__call__)
        1    0.000    0.000    0.000    0.000 enum.py:459(__new__)
        1    0.000    0.000    0.000    0.000 fromnumeric.py:1143(squeeze)
        2    0.000    0.000    0.000    0.000 {built-in method _signal.alarm}
       10    0.000    0.000    0.000    0.000 {method 'get' of 'dict' objects}
        9    0.000    0.000    0.000    0.000 guess_weight.py:74(<genexpr>)
        1    0.000    0.000    0.000    0.000 {built-in method builtins.sorted}
        1    0.000    0.000    0.000    0.000 toboggan.py:44(__exit__)
        1    0.000    0.000    0.000    0.000 graphs.py:55(source)
        1    0.000    0.000    0.000    0.000 {method 'tolist' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 toboggan.py:32(__init__)
        1    0.000    0.000    0.000    0.000 {built-in method _signal.signal}
       10    0.000    0.000    0.000    0.000 linalg.py:130(_linalgRealType)
        1    0.000    0.000    0.000    0.000 graphs.py:87(in_neighborhood)
       22    0.000    0.000    0.000    0.000 {built-in method builtins.getattr}
        1    0.000    0.000    0.000    0.000 linalg.py:198(_assertRankAtLeast2)
       11    0.000    0.000    0.000    0.000 guess_weight.py:78(<genexpr>)
        1    0.000    0.000    0.000    0.000 {method 'squeeze' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 linalg.py:101(get_linalg_error_extobj)
        1    0.000    0.000    0.000    0.000 signal.py:25(_int_to_enum)
        1    0.000    0.000    0.000    0.000 linalg.py:209(_assertNdSquareness)
        1    0.000    0.000    0.000    0.000 flow.py:488(__hash__)
       21    0.000    0.000    0.000    0.000 {method '__array_prepare__' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 {built-in method builtins.iter}
       10    0.000    0.000    0.000    0.000 {method 'is_integer' of 'float' objects}
        1    0.000    0.000    0.000    0.000 graphs.py:129(in_degree)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}


# All_info	n_in	m_in	n_red	m_red	k_gtrue	k_cut	k_impro	k_opt	time_w	time_p
All_info	37	59	8	30	13	10	10	None	300	0
weights	
Finished instance.

# Timeout is set to 300
# Recovering paths
# Running on instances 10286
# Ground-truth available in file ../../research/instances/rnaseq/zebrafish/78.truth

File 78.graph instance 10285 name ENSDARG00000028148 with n = 22, m = 31, and truth = 7:
[(0, 9, 16), (0, 9, 11), (0, 9, 11), (0, 9, 5), (0, 9, 220), (9, 12, 250), (9, 12, 13), (12, 15, 27), (12, 15, 236), (15, 17, 39), (15, 17, 224), (17, 21, 225), (17, 21, 11), (17, 21, 11), (17, 21, 16)]
# Preprocessing
#	Graph has an edge cut of size 5.
#	Investigating cutsets yields bound 5.
#	User supplied k value of 1.
#	Continuing using k = 5
# Reduced instance has n = 6, m = 15, and lower_bound = 5:
Searching for minimum-sized set of weights, timeout set at 300
# 	Call guess_weight with k = 5
# 	Call guess_weight with k = 6
Timed out after 300 seconds
         181977790 function calls (180644720 primitive calls) in 300.000 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
  2982164   45.025    0.000   45.025    0.000 {built-in method numpy.linalg.lapack_lite.dgelsd}
  1491082   43.219    0.000  164.961    0.000 linalg.py:1830(lstsq)
 17005949   27.008    0.000   27.008    0.000 {built-in method numpy.core.multiarray.array}
  1491082   21.493    0.000  285.380    0.000 flow.py:343(add_constraint)
   871752   13.076    0.000   22.016    0.000 function_base.py:4740(insert)
  1491082   11.096    0.000  202.814    0.000 flow.py:296(_test_row)
  4378913   10.918    0.000   15.087    0.000 defmatrix.py:314(__getitem__)
9153226/7841564    9.607    0.000   10.921    0.000 defmatrix.py:292(__array_finalize__)
   512003    8.206    0.000   14.331    0.000 linalg.py:296(solve)
  1531977    7.748    0.000    7.748    0.000 {method 'reduce' of 'numpy.ufunc' objects}
  7466780    6.348    0.000    6.348    0.000 {built-in method numpy.core.multiarray.zeros}
   872037    6.174    0.000   17.650    0.000 flow.py:239(__init__)
  3319293    5.412    0.000    5.412    0.000 {method 'astype' of 'numpy.ndarray' objects}
  1311377    5.125    0.000    7.056    0.000 {method 'dot' of 'numpy.ndarray' objects}
      285    4.493    0.016  299.990    1.053 dp.py:14(solve)
 21718302    4.213    0.000    4.213    0.000 {built-in method builtins.isinstance}
  2982510    4.117    0.000   10.977    0.000 fromnumeric.py:1364(ravel)
   516808    3.985    0.000    8.021    0.000 flow.py:553(push)
  1491081    3.887    0.000   12.561    0.000 fromnumeric.py:1710(sum)
  2379175    3.729    0.000    4.363    0.000 {method 'copy' of 'numpy.ndarray' objects}
  4884302    3.523    0.000    8.609    0.000 numeric.py:463(asarray)
  1491082    3.402    0.000    8.283    0.000 linalg.py:180(_fastCopyAndTranspose)
  2982164    3.261    0.000    3.261    0.000 {built-in method numpy.core.multiarray._fastCopyAndTranspose}
  4006170    3.142    0.000   10.100    0.000 linalg.py:106(_makearray)
  2982510    3.131    0.000    3.131    0.000 {method 'ravel' of 'numpy.ndarray' objects}
  2003085    2.653    0.000    3.198    0.000 linalg.py:139(_commonType)
  7967428    2.450    0.000    2.450    0.000 {built-in method builtins.min}
  2986860    2.253    0.000    2.799    0.000 numeric.py:534(asanyarray)
  1491082    2.176    0.000    2.851    0.000 linalg.py:168(_to_native_byte_order)
   516421    2.123    0.000    2.713    0.000 flow.py:505(copy)
  2982164    1.959    0.000    3.526    0.000 {method 'transpose' of 'numpy.ndarray' objects}
   872037    1.500    0.000    8.409    0.000 defmatrix.py:246(__new__)
  1491082    1.301    0.000    1.462    0.000 linalg.py:192(_assertRank2)
   516808    1.268    0.000    1.323    0.000 flow.py:584(distribute)
  3494688    1.254    0.000    1.254    0.000 {built-in method builtins.max}
 13157427    1.243    0.000    1.243    0.000 {built-in method builtins.len}
   871752    1.224    0.000    1.224    0.000 numeric.py:1490(rollaxis)
  3494166    1.153    0.000    1.695    0.000 linalg.py:111(isComplexType)
  7511040    1.097    0.000    1.097    0.000 {built-in method builtins.issubclass}
   888335    1.008    0.000    4.671    0.000 {method 'view' of 'numpy.ndarray' objects}
   951802    0.977    0.000    1.138    0.000 numeric.py:2160(isscalar)
   871994    0.926    0.000    0.926    0.000 {built-in method numpy.core.multiarray.empty}
   871752    0.909    0.000    1.913    0.000 {method '__array_wrap__' of 'numpy.ndarray' objects}
  4231136    0.800    0.000    0.800    0.000 {built-in method builtins.getattr}
  1491082    0.783    0.000    0.783    0.000 {built-in method math.log}
  1496675    0.718    0.000    8.334    0.000 _methods.py:31(_sum)
  2836365    0.698    0.000    0.698    0.000 {built-in method builtins.hash}
   512003    0.607    0.000    0.947    0.000 linalg.py:209(_assertNdSquareness)
  1491082    0.600    0.000    0.918    0.000 linalg.py:124(_realType)
   512003    0.550    0.000    0.550    0.000 {method 'squeeze' of 'numpy.ndarray' objects}
   512003    0.544    0.000    1.094    0.000 fromnumeric.py:1143(squeeze)
  3032347    0.540    0.000    0.540    0.000 {method 'append' of 'list' objects}
   512003    0.471    0.000    0.471    0.000 linalg.py:101(get_linalg_error_extobj)
   516990    0.459    0.000    0.459    0.000 flow.py:495(__init__)
   512003    0.425    0.000    0.480    0.000 linalg.py:198(_assertRankAtLeast2)
   343438    0.393    0.000    0.393    0.000 linalg.py:89(_raise_linalgerror_singular)
  1743789    0.340    0.000    0.340    0.000 {method 'tobytes' of 'memoryview' objects}
  3150727    0.324    0.000    0.324    0.000 {method '__array_prepare__' of 'numpy.ndarray' objects}
  1493759    0.319    0.000    0.319    0.000 {method 'get' of 'dict' objects}
      242    0.278    0.001    1.866    0.008 _linprog.py:212(_solve_simplex)
   109605    0.241    0.000    0.281    0.000 flow.py:431(__init__)
    21718    0.187    0.000    0.473    0.000 core.py:2913(__array_finalize__)
   871752    0.178    0.000    0.178    0.000 {method 'item' of 'numpy.ndarray' objects}
  1491082    0.166    0.000    0.166    0.000 linalg.py:130(_linalgRealType)
  1035592    0.133    0.000    0.133    0.000 {method 'items' of 'dict' objects}
    24394    0.127    0.000    0.254    0.000 core.py:2887(_update_from)
   126822    0.109    0.000    0.109    0.000 flow.py:464(add_constraint)
   168565    0.101    0.000    0.101    0.000 {method 'tolist' of 'numpy.ndarray' objects}
     2676    0.076    0.000    0.296    0.000 core.py:1157(__call__)
   805253    0.075    0.000    0.075    0.000 {method 'is_integer' of 'float' objects}
46626/38356    0.060    0.000    0.137    0.000 core.py:3320(__setattr__)
    16124    0.056    0.000    0.276    0.000 core.py:3639(filled)
     2676    0.048    0.000    1.009    0.000 _linprog.py:173(_pivot_row)
    18906    0.044    0.000    0.044    0.000 {built-in method numpy.core.multiarray.copyto}
      174    0.041    0.000    1.952    0.011 _linprog.py:391(_linprog_simplex)
     8270    0.040    0.000    0.084    0.000 core.py:3351(__setmask__)
    16124    0.035    0.000    0.077    0.000 core.py:440(_check_fill_value)
     7398    0.031    0.000    0.040    0.000 partition.py:17(visit)
     5352    0.030    0.000    0.253    0.000 core.py:3893(__eq__)
     2918    0.030    0.000    0.576    0.000 _linprog.py:137(_pivot_col)
   119294    0.028    0.000    0.028    0.000 {method 'update' of 'dict' objects}
    27070    0.027    0.000    0.027    0.000 core.py:3540(_get_data)
     8270    0.027    0.000    0.416    0.000 core.py:1810(masked_where)
     2676    0.027    0.000    0.061    0.000 core.py:848(__call__)
     5594    0.026    0.000    0.069    0.000 core.py:4289(count)
     5352    0.026    0.000    0.355    0.000 core.py:5460(min)
    16540    0.022    0.000    0.031    0.000 core.py:1308(make_mask_descr)
    27312    0.022    0.000    0.022    0.000 {built-in method builtins.hasattr}
    10704    0.020    0.000    0.048    0.000 numeric.py:2686(seterr)
     5352    0.019    0.000    0.136    0.000 {method 'view' of 'numpy.generic' objects}
    10704    0.018    0.000    0.019    0.000 numeric.py:2786(geterr)
     8270    0.017    0.000    0.093    0.000 core.py:1531(make_mask)
    24568    0.015    0.000    0.115    0.000 {method 'any' of 'numpy.ndarray' objects}
18899/7785    0.011    0.000    0.054    0.000 partition.py:23(f)
     5352    0.011    0.000    0.020    0.000 numerictypes.py:603(obj2sctype)
    24568    0.010    0.000    0.099    0.000 _methods.py:37(_any)
    13622    0.010    0.000    0.112    0.000 core.py:599(filled)
     2676    0.009    0.000    0.013    0.000 core.py:645(get_masked_subclass)
     8270    0.009    0.000    0.033    0.000 core.py:1626(make_mask_none)
     5352    0.009    0.000    0.111    0.000 core.py:6951(where)
     4176    0.008    0.000    0.013    0.000 shape_base.py:61(atleast_2d)
     4176    0.008    0.000    0.008    0.000 {built-in method numpy.core.multiarray.concatenate}
     2034    0.007    0.000    0.012    0.000 flow.py:441(is_redundant)
     5352    0.007    0.000    0.033    0.000 core.py:242(_recursive_extremum_fill_value)
     1182    0.006    0.000    0.007    0.000 guess_weight.py:43(is_feasible)
     5352    0.006    0.000    0.028    0.000 numeric.py:3088(__exit__)
    10704    0.006    0.000    0.006    0.000 {built-in method numpy.core.umath.seterrobj}
     5352    0.006    0.000    0.026    0.000 numerictypes.py:774(__getitem__)
     5352    0.006    0.000    0.033    0.000 core.py:1798(_check_mask_axis)
    16540    0.005    0.000    0.005    0.000 core.py:1287(_recursive_make_descr)
     5352    0.005    0.000    0.032    0.000 numeric.py:3083(__enter__)
     5352    0.005    0.000    0.005    0.000 {method 'nonzero' of 'numpy.ndarray' objects}
     2676    0.005    0.000    0.303    0.000 core.py:4023(__truediv__)
     5594    0.005    0.000    0.036    0.000 {method 'sum' of 'numpy.ndarray' objects}
     7398    0.005    0.000    0.005    0.000 partition.py:18(<listcomp>)
     5352    0.005    0.000    0.039    0.000 core.py:253(minimum_fill_value)
     5352    0.005    0.000    0.028    0.000 {method 'min' of 'numpy.ndarray' objects}
     5352    0.005    0.000    0.006    0.000 numeric.py:3079(__init__)
     2676    0.004    0.000    0.004    0.000 {built-in method numpy.core.multiarray.can_cast}
     5382    0.004    0.000    0.028    0.000 {method 'all' of 'numpy.ndarray' objects}
    21408    0.003    0.000    0.003    0.000 {built-in method numpy.core.umath.geterrobj}
     7330    0.003    0.000    0.003    0.000 flow.py:444(<genexpr>)
        2    0.003    0.002  300.000  150.000 guess_weight.py:62(solve)
     2676    0.003    0.000    0.003    0.000 core.py:659(<listcomp>)
4864/2840    0.003    0.000    0.015    0.000 partition.py:55(b)
     5352    0.003    0.000    0.007    0.000 core.py:672(getdata)
     5352    0.003    0.000    0.023    0.000 _methods.py:28(_amin)
     2088    0.002    0.000    0.022    0.000 shape_base.py:180(vstack)
      238    0.002    0.000    1.959    0.008 flow.py:261(is_redundant)
     5382    0.002    0.000    0.024    0.000 _methods.py:40(_all)
     2088    0.002    0.000    0.015    0.000 shape_base.py:234(<listcomp>)
     1329    0.002    0.000    0.002    0.000 flow.py:550(__hash__)
     5352    0.002    0.000    0.003    0.000 core.py:1344(getmask)
     2272    0.001    0.000    0.004    0.000 {built-in method builtins.all}
      387    0.001    0.000    0.001    0.000 partition.py:15(algorithm_u)
     2676    0.001    0.000    0.002    0.000 core.py:3883(_delegate_binop)
     5352    0.001    0.000    0.001    0.000 {method 'pop' of 'dict' objects}
      387    0.001    0.000    0.001    0.000 graphs.py:67(labeled_neighborhood)
       68    0.001    0.000    0.001    0.000 function_base.py:4538(delete)
      174    0.001    0.000    1.953    0.011 _linprog.py:824(linprog)
     5352    0.001    0.000    0.001    0.000 {method 'count' of 'tuple' objects}
      285    0.001    0.000    0.003    0.000 graphs.py:61(sink)
     1710    0.001    0.000    0.002    0.000 graphs.py:126(out_degree)
      174    0.001    0.000    0.001    0.000 index_tricks.py:665(fill_diagonal)
       68    0.001    0.000    0.001    0.000 _linprog.py:325(<listcomp>)
       68    0.001    0.000    0.003    0.000 core.py:2753(__new__)
     1710    0.001    0.000    0.001    0.000 graphs.py:84(out_neighborhood)
      265    0.001    0.000    0.001    0.000 flow.py:533(__eq__)
     1826    0.001    0.000    0.001    0.000 {built-in method builtins.sum}
       48    0.000    0.000    0.000    0.000 _linprog.py:327(<listcomp>)
     1716    0.000    0.000    0.000    0.000 graphs.py:78(neighborhood)
      286    0.000    0.000    0.001    0.000 graphs.py:55(source)
      174    0.000    0.000    0.002    0.000 fromnumeric.py:1866(any)
      572    0.000    0.000    0.000    0.000 graphs.py:52(__iter__)
      374    0.000    0.000    0.001    0.000 {method 'add' of 'set' objects}
      771    0.000    0.000    0.000    0.000 flow.py:265(<genexpr>)
       68    0.000    0.000    0.003    0.000 core.py:6155(array)
      174    0.000    0.000    0.001    0.000 numeric.py:150(ones)
      286    0.000    0.000    0.000    0.000 graphs.py:129(in_degree)
      238    0.000    0.000    0.000    0.000 flow.py:264(<listcomp>)
      174    0.000    0.000    0.000    0.000 optimize.py:112(__getattr__)
      174    0.000    0.000    0.000    0.000 numeric.py:380(count_nonzero)
       30    0.000    0.000    0.000    0.000 numeric.py:2584(array_equal)
      572    0.000    0.000    0.000    0.000 {built-in method builtins.iter}
      174    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.count_nonzero}
      286    0.000    0.000    0.000    0.000 graphs.py:87(in_neighborhood)
      352    0.000    0.000    0.000    0.000 flow.py:422(__hash__)
       99    0.000    0.000    0.000    0.000 flow.py:474(__eq__)
       68    0.000    0.000    0.000    0.000 core.py:3562(get_fill_value)
       30    0.000    0.000    0.001    0.000 flow.py:402(__eq__)
      174    0.000    0.000    0.000    0.000 {built-in method builtins.abs}
      307    0.000    0.000    0.000    0.000 flow.py:488(__hash__)
       68    0.000    0.000    0.000    0.000 {method 'indices' of 'slice' objects}
      174    0.000    0.000    0.000    0.000 {method 'lower' of 'str' objects}
      174    0.000    0.000    0.000    0.000 optimize.py:137(_check_unknown_options)
       68    0.000    0.000    0.000    0.000 index_tricks.py:650(__getitem__)
        1    0.000    0.000  300.000  300.000 toboggan.py:77(find_opt_size)
        2    0.000    0.000    0.000    0.000 flow.py:211(has_bad_bounds)
        4    0.000    0.000    0.000    0.000 twodim_base.py:139(eye)
        1    0.000    0.000    0.000    0.000 flow.py:81(_compute_weight_bounds)
        1    0.000    0.000    0.000    0.000 flow.py:60(_compute_max_weight_bounds)
        2    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.arange}
        4    0.000    0.000    0.000    0.000 {built-in method builtins.print}
        4    0.000    0.000    0.000    0.000 {method 'format' of 'str' objects}
        1    0.000    0.000    0.000    0.000 toboggan.py:39(__enter__)
        2    0.000    0.000    0.000    0.000 signal.py:35(_enum_to_int)
       14    0.000    0.000    0.000    0.000 guess_weight.py:74(<genexpr>)
        1    0.000    0.000    0.000    0.000 signal.py:45(signal)
        2    0.000    0.000    0.000    0.000 {built-in method _signal.alarm}
        1    0.000    0.000    0.000    0.000 toboggan.py:36(handle_timeout)
        1    0.000    0.000    0.000    0.000 toboggan.py:44(__exit__)
        1    0.000    0.000    0.000    0.000 flow.py:198(try_larger_k)
        1    0.000    0.000    0.000    0.000 enum.py:215(__call__)
        1    0.000    0.000    0.000    0.000 {built-in method builtins.sorted}
        1    0.000    0.000    0.000    0.000 getlimits.py:96(__new__)
        1    0.000    0.000    0.000    0.000 {built-in method _signal.signal}
        1    0.000    0.000    0.000    0.000 enum.py:459(__new__)
        1    0.000    0.000    0.000    0.000 signal.py:25(_int_to_enum)
       11    0.000    0.000    0.000    0.000 guess_weight.py:82(<lambda>)
        1    0.000    0.000    0.000    0.000 flow.py:72(<dictcomp>)
        1    0.000    0.000    0.000    0.000 toboggan.py:32(__init__)
        1    0.000    0.000    0.000    0.000 flow.py:97(<listcomp>)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        6    0.000    0.000    0.000    0.000 guess_weight.py:78(<genexpr>)
        1    0.000    0.000    0.000    0.000 flow.py:101(<listcomp>)


# All_info	n_in	m_in	n_red	m_red	k_gtrue	k_cut	k_impro	k_opt	time_w	time_p
All_info	22	31	6	15	7	5	5	None	300	0
weights	
Finished instance.

# Timeout is set to 300
# Recovering paths
# Running on instances 374
# Ground-truth available in file ../../research/instances/rnaseq/zebrafish/16.truth

File 16.graph instance 373 name ENSDARG00000069311 with n = 18, m = 27, and truth = 9:
[(0, 2, 11), (0, 2, 1484), (2, 15, 2), (2, 15, 187), (2, 8, 6), (2, 15, 477), (2, 15, 2), (2, 8, 557), (2, 15, 2), (2, 15, 262), (8, 15, 17), (8, 15, 546), (15, 17, 11), (15, 17, 1484)]
# Preprocessing
#	Graph has an edge cut of size 8.
#	Investigating cutsets yields bound 8.
#	User supplied k value of 1.
#	Continuing using k = 8
# Reduced instance has n = 5, m = 14, and lower_bound = 8:
Searching for minimum-sized set of weights, timeout set at 300
# 	Call guess_weight with k = 8
# 	Call guess_weight with k = 9
Timed out after 300 seconds
         160280456 function calls (159055603 primitive calls) in 300.000 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
  2557152   52.664    0.000   52.664    0.000 {built-in method numpy.linalg.lapack_lite.dgelsd}
  1278576   40.692    0.000  164.928    0.000 linalg.py:1830(lstsq)
 14511066   25.022    0.000   25.022    0.000 {built-in method numpy.core.multiarray.array}
  1278576   19.837    0.000  282.369    0.000 flow.py:343(add_constraint)
  3338161   11.608    0.000   16.837    0.000 defmatrix.py:314(__getitem__)
  1278576   11.370    0.000  209.069    0.000 flow.py:296(_test_row)
   611707   10.482    0.000   18.193    0.000 linalg.py:296(solve)
9230807/8007384   10.170    0.000   11.560    0.000 defmatrix.py:292(__array_finalize__)
   611714   10.155    0.000   16.972    0.000 function_base.py:4740(insert)
   611711    7.271    0.000   12.632    0.000 flow.py:553(push)
  1278942    6.999    0.000    6.999    0.000 {method 'reduce' of 'numpy.ufunc' objects}
  6392982    6.109    0.000    6.109    0.000 {built-in method numpy.core.multiarray.zeros}
  1223423    5.649    0.000    8.598    0.000 {method 'dot' of 'numpy.ndarray' objects}
  2881260    5.205    0.000    5.205    0.000 {method 'astype' of 'numpy.ndarray' objects}
        1    4.873    4.873  300.000  300.000 dp.py:14(solve)
   611716    4.804    0.000   13.541    0.000 flow.py:239(__init__)
  2557154    3.865    0.000   10.195    0.000 fromnumeric.py:1364(ravel)
 19464556    3.853    0.000    3.853    0.000 {built-in method builtins.isinstance}
  1278576    3.691    0.000   11.648    0.000 fromnumeric.py:1710(sum)
  4392334    3.312    0.000    8.084    0.000 numeric.py:463(asarray)
  2557152    3.215    0.000    3.215    0.000 {built-in method numpy.core.multiarray._fastCopyAndTranspose}
  1278576    3.114    0.000    7.935    0.000 linalg.py:180(_fastCopyAndTranspose)
  1890435    3.107    0.000    3.611    0.000 {method 'copy' of 'numpy.ndarray' objects}
  3780566    3.077    0.000   10.114    0.000 linalg.py:106(_makearray)
  2557154    2.949    0.000    2.949    0.000 {method 'ravel' of 'numpy.ndarray' objects}
   611709    2.933    0.000    3.840    0.000 flow.py:505(copy)
  1890283    2.714    0.000    3.270    0.000 linalg.py:139(_commonType)
  7004602    2.308    0.000    2.308    0.000 {built-in method builtins.min}
  2557191    2.069    0.000    2.537    0.000 numeric.py:534(asanyarray)
  1278576    2.042    0.000    2.668    0.000 linalg.py:168(_to_native_byte_order)
  2557152    1.873    0.000    3.355    0.000 {method 'transpose' of 'numpy.ndarray' objects}
   611711    1.518    0.000    1.521    0.000 flow.py:584(distribute)
  1223416    1.354    0.000    1.574    0.000 numeric.py:2160(isscalar)
  1278576    1.244    0.000    1.394    0.000 linalg.py:192(_assertRank2)
  3168905    1.212    0.000    1.212    0.000 {built-in method builtins.max}
 11397078    1.176    0.000    1.176    0.000 {built-in method builtins.len}
   611715    1.161    0.000    6.242    0.000 defmatrix.py:246(__new__)
  3168859    1.126    0.000    1.670    0.000 linalg.py:111(isComplexType)
  6949521    1.100    0.000    1.100    0.000 {built-in method builtins.issubclass}
   611714    0.953    0.000    0.953    0.000 numeric.py:1490(rollaxis)
   611707    0.759    0.000    1.184    0.000 linalg.py:209(_assertNdSquareness)
   611710    0.738    0.000    0.738    0.000 flow.py:495(__init__)
  3782586    0.716    0.000    0.716    0.000 {built-in method builtins.getattr}
   611861    0.714    0.000    3.097    0.000 {method 'view' of 'numpy.ndarray' objects}
   611707    0.708    0.000    0.708    0.000 {method 'squeeze' of 'numpy.ndarray' objects}
   611716    0.705    0.000    0.705    0.000 {built-in method numpy.core.multiarray.empty}
   611714    0.704    0.000    1.444    0.000 {method '__array_wrap__' of 'numpy.ndarray' objects}
   611707    0.691    0.000    1.398    0.000 fromnumeric.py:1143(squeeze)
  1278576    0.669    0.000    0.669    0.000 {built-in method math.log}
  1278626    0.625    0.000    7.622    0.000 _methods.py:31(_sum)
   611707    0.604    0.000    0.604    0.000 linalg.py:101(get_linalg_error_extobj)
  2049571    0.545    0.000    0.545    0.000 {built-in method builtins.hash}
   611707    0.543    0.000    0.602    0.000 linalg.py:198(_assertRankAtLeast2)
  1278576    0.523    0.000    0.809    0.000 linalg.py:124(_realType)
   449653    0.519    0.000    0.519    0.000 linalg.py:89(_raise_linalgerror_singular)
  2559646    0.507    0.000    0.507    0.000 {method 'append' of 'list' objects}
  2719206    0.297    0.000    0.297    0.000 {method '__array_prepare__' of 'numpy.ndarray' objects}
  1278601    0.285    0.000    0.285    0.000 {method 'get' of 'dict' objects}
  1223429    0.265    0.000    0.265    0.000 {method 'tobytes' of 'memoryview' objects}
   107212    0.251    0.000    0.294    0.000 flow.py:431(__init__)
  1223423    0.170    0.000    0.170    0.000 {method 'items' of 'dict' objects}
  1278576    0.137    0.000    0.137    0.000 linalg.py:130(_linalgRealType)
   611714    0.129    0.000    0.129    0.000 {method 'item' of 'numpy.ndarray' objects}
   162054    0.114    0.000    0.114    0.000 {method 'tolist' of 'numpy.ndarray' objects}
   118766    0.106    0.000    0.106    0.000 flow.py:464(add_constraint)
   992329    0.085    0.000    0.085    0.000 {method 'is_integer' of 'float' objects}
        2    0.004    0.002    0.018    0.009 _linprog.py:212(_solve_simplex)
      195    0.002    0.000    0.004    0.000 core.py:2913(__array_finalize__)
      271    0.001    0.000    0.002    0.000 partition.py:17(visit)
      219    0.001    0.000    0.002    0.000 core.py:2887(_update_from)
       24    0.001    0.000    0.003    0.000 core.py:1157(__call__)
  420/346    0.001    0.000    0.001    0.000 core.py:3320(__setattr__)
 1113/273    0.001    0.000    0.003    0.000 partition.py:23(f)
      145    0.000    0.000    0.002    0.000 core.py:3639(filled)
       24    0.000    0.000    0.009    0.000 _linprog.py:173(_pivot_row)
  768/252    0.000    0.000    0.002    0.000 partition.py:55(b)
      169    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.copyto}
        1    0.000    0.000    0.019    0.019 _linprog.py:391(_linprog_simplex)
       74    0.000    0.000    0.001    0.000 core.py:3351(__setmask__)
      145    0.000    0.000    0.001    0.000 core.py:440(_check_fill_value)
       48    0.000    0.000    0.002    0.000 core.py:3893(__eq__)
       26    0.000    0.000    0.005    0.000 _linprog.py:137(_pivot_col)
     1071    0.000    0.000    0.000    0.000 {method 'update' of 'dict' objects}
      243    0.000    0.000    0.000    0.000 core.py:3540(_get_data)
       50    0.000    0.000    0.001    0.000 core.py:4289(count)
       24    0.000    0.000    0.001    0.000 core.py:848(__call__)
       74    0.000    0.000    0.004    0.000 core.py:1810(masked_where)
       48    0.000    0.000    0.003    0.000 core.py:5460(min)
      245    0.000    0.000    0.000    0.000 {built-in method builtins.hasattr}
      148    0.000    0.000    0.000    0.000 core.py:1308(make_mask_descr)
       96    0.000    0.000    0.000    0.000 numeric.py:2786(geterr)
      271    0.000    0.000    0.000    0.000 partition.py:18(<listcomp>)
       96    0.000    0.000    0.000    0.000 numeric.py:2686(seterr)
       48    0.000    0.000    0.001    0.000 {method 'view' of 'numpy.generic' objects}
       74    0.000    0.000    0.001    0.000 core.py:1531(make_mask)
      220    0.000    0.000    0.001    0.000 {method 'any' of 'numpy.ndarray' objects}
       48    0.000    0.000    0.000    0.000 numerictypes.py:603(obj2sctype)
      122    0.000    0.000    0.001    0.000 core.py:599(filled)
       24    0.000    0.000    0.000    0.000 core.py:645(get_masked_subclass)
       48    0.000    0.000    0.001    0.000 core.py:6951(where)
       36    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.concatenate}
       74    0.000    0.000    0.000    0.000 core.py:1626(make_mask_none)
      220    0.000    0.000    0.001    0.000 _methods.py:37(_any)
       48    0.000    0.000    0.000    0.000 core.py:242(_recursive_extremum_fill_value)
       36    0.000    0.000    0.000    0.000 shape_base.py:61(atleast_2d)
       48    0.000    0.000    0.000    0.000 numeric.py:3088(__exit__)
       96    0.000    0.000    0.000    0.000 {built-in method numpy.core.umath.seterrobj}
      148    0.000    0.000    0.000    0.000 core.py:1287(_recursive_make_descr)
       48    0.000    0.000    0.000    0.000 core.py:1798(_check_mask_axis)
       24    0.000    0.000    0.003    0.000 core.py:4023(__truediv__)
       48    0.000    0.000    0.000    0.000 {method 'min' of 'numpy.ndarray' objects}
       48    0.000    0.000    0.000    0.000 numeric.py:3083(__enter__)
       48    0.000    0.000    0.000    0.000 numeric.py:3079(__init__)
       48    0.000    0.000    0.000    0.000 numerictypes.py:774(__getitem__)
       48    0.000    0.000    0.000    0.000 {method 'nonzero' of 'numpy.ndarray' objects}
        2    0.000    0.000  300.000  150.000 guess_weight.py:62(solve)
       24    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.can_cast}
       50    0.000    0.000    0.000    0.000 {method 'sum' of 'numpy.ndarray' objects}
       48    0.000    0.000    0.000    0.000 core.py:253(minimum_fill_value)
        5    0.000    0.000    0.000    0.000 guess_weight.py:43(is_feasible)
      192    0.000    0.000    0.000    0.000 {built-in method numpy.core.umath.geterrobj}
       48    0.000    0.000    0.000    0.000 {method 'all' of 'numpy.ndarray' objects}
       48    0.000    0.000    0.000    0.000 _methods.py:40(_all)
       18    0.000    0.000    0.000    0.000 shape_base.py:234(<listcomp>)
       24    0.000    0.000    0.000    0.000 core.py:659(<listcomp>)
       48    0.000    0.000    0.000    0.000 core.py:672(getdata)
        1    0.000    0.000    0.000    0.000 flow.py:60(_compute_max_weight_bounds)
        1    0.000    0.000  300.000  300.000 toboggan.py:77(find_opt_size)
       48    0.000    0.000    0.000    0.000 _methods.py:28(_amin)
        1    0.000    0.000    0.019    0.019 flow.py:261(is_redundant)
       18    0.000    0.000    0.000    0.000 shape_base.py:180(vstack)
       48    0.000    0.000    0.000    0.000 core.py:1344(getmask)
        1    0.000    0.000    0.000    0.000 function_base.py:4538(delete)
        1    0.000    0.000    0.000    0.000 flow.py:81(_compute_weight_bounds)
        1    0.000    0.000    0.000    0.000 _linprog.py:325(<listcomp>)
        2    0.000    0.000    0.000    0.000 flow.py:211(has_bad_bounds)
       24    0.000    0.000    0.000    0.000 core.py:3883(_delegate_binop)
        2    0.000    0.000    0.000    0.000 twodim_base.py:139(eye)
        4    0.000    0.000    0.000    0.000 {built-in method builtins.print}
        1    0.000    0.000    0.000    0.000 core.py:2753(__new__)
        2    0.000    0.000    0.000    0.000 flow.py:441(is_redundant)
        1    0.000    0.000    0.019    0.019 _linprog.py:824(linprog)
        2    0.000    0.000    0.000    0.000 graphs.py:67(labeled_neighborhood)
       48    0.000    0.000    0.000    0.000 {method 'pop' of 'dict' objects}
        2    0.000    0.000    0.000    0.000 signal.py:35(_enum_to_int)
        1    0.000    0.000    0.000    0.000 flow.py:198(try_larger_k)
        1    0.000    0.000    0.000    0.000 index_tricks.py:665(fill_diagonal)
        4    0.000    0.000    0.000    0.000 {method 'format' of 'str' objects}
        2    0.000    0.000    0.000    0.000 partition.py:15(algorithm_u)
        3    0.000    0.000    0.000    0.000 {built-in method builtins.all}
        1    0.000    0.000    0.000    0.000 toboggan.py:39(__enter__)
        3    0.000    0.000    0.000    0.000 flow.py:550(__hash__)
        1    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.arange}
        1    0.000    0.000    0.000    0.000 signal.py:45(signal)
        1    0.000    0.000    0.000    0.000 core.py:6155(array)
        1    0.000    0.000    0.000    0.000 fromnumeric.py:1866(any)
       48    0.000    0.000    0.000    0.000 {method 'count' of 'tuple' objects}
        1    0.000    0.000    0.000    0.000 signal.py:25(_int_to_enum)
        1    0.000    0.000    0.000    0.000 toboggan.py:36(handle_timeout)
        5    0.000    0.000    0.000    0.000 flow.py:444(<genexpr>)
        5    0.000    0.000    0.000    0.000 graphs.py:126(out_degree)
        1    0.000    0.000    0.000    0.000 enum.py:215(__call__)
        1    0.000    0.000    0.000    0.000 graphs.py:61(sink)
        2    0.000    0.000    0.000    0.000 graphs.py:129(in_degree)
        2    0.000    0.000    0.000    0.000 graphs.py:55(source)
        1    0.000    0.000    0.000    0.000 numeric.py:150(ones)
        1    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.count_nonzero}
       10    0.000    0.000    0.000    0.000 graphs.py:78(neighborhood)
        1    0.000    0.000    0.000    0.000 core.py:3562(get_fill_value)
        4    0.000    0.000    0.000    0.000 graphs.py:52(__iter__)
        2    0.000    0.000    0.000    0.000 {built-in method _signal.alarm}
        1    0.000    0.000    0.000    0.000 toboggan.py:44(__exit__)
        1    0.000    0.000    0.000    0.000 numeric.py:380(count_nonzero)
       10    0.000    0.000    0.000    0.000 {built-in method builtins.sum}
        5    0.000    0.000    0.000    0.000 graphs.py:84(out_neighborhood)
        1    0.000    0.000    0.000    0.000 enum.py:459(__new__)
        1    0.000    0.000    0.000    0.000 flow.py:101(<listcomp>)
        7    0.000    0.000    0.000    0.000 flow.py:265(<genexpr>)
        1    0.000    0.000    0.000    0.000 index_tricks.py:650(__getitem__)
        1    0.000    0.000    0.000    0.000 flow.py:264(<listcomp>)
        1    0.000    0.000    0.000    0.000 {method 'indices' of 'slice' objects}
        1    0.000    0.000    0.000    0.000 optimize.py:112(__getattr__)
        1    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
        6    0.000    0.000    0.000    0.000 guess_weight.py:74(<genexpr>)
        2    0.000    0.000    0.000    0.000 flow.py:422(__hash__)
        1    0.000    0.000    0.000    0.000 getlimits.py:96(__new__)
        1    0.000    0.000    0.000    0.000 flow.py:97(<listcomp>)
        1    0.000    0.000    0.000    0.000 {built-in method _signal.signal}
        1    0.000    0.000    0.000    0.000 toboggan.py:32(__init__)
       10    0.000    0.000    0.000    0.000 guess_weight.py:82(<lambda>)
        1    0.000    0.000    0.000    0.000 optimize.py:137(_check_unknown_options)
        2    0.000    0.000    0.000    0.000 graphs.py:87(in_neighborhood)
        1    0.000    0.000    0.000    0.000 {built-in method builtins.abs}
        1    0.000    0.000    0.000    0.000 flow.py:72(<dictcomp>)
        1    0.000    0.000    0.000    0.000 {method 'lower' of 'str' objects}
        4    0.000    0.000    0.000    0.000 {built-in method builtins.iter}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}


# All_info	n_in	m_in	n_red	m_red	k_gtrue	k_cut	k_impro	k_opt	time_w	time_p
All_info	18	27	5	14	9	8	8	None	300	0
weights	
Finished instance.

# Timeout is set to 300
# Recovering paths
# Running on instances 1643
# Ground-truth available in file ../../research/instances/rnaseq/zebrafish/16.truth

File 16.graph instance 1642 name ENSDARG00000068457 with n = 28, m = 42, and truth = 8:
[(0, 6, 844), (0, 6, 786), (0, 6, 321), (0, 6, 971), (0, 6, 131), (6, 18, 493), (6, 9, 7), (6, 18, 418), (6, 9, 2135), (9, 18, 712), (9, 18, 328), (9, 18, 971), (9, 18, 131), (18, 27, 1102), (18, 23, 1630), (18, 23, 321), (23, 27, 321), (23, 27, 712), (23, 27, 844), (23, 27, 74)]
# Preprocessing
#	Graph has an edge cut of size 6.
#	Investigating cutsets yields bound 7.
#	User supplied k value of 1.
#	Continuing using k = 7
# Reduced instance has n = 6, m = 20, and lower_bound = 7:
Searching for minimum-sized set of weights, timeout set at 300
# 	Call guess_weight with k = 7
Timed out after 300 seconds
         181972225 function calls (180860395 primitive calls) in 300.000 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
  2895936   46.898    0.000   46.898    0.000 {built-in method numpy.linalg.lapack_lite.dgelsd}
  1447968   41.942    0.000  163.116    0.000 linalg.py:1830(lstsq)
 16515851   26.043    0.000   26.043    0.000 {built-in method numpy.core.multiarray.array}
  1447968   20.354    0.000  282.474    0.000 flow.py:343(add_constraint)
  6163456   13.389    0.000   18.281    0.000 defmatrix.py:314(__getitem__)
  1447968   11.328    0.000  208.750    0.000 flow.py:296(_test_row)
   704189   10.979    0.000   19.214    0.000 linalg.py:296(solve)
   704404   10.646    0.000   17.851    0.000 function_base.py:4740(insert)
8671051/7584478    8.791    0.000   10.017    0.000 defmatrix.py:292(__array_finalize__)
  1449411    7.354    0.000    7.354    0.000 {method 'reduce' of 'numpy.ufunc' objects}
  7240231    6.184    0.000    6.184    0.000 {built-in method numpy.core.multiarray.zeros}
   796647    6.181    0.000   12.147    0.000 flow.py:553(push)
  3433163    5.539    0.000    5.539    0.000 {method 'astype' of 'numpy.ndarray' objects}
       43    5.218    0.121  299.995    6.977 dp.py:14(solve)
   704447    4.998    0.000   14.393    0.000 flow.py:239(__init__)
  1086530    4.298    0.000    5.975    0.000 {method 'dot' of 'numpy.ndarray' objects}
 22383137    4.192    0.000    4.192    0.000 {built-in method builtins.isinstance}
  2895946    4.109    0.000   10.650    0.000 fromnumeric.py:1364(ravel)
  1447968    3.788    0.000   12.152    0.000 fromnumeric.py:1710(sum)
  5008934    3.412    0.000    8.395    0.000 numeric.py:463(asarray)
  1447968    3.309    0.000    8.097    0.000 linalg.py:180(_fastCopyAndTranspose)
  2152985    3.296    0.000    3.819    0.000 {method 'copy' of 'numpy.ndarray' objects}
  4304314    3.254    0.000   10.576    0.000 linalg.py:106(_makearray)
   796594    3.216    0.000    4.100    0.000 flow.py:505(copy)
  2895936    3.201    0.000    3.201    0.000 {built-in method numpy.core.multiarray._fastCopyAndTranspose}
  2895946    3.017    0.000    3.017    0.000 {method 'ravel' of 'numpy.ndarray' objects}
  2152157    2.733    0.000    3.315    0.000 linalg.py:139(_commonType)
  7944029    2.394    0.000    2.394    0.000 {built-in method builtins.min}
  2896091    2.128    0.000    2.625    0.000 numeric.py:534(asanyarray)
  1447968    2.081    0.000    2.727    0.000 linalg.py:168(_to_native_byte_order)
  2895936    1.919    0.000    3.433    0.000 {method 'transpose' of 'numpy.ndarray' objects}
   796647    1.789    0.000    1.865    0.000 flow.py:584(distribute)
  3600138    1.289    0.000    1.289    0.000 {built-in method builtins.max}
  1447968    1.263    0.000    1.417    0.000 linalg.py:192(_assertRank2)
  3600125    1.222    0.000    1.771    0.000 linalg.py:111(isComplexType)
   704447    1.217    0.000    6.840    0.000 defmatrix.py:246(__new__)
 12632984    1.197    0.000    1.197    0.000 {built-in method builtins.len}
  7904819    1.131    0.000    1.131    0.000 {built-in method builtins.issubclass}
  1086320    1.006    0.000    1.191    0.000 numeric.py:2160(isscalar)
   704404    0.988    0.000    0.988    0.000 numeric.py:1490(rollaxis)
   705023    0.804    0.000    3.520    0.000 {method 'view' of 'numpy.ndarray' objects}
   704189    0.793    0.000    1.242    0.000 linalg.py:209(_assertNdSquareness)
  4312263    0.785    0.000    0.785    0.000 {built-in method builtins.getattr}
   704410    0.757    0.000    0.757    0.000 {built-in method numpy.core.multiarray.empty}
   704189    0.754    0.000    0.754    0.000 {method 'squeeze' of 'numpy.ndarray' objects}
  1447968    0.743    0.000    0.743    0.000 {built-in method math.log}
   704404    0.740    0.000    1.529    0.000 {method '__array_wrap__' of 'numpy.ndarray' objects}
   704189    0.728    0.000    1.482    0.000 fromnumeric.py:1143(squeeze)
   796679    0.687    0.000    0.687    0.000 flow.py:495(__init__)
  1448164    0.671    0.000    8.021    0.000 _methods.py:31(_sum)
   704189    0.661    0.000    0.661    0.000 linalg.py:101(get_linalg_error_extobj)
   704189    0.594    0.000    0.673    0.000 linalg.py:198(_assertRankAtLeast2)
  2162696    0.566    0.000    0.566    0.000 {built-in method builtins.hash}
  1447968    0.566    0.000    0.863    0.000 linalg.py:124(_realType)
  2962404    0.520    0.000    0.520    0.000 {method 'append' of 'list' objects}
   435575    0.482    0.000    0.482    0.000 linalg.py:89(_raise_linalgerror_singular)
  3164548    0.321    0.000    0.321    0.000 {method '__array_prepare__' of 'numpy.ndarray' objects}
  1448064    0.298    0.000    0.298    0.000 {method 'get' of 'dict' objects}
  1408851    0.279    0.000    0.279    0.000 {method 'tobytes' of 'memoryview' objects}
  1593547    0.197    0.000    0.197    0.000 {method 'items' of 'dict' objects}
   268614    0.161    0.000    0.161    0.000 {method 'tolist' of 'numpy.ndarray' objects}
   704404    0.145    0.000    0.145    0.000 {method 'item' of 'numpy.ndarray' objects}
  1447968    0.143    0.000    0.143    0.000 linalg.py:130(_linalgRealType)
   129552    0.083    0.000    0.083    0.000 flow.py:464(add_constraint)
    24625    0.056    0.000    0.065    0.000 flow.py:431(__init__)
     9439    0.042    0.000    0.055    0.000 partition.py:17(visit)
   294425    0.041    0.000    0.041    0.000 {method 'is_integer' of 'float' objects}
28271/9492    0.013    0.000    0.076    0.000 partition.py:23(f)
        6    0.011    0.002    0.067    0.011 _linprog.py:212(_solve_simplex)
11825/5638    0.008    0.000    0.038    0.000 partition.py:55(b)
     9439    0.007    0.000    0.007    0.000 partition.py:18(<listcomp>)
      767    0.007    0.000    0.017    0.000 core.py:2913(__array_finalize__)
      862    0.004    0.000    0.009    0.000 core.py:2887(_update_from)
      774    0.004    0.000    0.004    0.000 guess_weight.py:43(is_feasible)
       95    0.003    0.000    0.011    0.000 core.py:1157(__call__)
1639/1348    0.002    0.000    0.005    0.000 core.py:3320(__setattr__)
      571    0.002    0.000    0.010    0.000 core.py:3639(filled)
       95    0.002    0.000    0.036    0.000 _linprog.py:173(_pivot_row)
      670    0.002    0.000    0.002    0.000 {built-in method numpy.core.multiarray.copyto}
      291    0.001    0.000    0.003    0.000 core.py:3351(__setmask__)
        5    0.001    0.000    0.070    0.014 _linprog.py:391(_linprog_simplex)
        1    0.001    0.001  300.000  300.000 guess_weight.py:62(solve)
      571    0.001    0.000    0.003    0.000 core.py:440(_check_fill_value)
      101    0.001    0.000    0.020    0.000 _linprog.py:137(_pivot_col)
      190    0.001    0.000    0.009    0.000 core.py:3893(__eq__)
     4215    0.001    0.000    0.001    0.000 {method 'update' of 'dict' objects}
       95    0.001    0.000    0.002    0.000 core.py:848(__call__)
      291    0.001    0.000    0.014    0.000 core.py:1810(masked_where)
      957    0.001    0.000    0.001    0.000 core.py:3540(_get_data)
      196    0.001    0.000    0.002    0.000 core.py:4289(count)
      190    0.001    0.000    0.013    0.000 core.py:5460(min)
      582    0.001    0.000    0.001    0.000 core.py:1308(make_mask_descr)
      963    0.001    0.000    0.001    0.000 {built-in method builtins.hasattr}
      380    0.001    0.000    0.002    0.000 numeric.py:2686(seterr)
      380    0.001    0.000    0.001    0.000 numeric.py:2786(geterr)
      190    0.001    0.000    0.005    0.000 {method 'view' of 'numpy.generic' objects}
      291    0.001    0.000    0.003    0.000 core.py:1531(make_mask)
      867    0.001    0.000    0.004    0.000 {method 'any' of 'numpy.ndarray' objects}
      190    0.000    0.000    0.001    0.000 numerictypes.py:603(obj2sctype)
      481    0.000    0.000    0.004    0.000 core.py:599(filled)
      867    0.000    0.000    0.003    0.000 _methods.py:37(_any)
       95    0.000    0.000    0.000    0.000 core.py:645(get_masked_subclass)
     1314    0.000    0.000    0.000    0.000 {built-in method builtins.sum}
      291    0.000    0.000    0.001    0.000 core.py:1626(make_mask_none)
      190    0.000    0.000    0.004    0.000 core.py:6951(where)
      140    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.concatenate}
      140    0.000    0.000    0.000    0.000 shape_base.py:61(atleast_2d)
      190    0.000    0.000    0.001    0.000 core.py:242(_recursive_extremum_fill_value)
      190    0.000    0.000    0.001    0.000 numeric.py:3088(__exit__)
      148    0.000    0.000    0.000    0.000 flow.py:550(__hash__)
      190    0.000    0.000    0.001    0.000 core.py:1798(_check_mask_axis)
       95    0.000    0.000    0.011    0.000 core.py:4023(__truediv__)
      190    0.000    0.000    0.001    0.000 numerictypes.py:774(__getitem__)
      190    0.000    0.000    0.001    0.000 numeric.py:3083(__enter__)
      380    0.000    0.000    0.000    0.000 {built-in method numpy.core.umath.seterrobj}
      190    0.000    0.000    0.000    0.000 {method 'nonzero' of 'numpy.ndarray' objects}
      582    0.000    0.000    0.000    0.000 core.py:1287(_recursive_make_descr)
       53    0.000    0.000    0.000    0.000 partition.py:15(algorithm_u)
      196    0.000    0.000    0.001    0.000 {method 'sum' of 'numpy.ndarray' objects}
      190    0.000    0.000    0.001    0.000 {method 'min' of 'numpy.ndarray' objects}
       53    0.000    0.000    0.000    0.000 graphs.py:67(labeled_neighborhood)
      190    0.000    0.000    0.000    0.000 numeric.py:3079(__init__)
      190    0.000    0.000    0.001    0.000 core.py:253(minimum_fill_value)
       95    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.can_cast}
      190    0.000    0.000    0.001    0.000 {method 'all' of 'numpy.ndarray' objects}
       42    0.000    0.000    0.000    0.000 graphs.py:61(sink)
      760    0.000    0.000    0.000    0.000 {built-in method numpy.core.umath.geterrobj}
      252    0.000    0.000    0.000    0.000 graphs.py:126(out_degree)
       24    0.000    0.000    0.000    0.000 flow.py:441(is_redundant)
      190    0.000    0.000    0.000    0.000 core.py:672(getdata)
       95    0.000    0.000    0.000    0.000 core.py:659(<listcomp>)
      190    0.000    0.000    0.001    0.000 _methods.py:40(_all)
       70    0.000    0.000    0.001    0.000 shape_base.py:180(vstack)
      252    0.000    0.000    0.000    0.000 graphs.py:78(neighborhood)
      190    0.000    0.000    0.001    0.000 _methods.py:28(_amin)
      252    0.000    0.000    0.000    0.000 graphs.py:84(out_neighborhood)
       70    0.000    0.000    0.000    0.000 shape_base.py:234(<listcomp>)
        5    0.000    0.000    0.070    0.014 flow.py:261(is_redundant)
      190    0.000    0.000    0.000    0.000 core.py:1344(getmask)
       43    0.000    0.000    0.000    0.000 graphs.py:55(source)
       95    0.000    0.000    0.000    0.000 core.py:3883(_delegate_binop)
       85    0.000    0.000    0.000    0.000 graphs.py:52(__iter__)
      100    0.000    0.000    0.000    0.000 flow.py:444(<genexpr>)
      190    0.000    0.000    0.000    0.000 {method 'pop' of 'dict' objects}
       43    0.000    0.000    0.000    0.000 graphs.py:129(in_degree)
        5    0.000    0.000    0.070    0.014 _linprog.py:824(linprog)
      190    0.000    0.000    0.000    0.000 {method 'count' of 'tuple' objects}
        5    0.000    0.000    0.000    0.000 index_tricks.py:665(fill_diagonal)
       29    0.000    0.000    0.000    0.000 {built-in method builtins.all}
        1    0.000    0.000  300.000  300.000 toboggan.py:77(find_opt_size)
       85    0.000    0.000    0.000    0.000 {built-in method builtins.iter}
        1    0.000    0.000    0.000    0.000 function_base.py:4538(delete)
       43    0.000    0.000    0.000    0.000 graphs.py:87(in_neighborhood)
       43    0.000    0.000    0.000    0.000 flow.py:422(__hash__)
        2    0.000    0.000    0.000    0.000 twodim_base.py:139(eye)
        1    0.000    0.000    0.000    0.000 flow.py:211(has_bad_bounds)
        1    0.000    0.000    0.000    0.000 _linprog.py:325(<listcomp>)
        5    0.000    0.000    0.000    0.000 numeric.py:150(ones)
        5    0.000    0.000    0.000    0.000 fromnumeric.py:1866(any)
        1    0.000    0.000    0.000    0.000 core.py:2753(__new__)
       25    0.000    0.000    0.000    0.000 flow.py:265(<genexpr>)
        3    0.000    0.000    0.000    0.000 {built-in method builtins.print}
        1    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.arange}
       11    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
        5    0.000    0.000    0.000    0.000 numeric.py:380(count_nonzero)
       11    0.000    0.000    0.000    0.000 flow.py:488(__hash__)
        3    0.000    0.000    0.000    0.000 {method 'format' of 'str' objects}
        1    0.000    0.000    0.000    0.000 core.py:6155(array)
        2    0.000    0.000    0.000    0.000 signal.py:35(_enum_to_int)
        1    0.000    0.000    0.000    0.000 signal.py:45(signal)
        5    0.000    0.000    0.000    0.000 optimize.py:112(__getattr__)
        5    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.count_nonzero}
        5    0.000    0.000    0.000    0.000 flow.py:264(<listcomp>)
        1    0.000    0.000    0.000    0.000 toboggan.py:39(__enter__)
        1    0.000    0.000    0.000    0.000 toboggan.py:36(handle_timeout)
        7    0.000    0.000    0.000    0.000 guess_weight.py:74(<genexpr>)
        1    0.000    0.000    0.000    0.000 getlimits.py:96(__new__)
        2    0.000    0.000    0.000    0.000 {built-in method _signal.alarm}
        1    0.000    0.000    0.000    0.000 flow.py:533(__eq__)
        1    0.000    0.000    0.000    0.000 enum.py:459(__new__)
        1    0.000    0.000    0.000    0.000 {built-in method _signal.signal}
        1    0.000    0.000    0.000    0.000 signal.py:25(_int_to_enum)
        1    0.000    0.000    0.000    0.000 toboggan.py:44(__exit__)
        1    0.000    0.000    0.000    0.000 enum.py:215(__call__)
        5    0.000    0.000    0.000    0.000 {method 'lower' of 'str' objects}
        1    0.000    0.000    0.000    0.000 {method 'indices' of 'slice' objects}
        5    0.000    0.000    0.000    0.000 optimize.py:137(_check_unknown_options)
        1    0.000    0.000    0.000    0.000 index_tricks.py:650(__getitem__)
        1    0.000    0.000    0.000    0.000 core.py:3562(get_fill_value)
        5    0.000    0.000    0.000    0.000 {built-in method builtins.abs}
        1    0.000    0.000    0.000    0.000 toboggan.py:32(__init__)
       14    0.000    0.000    0.000    0.000 guess_weight.py:82(<lambda>)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}


# All_info	n_in	m_in	n_red	m_red	k_gtrue	k_cut	k_impro	k_opt	time_w	time_p
All_info	28	42	6	20	8	6	7	None	300	0
weights	
Finished instance.

# Timeout is set to 300
# Recovering paths
# Running on instances 10229
# Ground-truth available in file ../../research/instances/rnaseq/zebrafish/16.truth

File 16.graph instance 10228 name ENSDARG00000056322 with n = 42, m = 67, and truth = 11:
[(0, 3, 11), (0, 3, 759), (0, 13, 999), (0, 13, 6), (0, 13, 56), (0, 13, 5), (0, 3, 43), (0, 13, 238), (3, 13, 759), (3, 13, 11), (3, 13, 43), (13, 24, 902), (13, 24, 17), (13, 41, 759), (13, 24, 81), (13, 24, 4), (13, 18, 238), (13, 24, 6), (13, 18, 110), (18, 41, 43), (18, 41, 11), (18, 41, 56), (18, 41, 238), (24, 26, 897), (24, 26, 113), (26, 28, 897), (26, 28, 113), (28, 36, 897), (28, 41, 81), (28, 36, 32), (36, 38, 897), (36, 38, 32), (38, 41, 919), (38, 41, 4), (38, 41, 6)]
# Preprocessing
#	Graph has an edge cut of size 10.
#	Investigating cutsets yields bound 10.
#	User supplied k value of 1.
#	Continuing using k = 10
# Reduced instance has n = 10, m = 35, and lower_bound = 10:
Searching for minimum-sized set of weights, timeout set at 300
# 	Call guess_weight with k = 10
# 	Call guess_weight with k = 11
Timed out after 300 seconds
         129020689 function calls (129017655 primitive calls) in 300.000 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
 18285852  150.864    0.000  240.239    0.000 flow.py:553(push)
 18285852   56.005    0.000   68.461    0.000 flow.py:505(copy)
        1   49.182   49.182  299.999  299.999 dp.py:14(solve)
 18285853   20.909    0.000   20.913    0.000 flow.py:584(distribute)
 19293851   10.571    0.000   10.571    0.000 flow.py:464(add_constraint)
 18285853    9.683    0.000    9.683    0.000 flow.py:495(__init__)
 36571706    2.773    0.000    2.773    0.000 {method 'items' of 'dict' objects}
        1    0.004    0.004    0.004    0.004 linalg.py:296(solve)
      454    0.002    0.000    0.003    0.000 partition.py:17(visit)
 3006/455    0.001    0.000    0.005    0.000 partition.py:23(f)
  835/363    0.000    0.000    0.003    0.000 partition.py:55(b)
       22    0.000    0.000    0.000    0.000 {built-in method numpy.linalg.lapack_lite.dgelsd}
     5035    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
      454    0.000    0.000    0.000    0.000 partition.py:18(<listcomp>)
       66    0.000    0.000    0.000    0.000 guess_weight.py:43(is_feasible)
       11    0.000    0.000    0.001    0.000 linalg.py:1830(lstsq)
      133    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.array}
       11    0.000    0.000    0.007    0.001 flow.py:343(add_constraint)
       10    0.000    0.000    0.000    0.000 function_base.py:4740(insert)
        2    0.000    0.000  300.000  150.000 guess_weight.py:62(solve)
       11    0.000    0.000    0.000    0.000 flow.py:239(__init__)
       11    0.000    0.000    0.006    0.001 flow.py:296(_test_row)
       67    0.000    0.000    0.000    0.000 defmatrix.py:314(__getitem__)
       11    0.000    0.000    0.000    0.000 {method 'reduce' of 'numpy.ufunc' objects}
    57/46    0.000    0.000    0.000    0.000 defmatrix.py:292(__array_finalize__)
       58    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.zeros}
       24    0.000    0.000    0.000    0.000 {method 'astype' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 flow.py:60(_compute_max_weight_bounds)
       11    0.000    0.000    0.000    0.000 linalg.py:180(_fastCopyAndTranspose)
      190    0.000    0.000    0.000    0.000 {built-in method builtins.isinstance}
       22    0.000    0.000    0.000    0.000 {method 'copy' of 'numpy.ndarray' objects}
       10    0.000    0.000    0.000    0.000 {method 'dot' of 'numpy.ndarray' objects}
       11    0.000    0.000    0.000    0.000 fromnumeric.py:1710(sum)
       22    0.000    0.000    0.000    0.000 fromnumeric.py:1364(ravel)
      125    0.000    0.000    0.000    0.000 {built-in method builtins.sum}
       34    0.000    0.000    0.000    0.000 numeric.py:463(asarray)
      141    0.000    0.000    0.000    0.000 {built-in method builtins.max}
       92    0.000    0.000    0.000    0.000 {built-in method builtins.min}
       22    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray._fastCopyAndTranspose}
       11    0.000    0.000    0.000    0.000 defmatrix.py:246(__new__)
        1    0.000    0.000  300.000  300.000 toboggan.py:77(find_opt_size)
       22    0.000    0.000    0.000    0.000 {method 'ravel' of 'numpy.ndarray' objects}
       11    0.000    0.000    0.000    0.000 linalg.py:168(_to_native_byte_order)
        2    0.000    0.000    0.000    0.000 flow.py:211(has_bad_bounds)
        2    0.000    0.000    0.000    0.000 twodim_base.py:139(eye)
       12    0.000    0.000    0.000    0.000 linalg.py:139(_commonType)
       24    0.000    0.000    0.000    0.000 linalg.py:106(_makearray)
       22    0.000    0.000    0.000    0.000 numeric.py:534(asanyarray)
        1    0.000    0.000    0.000    0.000 flow.py:81(_compute_weight_bounds)
       22    0.000    0.000    0.000    0.000 {method 'transpose' of 'numpy.ndarray' objects}
       10    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.empty}
       10    0.000    0.000    0.000    0.000 numeric.py:1490(rollaxis)
       10    0.000    0.000    0.000    0.000 {method '__array_wrap__' of 'numpy.ndarray' objects}
       11    0.000    0.000    0.000    0.000 {method 'view' of 'numpy.ndarray' objects}
      208    0.000    0.000    0.000    0.000 {built-in method builtins.len}
       11    0.000    0.000    0.000    0.000 linalg.py:192(_assertRank2)
        1    0.000    0.000    0.000    0.000 flow.py:198(try_larger_k)
       35    0.000    0.000    0.000    0.000 {built-in method builtins.hash}
       47    0.000    0.000    0.000    0.000 {built-in method builtins.issubclass}
       24    0.000    0.000    0.000    0.000 {built-in method builtins.getattr}
        4    0.000    0.000    0.000    0.000 {built-in method builtins.print}
        1    0.000    0.000    0.000    0.000 graphs.py:67(labeled_neighborhood)
        1    0.000    0.000    0.000    0.000 partition.py:15(algorithm_u)
       11    0.000    0.000    0.000    0.000 {built-in method math.log}
       11    0.000    0.000    0.000    0.000 _methods.py:31(_sum)
        2    0.000    0.000    0.000    0.000 signal.py:35(_enum_to_int)
       20    0.000    0.000    0.000    0.000 graphs.py:78(neighborhood)
        1    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.arange}
        4    0.000    0.000    0.000    0.000 {method 'format' of 'str' objects}
       11    0.000    0.000    0.000    0.000 {method 'get' of 'dict' objects}
       23    0.000    0.000    0.000    0.000 linalg.py:111(isComplexType)
       23    0.000    0.000    0.000    0.000 {method '__array_prepare__' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 toboggan.py:39(__enter__)
       11    0.000    0.000    0.000    0.000 guess_weight.py:74(<genexpr>)
        1    0.000    0.000    0.000    0.000 flow.py:431(__init__)
       10    0.000    0.000    0.000    0.000 graphs.py:126(out_degree)
        1    0.000    0.000    0.000    0.000 enum.py:215(__call__)
        1    0.000    0.000    0.000    0.000 flow.py:550(__hash__)
        1    0.000    0.000    0.000    0.000 signal.py:45(signal)
       11    0.000    0.000    0.000    0.000 linalg.py:124(_realType)
       10    0.000    0.000    0.000    0.000 graphs.py:84(out_neighborhood)
        2    0.000    0.000    0.000    0.000 graphs.py:55(source)
        4    0.000    0.000    0.000    0.000 graphs.py:52(__iter__)
        2    0.000    0.000    0.000    0.000 {built-in method _signal.alarm}
        1    0.000    0.000    0.000    0.000 toboggan.py:36(handle_timeout)
        1    0.000    0.000    0.000    0.000 {built-in method _signal.signal}
        1    0.000    0.000    0.000    0.000 numeric.py:2160(isscalar)
        1    0.000    0.000    0.000    0.000 {method 'tolist' of 'numpy.ndarray' objects}
       21    0.000    0.000    0.000    0.000 {method 'tobytes' of 'memoryview' objects}
        1    0.000    0.000    0.000    0.000 signal.py:25(_int_to_enum)
       11    0.000    0.000    0.000    0.000 {method 'is_integer' of 'float' objects}
        2    0.000    0.000    0.000    0.000 graphs.py:129(in_degree)
        1    0.000    0.000    0.000    0.000 fromnumeric.py:1143(squeeze)
        1    0.000    0.000    0.000    0.000 flow.py:72(<dictcomp>)
        1    0.000    0.000    0.000    0.000 {method 'squeeze' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 linalg.py:198(_assertRankAtLeast2)
        1    0.000    0.000    0.000    0.000 toboggan.py:44(__exit__)
        1    0.000    0.000    0.000    0.000 linalg.py:209(_assertNdSquareness)
       11    0.000    0.000    0.000    0.000 linalg.py:130(_linalgRealType)
       17    0.000    0.000    0.000    0.000 guess_weight.py:82(<lambda>)
        1    0.000    0.000    0.000    0.000 linalg.py:101(get_linalg_error_extobj)
       10    0.000    0.000    0.000    0.000 {method 'item' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 toboggan.py:32(__init__)
        1    0.000    0.000    0.000    0.000 flow.py:101(<listcomp>)
        1    0.000    0.000    0.000    0.000 graphs.py:61(sink)
        2    0.000    0.000    0.000    0.000 graphs.py:87(in_neighborhood)
        1    0.000    0.000    0.000    0.000 flow.py:488(__hash__)
        1    0.000    0.000    0.000    0.000 enum.py:459(__new__)
        1    0.000    0.000    0.000    0.000 flow.py:97(<listcomp>)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        4    0.000    0.000    0.000    0.000 {built-in method builtins.iter}


# All_info	n_in	m_in	n_red	m_red	k_gtrue	k_cut	k_impro	k_opt	time_w	time_p
All_info	42	67	10	35	11	10	10	None	300	0
weights	
Finished instance.

# Timeout is set to 300
# Recovering paths
# Running on instances 13171
# Ground-truth available in file ../../research/instances/rnaseq/zebrafish/16.truth

File 16.graph instance 13170 name ENSDARG00000058693 with n = 53, m = 78, and truth = 11:
[(0, 32, 53), (0, 3, 827), (0, 32, 68), (0, 34, 6), (0, 3, 898), (0, 32, 2), (0, 32, 5), (0, 32, 35), (0, 32, 22), (0, 32, 56), (0, 32, 373), (3, 9, 827), (3, 9, 898), (9, 32, 827), (9, 52, 898), (32, 34, 53), (32, 34, 1388), (34, 36, 592), (34, 36, 855), (36, 40, 529), (36, 40, 11), (36, 40, 22), (36, 40, 885), (40, 52, 35), (40, 52, 373), (40, 52, 56), (40, 52, 5), (40, 52, 53), (40, 52, 2), (40, 52, 22), (40, 52, 827), (40, 52, 6), (40, 52, 68)]
# Preprocessing
#	Graph has an edge cut of size 11.
#	Investigating cutsets yields bound 11.
#	User supplied k value of 1.
#	Continuing using k = 11
# Reduced instance has n = 8, m = 33, and lower_bound = 11:
Searching for minimum-sized set of weights, timeout set at 300
# 	Call guess_weight with k = 11
Timed out after 300 seconds
         114985920 function calls (114985891 primitive calls) in 300.000 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
 16426346  167.591    0.000  247.286    0.000 flow.py:553(push)
 16426345   48.622    0.000   60.662    0.000 flow.py:505(copy)
        1   43.744   43.744  300.000  300.000 dp.py:14(solve)
 16426346   19.032    0.000   19.032    0.000 flow.py:584(distribute)
 16426346    9.181    0.000    9.181    0.000 flow.py:495(__init__)
 16426345    8.960    0.000    8.960    0.000 flow.py:464(add_constraint)
 32852692    2.860    0.000    2.860    0.000 {method 'items' of 'dict' objects}
        1    0.008    0.008    0.008    0.008 linalg.py:296(solve)
       22    0.000    0.000    0.000    0.000 {built-in method numpy.linalg.lapack_lite.dgelsd}
       11    0.000    0.000    0.001    0.000 linalg.py:1830(lstsq)
      132    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.array}
       11    0.000    0.000    0.011    0.001 flow.py:343(add_constraint)
       10    0.000    0.000    0.000    0.000 function_base.py:4740(insert)
       11    0.000    0.000    0.000    0.000 flow.py:239(__init__)
       11    0.000    0.000    0.010    0.001 flow.py:296(_test_row)
       67    0.000    0.000    0.000    0.000 defmatrix.py:314(__getitem__)
    57/46    0.000    0.000    0.000    0.000 defmatrix.py:292(__array_finalize__)
       11    0.000    0.000    0.000    0.000 {method 'reduce' of 'numpy.ufunc' objects}
       58    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.zeros}
      190    0.000    0.000    0.000    0.000 {built-in method builtins.isinstance}
       24    0.000    0.000    0.000    0.000 {method 'astype' of 'numpy.ndarray' objects}
       11    0.000    0.000    0.000    0.000 linalg.py:180(_fastCopyAndTranspose)
       11    0.000    0.000    0.000    0.000 fromnumeric.py:1710(sum)
       10    0.000    0.000    0.000    0.000 {method 'dot' of 'numpy.ndarray' objects}
       22    0.000    0.000    0.000    0.000 {method 'copy' of 'numpy.ndarray' objects}
       22    0.000    0.000    0.000    0.000 fromnumeric.py:1364(ravel)
       11    0.000    0.000    0.000    0.000 defmatrix.py:246(__new__)
       34    0.000    0.000    0.000    0.000 numeric.py:463(asarray)
       22    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray._fastCopyAndTranspose}
       22    0.000    0.000    0.000    0.000 {method 'ravel' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 flow.py:211(has_bad_bounds)
       24    0.000    0.000    0.000    0.000 linalg.py:106(_makearray)
       11    0.000    0.000    0.000    0.000 linalg.py:168(_to_native_byte_order)
       22    0.000    0.000    0.000    0.000 numeric.py:534(asanyarray)
       56    0.000    0.000    0.000    0.000 {built-in method builtins.min}
       12    0.000    0.000    0.000    0.000 linalg.py:139(_commonType)
        1    0.000    0.000  300.000  300.000 toboggan.py:77(find_opt_size)
     20/2    0.000    0.000    0.000    0.000 partition.py:23(f)
       10    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.empty}
       10    0.000    0.000    0.000    0.000 numeric.py:1490(rollaxis)
       11    0.000    0.000    0.000    0.000 {method 'view' of 'numpy.ndarray' objects}
       22    0.000    0.000    0.000    0.000 {method 'transpose' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 partition.py:15(algorithm_u)
        2    0.000    0.000    0.000    0.000 twodim_base.py:139(eye)
        1    0.000    0.000  300.000  300.000 guess_weight.py:62(solve)
       11    0.000    0.000    0.000    0.000 linalg.py:192(_assertRank2)
       25    0.000    0.000    0.000    0.000 {built-in method builtins.max}
       10    0.000    0.000    0.000    0.000 {method '__array_wrap__' of 'numpy.ndarray' objects}
        3    0.000    0.000    0.000    0.000 {built-in method builtins.print}
        1    0.000    0.000    0.000    0.000 graphs.py:67(labeled_neighborhood)
       47    0.000    0.000    0.000    0.000 {built-in method builtins.issubclass}
      114    0.000    0.000    0.000    0.000 {built-in method builtins.len}
       23    0.000    0.000    0.000    0.000 linalg.py:111(isComplexType)
        1    0.000    0.000    0.000    0.000 partition.py:17(visit)
       35    0.000    0.000    0.000    0.000 {built-in method builtins.hash}
       44    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
       11    0.000    0.000    0.000    0.000 {built-in method math.log}
        1    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.arange}
        1    0.000    0.000    0.000    0.000 flow.py:550(__hash__)
        3    0.000    0.000    0.000    0.000 {method 'format' of 'str' objects}
       11    0.000    0.000    0.000    0.000 linalg.py:124(_realType)
       24    0.000    0.000    0.000    0.000 {built-in method builtins.getattr}
        2    0.000    0.000    0.000    0.000 signal.py:35(_enum_to_int)
        9    0.000    0.000    0.000    0.000 guess_weight.py:74(<genexpr>)
        1    0.000    0.000    0.000    0.000 flow.py:431(__init__)
        1    0.000    0.000    0.000    0.000 fromnumeric.py:1143(squeeze)
        1    0.000    0.000    0.000    0.000 toboggan.py:39(__enter__)
       11    0.000    0.000    0.000    0.000 _methods.py:31(_sum)
        1    0.000    0.000    0.000    0.000 signal.py:45(signal)
        1    0.000    0.000    0.000    0.000 graphs.py:52(__iter__)
        1    0.000    0.000    0.000    0.000 toboggan.py:44(__exit__)
       11    0.000    0.000    0.000    0.000 {method 'get' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 graphs.py:55(source)
       11    0.000    0.000    0.000    0.000 {method 'is_integer' of 'float' objects}
       10    0.000    0.000    0.000    0.000 {method 'item' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 toboggan.py:36(handle_timeout)
        1    0.000    0.000    0.000    0.000 signal.py:25(_int_to_enum)
       23    0.000    0.000    0.000    0.000 {method '__array_prepare__' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 {built-in method builtins.sorted}
        1    0.000    0.000    0.000    0.000 {method 'tolist' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 numeric.py:2160(isscalar)
        1    0.000    0.000    0.000    0.000 enum.py:215(__call__)
        1    0.000    0.000    0.000    0.000 toboggan.py:32(__init__)
       12    0.000    0.000    0.000    0.000 guess_weight.py:78(<genexpr>)
        2    0.000    0.000    0.000    0.000 {built-in method _signal.alarm}
        1    0.000    0.000    0.000    0.000 enum.py:459(__new__)
        1    0.000    0.000    0.000    0.000 partition.py:18(<listcomp>)
        1    0.000    0.000    0.000    0.000 linalg.py:101(get_linalg_error_extobj)
        1    0.000    0.000    0.000    0.000 {built-in method _signal.signal}
        1    0.000    0.000    0.000    0.000 graphs.py:129(in_degree)
        1    0.000    0.000    0.000    0.000 linalg.py:198(_assertRankAtLeast2)
       21    0.000    0.000    0.000    0.000 {method 'tobytes' of 'memoryview' objects}
        1    0.000    0.000    0.000    0.000 flow.py:488(__hash__)
       11    0.000    0.000    0.000    0.000 linalg.py:130(_linalgRealType)
        1    0.000    0.000    0.000    0.000 linalg.py:209(_assertNdSquareness)
        1    0.000    0.000    0.000    0.000 {method 'squeeze' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 {built-in method builtins.iter}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 graphs.py:87(in_neighborhood)


# All_info	n_in	m_in	n_red	m_red	k_gtrue	k_cut	k_impro	k_opt	time_w	time_p
All_info	53	78	8	33	11	11	11	None	300	0
weights	
Finished instance.

# Timeout is set to 300
# Recovering paths
# Running on instances 8899
# Ground-truth available in file ../../research/instances/rnaseq/zebrafish/22.truth

File 22.graph instance 8898 name ENSDARG00000044062 with n = 35, m = 57, and truth = 12:
[(0, 5, 49), (0, 5, 2389), (0, 5, 439), (0, 5, 691), (0, 18, 1082), (0, 18, 9), (0, 18, 3), (0, 7, 325), (0, 5, 1), (5, 7, 2251), (5, 18, 1318), (7, 18, 375), (7, 18, 2201), (18, 23, 1266), (18, 34, 3), (18, 30, 1082), (18, 34, 9), (18, 23, 372), (18, 23, 439), (18, 34, 54), (18, 30, 1125), (18, 30, 637), (18, 30, 1), (23, 34, 1264), (23, 34, 813), (30, 34, 637), (30, 34, 1), (30, 34, 1082), (30, 34, 1125)]
# Preprocessing
#	Graph has an edge cut of size 10.
#	Investigating cutsets yields bound 11.
#	User supplied k value of 1.
#	Continuing using k = 11
# Reduced instance has n = 7, m = 29, and lower_bound = 11:
Searching for minimum-sized set of weights, timeout set at 300
# 	Call guess_weight with k = 11
Number of 1s is 1
Timed out after 300 seconds
         81070064 function calls (81070031 primitive calls) in 300.000 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
   591709   93.602    0.000  106.087    0.000 linalg.py:296(solve)
  1183440   40.596    0.000   40.596    0.000 {built-in method numpy.linalg.lapack_lite.dgelsd}
   591720   27.754    0.000  119.623    0.000 linalg.py:1830(lstsq)
   591720   18.027    0.000  266.495    0.000 flow.py:296(_test_row)
  6508923   15.786    0.000   15.786    0.000 {built-in method numpy.core.multiarray.array}
   591711   12.232    0.000   19.325    0.000 flow.py:553(push)
  1183483    8.204    0.000   12.012    0.000 defmatrix.py:314(__getitem__)
  2366857    6.996    0.000    6.996    0.000 {method 'astype' of 'numpy.ndarray' objects}
        1    5.698    5.698  299.993  299.993 dp.py:14(solve)
   591719    4.463    0.000    4.463    0.000 {method 'reduce' of 'numpy.ufunc' objects}
   591720    4.387    0.000  274.145    0.000 flow.py:343(add_constraint)
  2958603    4.272    0.000    4.272    0.000 {built-in method numpy.core.multiarray.zeros}
   591710    4.257    0.000    5.255    0.000 flow.py:505(copy)
2366896/2366884    3.108    0.000    3.708    0.000 defmatrix.py:292(__array_finalize__)
  2366858    3.103    0.000    9.988    0.000 linalg.py:106(_makearray)
  1183438    2.806    0.000    7.270    0.000 fromnumeric.py:1364(ravel)
  1183440    2.772    0.000    2.772    0.000 {built-in method numpy.core.multiarray._fastCopyAndTranspose}
  2366868    2.644    0.000    6.188    0.000 numeric.py:463(asarray)
   591719    2.530    0.000    7.681    0.000 fromnumeric.py:1710(sum)
  1183429    2.446    0.000    2.978    0.000 linalg.py:139(_commonType)
   591720    2.423    0.000    6.897    0.000 linalg.py:180(_fastCopyAndTranspose)
  1183438    2.107    0.000    2.107    0.000 {method 'ravel' of 'numpy.ndarray' objects}
   591709    2.045    0.000    2.429    0.000 flow.py:431(__init__)
  3550309    1.852    0.000    1.852    0.000 {built-in method builtins.min}
   591711    1.838    0.000    1.838    0.000 flow.py:584(distribute)
  5917278    1.815    0.000    1.815    0.000 {built-in method builtins.isinstance}
   591720    1.494    0.000    1.929    0.000 linalg.py:168(_to_native_byte_order)
  1183438    1.475    0.000    1.809    0.000 numeric.py:534(asanyarray)
  1183440    1.396    0.000    2.510    0.000 {method 'transpose' of 'numpy.ndarray' objects}
   591731    1.316    0.000    1.316    0.000 {method 'copy' of 'numpy.ndarray' objects}
   591709    1.181    0.000    1.858    0.000 linalg.py:209(_assertNdSquareness)
  1775151    1.110    0.000    1.110    0.000 {built-in method builtins.max}
   591709    0.995    0.000    0.995    0.000 {method 'squeeze' of 'numpy.ndarray' objects}
  4142006    0.993    0.000    0.993    0.000 {built-in method builtins.issubclass}
  1775148    0.928    0.000    1.388    0.000 linalg.py:111(isComplexType)
   591709    0.886    0.000    1.881    0.000 fromnumeric.py:1143(squeeze)
   591709    0.886    0.000    0.886    0.000 linalg.py:101(get_linalg_error_extobj)
   591720    0.882    0.000    0.998    0.000 linalg.py:192(_assertRank2)
   591709    0.825    0.000    0.825    0.000 flow.py:464(add_constraint)
  6508799    0.788    0.000    0.788    0.000 {method 'is_integer' of 'float' objects}
   591709    0.762    0.000    0.862    0.000 linalg.py:198(_assertRankAtLeast2)
   591711    0.754    0.000    0.754    0.000 flow.py:495(__init__)
  4735564    0.753    0.000    0.753    0.000 {built-in method builtins.len}
  2366858    0.698    0.000    0.698    0.000 {built-in method builtins.getattr}
   591710    0.664    0.000    0.843    0.000 numeric.py:2160(isscalar)
   591709    0.596    0.000    0.596    0.000 {method 'tolist' of 'numpy.ndarray' objects}
   591720    0.438    0.000    0.626    0.000 linalg.py:124(_realType)
   591719    0.434    0.000    4.897    0.000 _methods.py:31(_sum)
   591720    0.403    0.000    0.403    0.000 {built-in method math.log}
  1183451    0.385    0.000    0.385    0.000 {built-in method builtins.hash}
  1183471    0.350    0.000    0.350    0.000 {method 'append' of 'list' objects}
  1775147    0.303    0.000    0.303    0.000 {method '__array_prepare__' of 'numpy.ndarray' objects}
  1183422    0.244    0.000    0.244    0.000 {method 'items' of 'dict' objects}
   591720    0.188    0.000    0.188    0.000 {method 'get' of 'dict' objects}
   591720    0.104    0.000    0.104    0.000 linalg.py:130(_linalgRealType)
      889    0.005    0.000    0.005    0.000 guess_weight.py:43(is_feasible)
        1    0.002    0.002  300.000  300.000 guess_weight.py:62(solve)
     1775    0.000    0.000    0.000    0.000 {built-in method builtins.sum}
       10    0.000    0.000    0.000    0.000 function_base.py:4740(insert)
       11    0.000    0.000    0.000    0.000 flow.py:239(__init__)
       11    0.000    0.000    0.000    0.000 {method 'dot' of 'numpy.ndarray' objects}
        1    0.000    0.000  300.000  300.000 toboggan.py:77(find_opt_size)
     24/3    0.000    0.000    0.000    0.000 partition.py:23(f)
       11    0.000    0.000    0.000    0.000 defmatrix.py:246(__new__)
        1    0.000    0.000    0.000    0.000 flow.py:211(has_bad_bounds)
       11    0.000    0.000    0.000    0.000 {method 'view' of 'numpy.ndarray' objects}
       10    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.empty}
       10    0.000    0.000    0.000    0.000 numeric.py:1490(rollaxis)
        2    0.000    0.000    0.000    0.000 partition.py:17(visit)
       10    0.000    0.000    0.000    0.000 {method '__array_wrap__' of 'numpy.ndarray' objects}
        2    0.000    0.000    0.000    0.000 twodim_base.py:139(eye)
        4    0.000    0.000    0.000    0.000 {built-in method builtins.print}
        1    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.arange}
        4    0.000    0.000    0.000    0.000 {method 'format' of 'str' objects}
        2    0.000    0.000    0.000    0.000 signal.py:35(_enum_to_int)
       21    0.000    0.000    0.000    0.000 {method 'tobytes' of 'memoryview' objects}
        1    0.000    0.000    0.000    0.000 flow.py:550(__hash__)
        1    0.000    0.000    0.000    0.000 partition.py:15(algorithm_u)
        1    0.000    0.000    0.000    0.000 toboggan.py:44(__exit__)
        8    0.000    0.000    0.000    0.000 guess_weight.py:74(<genexpr>)
       11    0.000    0.000    0.000    0.000 guess_weight.py:99(<genexpr>)
        1    0.000    0.000    0.000    0.000 toboggan.py:36(handle_timeout)
        1    0.000    0.000    0.000    0.000 graphs.py:67(labeled_neighborhood)
        2    0.000    0.000    0.000    0.000 {built-in method _signal.alarm}
       10    0.000    0.000    0.000    0.000 {method 'item' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 toboggan.py:39(__enter__)
       20    0.000    0.000    0.000    0.000 guess_weight.py:82(<lambda>)
        2    0.000    0.000    0.000    0.000 partition.py:18(<listcomp>)
        1    0.000    0.000    0.000    0.000 {built-in method _signal.signal}
        1    0.000    0.000    0.000    0.000 enum.py:215(__call__)
        1    0.000    0.000    0.000    0.000 signal.py:45(signal)
        2    0.000    0.000    0.000    0.000 partition.py:55(b)
        1    0.000    0.000    0.000    0.000 enum.py:459(__new__)
        1    0.000    0.000    0.000    0.000 graphs.py:52(__iter__)
        1    0.000    0.000    0.000    0.000 signal.py:25(_int_to_enum)
        1    0.000    0.000    0.000    0.000 graphs.py:55(source)
        1    0.000    0.000    0.000    0.000 toboggan.py:32(__init__)
        1    0.000    0.000    0.000    0.000 graphs.py:129(in_degree)
        1    0.000    0.000    0.000    0.000 {built-in method builtins.iter}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 flow.py:422(__hash__)
        1    0.000    0.000    0.000    0.000 guess_weight.py:101(<listcomp>)
        1    0.000    0.000    0.000    0.000 graphs.py:87(in_neighborhood)


# All_info	n_in	m_in	n_red	m_red	k_gtrue	k_cut	k_impro	k_opt	time_w	time_p
All_info	35	57	7	29	12	10	11	None	300	0
weights	
Finished instance.

# Timeout is set to 300
# Recovering paths
# Running on instances 10215
# Ground-truth available in file ../../research/instances/rnaseq/zebrafish/22.truth

File 22.graph instance 10214 name ENSDARG00000056322 with n = 39, m = 59, and truth = 12:
[(0, 2, 60), (0, 10, 734), (0, 2, 1), (0, 10, 3), (0, 10, 364), (0, 10, 1306), (2, 10, 60), (2, 10, 1), (10, 15, 4), (10, 38, 1), (10, 21, 30), (10, 21, 6), (10, 15, 1328), (10, 21, 734), (10, 21, 365), (15, 38, 60), (15, 38, 364), (15, 38, 908), (21, 23, 23), (21, 23, 1112), (23, 25, 1112), (23, 25, 23), (25, 33, 3), (25, 33, 1126), (25, 38, 6), (33, 35, 3), (33, 35, 1126), (35, 38, 30), (35, 38, 365), (35, 38, 734)]
# Preprocessing
#	Graph has an edge cut of size 8.
#	Investigating cutsets yields bound 8.
#	User supplied k value of 1.
#	Continuing using k = 8
# Reduced instance has n = 10, m = 30, and lower_bound = 8:
Searching for minimum-sized set of weights, timeout set at 300
# 	Call guess_weight with k = 8
# 	Call guess_weight with k = 9
Number of 1s is 1
Timed out after 300 seconds
         185059354 function calls (185051465 primitive calls) in 300.000 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
  2739800   50.004    0.000   50.004    0.000 {built-in method numpy.linalg.lapack_lite.dgelsd}
  1369901   41.604    0.000  164.648    0.000 linalg.py:1830(lstsq)
 15068913   23.292    0.000   23.292    0.000 {built-in method numpy.core.multiarray.array}
  1369901   22.528    0.000  258.115    0.000 flow.py:296(_test_row)
  1369892   21.542    0.000   38.972    0.000 linalg.py:296(solve)
  1369894   11.508    0.000   21.018    0.000 flow.py:553(push)
  2739828   11.503    0.000   16.800    0.000 defmatrix.py:314(__getitem__)
  5479585    8.745    0.000    8.745    0.000 {method 'astype' of 'numpy.ndarray' objects}
        1    8.392    8.392  299.997  299.997 dp.py:14(solve)
  1369900    7.330    0.000    7.330    0.000 {method 'reduce' of 'numpy.ufunc' objects}
  1369901    6.451    0.000  269.236    0.000 flow.py:343(add_constraint)
  6849506    5.834    0.000    5.834    0.000 {built-in method numpy.core.multiarray.zeros}
  1369893    5.391    0.000    6.743    0.000 flow.py:505(copy)
5479612/5479603    4.229    0.000    5.086    0.000 defmatrix.py:292(__array_finalize__)
  5479586    4.203    0.000   13.679    0.000 linalg.py:106(_makearray)
  2739800    3.902    0.000   10.380    0.000 fromnumeric.py:1364(ravel)
  1369900    3.860    0.000   12.202    0.000 fromnumeric.py:1710(sum)
  2739793    3.656    0.000    4.416    0.000 linalg.py:139(_commonType)
  5479594    3.562    0.000    8.259    0.000 numeric.py:463(asarray)
  1369901    3.229    0.000    7.962    0.000 linalg.py:180(_fastCopyAndTranspose)
  2739802    3.140    0.000    3.140    0.000 {built-in method numpy.core.multiarray._fastCopyAndTranspose}
  1369892    3.016    0.000    3.540    0.000 flow.py:431(__init__)
 13699058    2.872    0.000    2.872    0.000 {built-in method builtins.isinstance}
  2739800    2.868    0.000    2.868    0.000 {method 'ravel' of 'numpy.ndarray' objects}
  1369894    2.748    0.000    2.767    0.000 flow.py:584(distribute)
  8219427    2.523    0.000    2.523    0.000 {built-in method builtins.min}
  1369910    2.063    0.000    2.063    0.000 {method 'copy' of 'numpy.ndarray' objects}
  1369901    2.060    0.000    2.723    0.000 linalg.py:168(_to_native_byte_order)
  2739800    2.022    0.000    2.509    0.000 numeric.py:534(asanyarray)
  2739802    1.925    0.000    3.513    0.000 {method 'transpose' of 'numpy.ndarray' objects}
  4109789    1.535    0.000    1.535    0.000 {built-in method builtins.max}
  1369892    1.524    0.000    2.405    0.000 linalg.py:209(_assertNdSquareness)
  1369892    1.414    0.000    1.414    0.000 {method 'squeeze' of 'numpy.ndarray' objects}
  4109693    1.399    0.000    2.030    0.000 linalg.py:111(isComplexType)
  9589278    1.390    0.000    1.390    0.000 {built-in method builtins.issubclass}
  1369892    1.361    0.000    2.775    0.000 fromnumeric.py:1143(squeeze)
  1458780    1.351    0.000    1.351    0.000 flow.py:464(add_constraint)
  1369892    1.333    0.000    1.333    0.000 linalg.py:101(get_linalg_error_extobj)
  5479586    1.216    0.000    1.216    0.000 {built-in method builtins.getattr}
  1369901    1.206    0.000    1.358    0.000 linalg.py:192(_assertRank2)
  1369892    1.164    0.000    1.291    0.000 linalg.py:198(_assertRankAtLeast2)
 10959846    1.047    0.000    1.047    0.000 {built-in method builtins.len}
  1369892    1.028    0.000    1.271    0.000 numeric.py:2160(isscalar)
  1369894    1.028    0.000    1.028    0.000 flow.py:495(__init__)
 12329028    0.890    0.000    0.890    0.000 {method 'is_integer' of 'float' objects}
  1369892    0.849    0.000    0.849    0.000 {method 'tolist' of 'numpy.ndarray' objects}
  1369901    0.707    0.000    0.707    0.000 {built-in method math.log}
  1369900    0.670    0.000    8.000    0.000 _methods.py:31(_sum)
  1369901    0.542    0.000    0.851    0.000 linalg.py:124(_realType)
  2756944    0.542    0.000    0.542    0.000 {method 'append' of 'list' objects}
  2739811    0.524    0.000    0.524    0.000 {built-in method builtins.hash}
  4109692    0.483    0.000    0.483    0.000 {method '__array_prepare__' of 'numpy.ndarray' objects}
  2739788    0.325    0.000    0.325    0.000 {method 'items' of 'dict' objects}
  1369901    0.309    0.000    0.309    0.000 {method 'get' of 'dict' objects}
  1369901    0.134    0.000    0.134    0.000 linalg.py:130(_linalgRealType)
     1903    0.010    0.000    0.014    0.000 partition.py:17(visit)
7285/1904    0.003    0.000    0.019    0.000 partition.py:23(f)
3971/1472    0.002    0.000    0.014    0.000 partition.py:55(b)
     1903    0.002    0.000    0.002    0.000 partition.py:18(<listcomp>)
      294    0.002    0.000    0.002    0.000 guess_weight.py:43(is_feasible)
        2    0.001    0.000  300.000  150.000 guess_weight.py:62(solve)
      598    0.000    0.000    0.000    0.000 {built-in method builtins.sum}
        8    0.000    0.000    0.000    0.000 function_base.py:4740(insert)
        9    0.000    0.000    0.000    0.000 flow.py:239(__init__)
        1    0.000    0.000    0.000    0.000 flow.py:60(_compute_max_weight_bounds)
        8    0.000    0.000    0.000    0.000 {method 'dot' of 'numpy.ndarray' objects}
        1    0.000    0.000  300.000  300.000 toboggan.py:77(find_opt_size)
        9    0.000    0.000    0.000    0.000 defmatrix.py:246(__new__)
        2    0.000    0.000    0.000    0.000 flow.py:211(has_bad_bounds)
        1    0.000    0.000    0.000    0.000 flow.py:81(_compute_weight_bounds)
        8    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.empty}
        9    0.000    0.000    0.000    0.000 {method 'view' of 'numpy.ndarray' objects}
        2    0.000    0.000    0.000    0.000 twodim_base.py:139(eye)
        5    0.000    0.000    0.000    0.000 {built-in method builtins.print}
        8    0.000    0.000    0.000    0.000 numeric.py:1490(rollaxis)
        8    0.000    0.000    0.000    0.000 {method '__array_wrap__' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 flow.py:198(try_larger_k)
        2    0.000    0.000    0.000    0.000 signal.py:35(_enum_to_int)
        5    0.000    0.000    0.000    0.000 {method 'format' of 'str' objects}
        1    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.arange}
        1    0.000    0.000    0.000    0.000 signal.py:45(signal)
       19    0.000    0.000    0.000    0.000 guess_weight.py:99(<genexpr>)
       10    0.000    0.000    0.000    0.000 graphs.py:126(out_degree)
        1    0.000    0.000    0.000    0.000 toboggan.py:39(__enter__)
       20    0.000    0.000    0.000    0.000 graphs.py:78(neighborhood)
        1    0.000    0.000    0.000    0.000 enum.py:215(__call__)
        2    0.000    0.000    0.000    0.000 graphs.py:129(in_degree)
        1    0.000    0.000    0.000    0.000 partition.py:15(algorithm_u)
        4    0.000    0.000    0.000    0.000 graphs.py:52(__iter__)
       17    0.000    0.000    0.000    0.000 {method 'tobytes' of 'memoryview' objects}
        1    0.000    0.000    0.000    0.000 flow.py:550(__hash__)
        1    0.000    0.000    0.000    0.000 toboggan.py:44(__exit__)
        1    0.000    0.000    0.000    0.000 graphs.py:61(sink)
        1    0.000    0.000    0.000    0.000 toboggan.py:36(handle_timeout)
       10    0.000    0.000    0.000    0.000 graphs.py:84(out_neighborhood)
        4    0.000    0.000    0.000    0.000 {built-in method builtins.iter}
        1    0.000    0.000    0.000    0.000 signal.py:25(_int_to_enum)
        1    0.000    0.000    0.000    0.000 flow.py:72(<dictcomp>)
        2    0.000    0.000    0.000    0.000 {built-in method _signal.alarm}
        1    0.000    0.000    0.000    0.000 graphs.py:67(labeled_neighborhood)
        8    0.000    0.000    0.000    0.000 {method 'item' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 toboggan.py:32(__init__)
        1    0.000    0.000    0.000    0.000 guess_weight.py:101(<listcomp>)
        1    0.000    0.000    0.000    0.000 flow.py:422(__hash__)
        1    0.000    0.000    0.000    0.000 enum.py:459(__new__)
        1    0.000    0.000    0.000    0.000 {built-in method _signal.signal}
        1    0.000    0.000    0.000    0.000 flow.py:101(<listcomp>)
       11    0.000    0.000    0.000    0.000 guess_weight.py:74(<genexpr>)
       15    0.000    0.000    0.000    0.000 guess_weight.py:82(<lambda>)
        2    0.000    0.000    0.000    0.000 graphs.py:55(source)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        2    0.000    0.000    0.000    0.000 graphs.py:87(in_neighborhood)
        1    0.000    0.000    0.000    0.000 flow.py:97(<listcomp>)


# All_info	n_in	m_in	n_red	m_red	k_gtrue	k_cut	k_impro	k_opt	time_w	time_p
All_info	39	59	10	30	12	8	8	None	300	0
weights	
Finished instance.

# Timeout is set to 300
# Recovering paths
# Running on instances 119
# Ground-truth available in file ../../research/instances/rnaseq/zebrafish/79.truth

File 79.graph instance 118 name ENSDARG00000045822 with n = 35, m = 48, and truth = 9:
[(0, 5, 68), (0, 5, 24), (0, 5, 1286), (0, 5, 2064), (5, 27, 115), (5, 27, 495), (5, 27, 279), (5, 27, 369), (5, 27, 6), (5, 27, 1363), (5, 27, 24), (5, 27, 791), (27, 30, 1354), (27, 30, 2088), (30, 34, 24), (30, 34, 68), (30, 34, 791), (30, 34, 2559)]
# Preprocessing
#	Graph has an edge cut of size 8.
#	Investigating cutsets yields bound 8.
#	User supplied k value of 1.
#	Continuing using k = 8
# Reduced instance has n = 5, m = 18, and lower_bound = 8:
Searching for minimum-sized set of weights, timeout set at 300
# 	Call guess_weight with k = 8
# 	Call guess_weight with k = 9
Timed out after 300 seconds
         169054776 function calls (168071253 primitive calls) in 300.000 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
  2805958   55.941    0.000   55.941    0.000 {built-in method numpy.linalg.lapack_lite.dgelsd}
  1402979   41.708    0.000  172.081    0.000 linalg.py:1830(lstsq)
 16120481   26.297    0.000   26.297    0.000 {built-in method numpy.core.multiarray.array}
  1402979   16.742    0.000  282.727    0.000 flow.py:343(add_constraint)
  1402979   11.644    0.000  219.007    0.000 flow.py:296(_test_row)
   699501   11.631    0.000   20.076    0.000 linalg.py:296(solve)
   699535   10.775    0.000   18.126    0.000 function_base.py:4740(insert)
  3691534    9.918    0.000   13.607    0.000 defmatrix.py:314(__getitem__)
7116351/6280692    7.423    0.000    8.481    0.000 defmatrix.py:292(__array_finalize__)
  1402979    7.316    0.000    7.316    0.000 {method 'reduce' of 'numpy.ufunc' objects}
  7014901    6.081    0.000    6.081    0.000 {built-in method numpy.core.multiarray.zeros}
   740330    5.945    0.000   12.102    0.000 flow.py:553(push)
  3355936    5.573    0.000    5.573    0.000 {method 'astype' of 'numpy.ndarray' objects}
   699540    5.334    0.000   15.033    0.000 flow.py:239(__init__)
        5    5.140    1.028  299.997   59.999 dp.py:14(solve)
  2805958    4.132    0.000   10.654    0.000 fromnumeric.py:1364(ravel)
  1402979    3.896    0.000   12.258    0.000 fromnumeric.py:1710(sum)
 17951056    3.571    0.000    3.571    0.000 {built-in method builtins.isinstance}
  4904495    3.492    0.000    8.511    0.000 numeric.py:463(asarray)
  2102519    3.349    0.000    3.893    0.000 {method 'copy' of 'numpy.ndarray' objects}
  4204960    3.341    0.000   10.723    0.000 linalg.py:106(_makearray)
  1402979    3.300    0.000    8.046    0.000 linalg.py:180(_fastCopyAndTranspose)
   740325    3.226    0.000    4.104    0.000 flow.py:505(copy)
  2805958    3.133    0.000    3.133    0.000 {built-in method numpy.core.multiarray._fastCopyAndTranspose}
  2805958    2.989    0.000    2.989    0.000 {method 'ravel' of 'numpy.ndarray' objects}
   835655    2.958    0.000    3.568    0.000 {method 'dot' of 'numpy.ndarray' objects}
  2102480    2.894    0.000    3.485    0.000 linalg.py:139(_commonType)
  7714415    2.388    0.000    2.388    0.000 {built-in method builtins.min}
  2805958    2.169    0.000    2.671    0.000 numeric.py:534(asanyarray)
  1402979    2.120    0.000    2.746    0.000 linalg.py:168(_to_native_byte_order)
  2805958    1.858    0.000    3.374    0.000 {method 'transpose' of 'numpy.ndarray' objects}
   740330    1.743    0.000    2.053    0.000 flow.py:584(distribute)
   699540    1.292    0.000    7.108    0.000 defmatrix.py:246(__new__)
  1402979    1.266    0.000    1.417    0.000 linalg.py:192(_assertRank2)
  3505505    1.265    0.000    1.265    0.000 {built-in method builtins.max}
  3505459    1.195    0.000    1.758    0.000 linalg.py:111(isComplexType)
  7710419    1.153    0.000    1.153    0.000 {built-in method builtins.issubclass}
 12055992    1.124    0.000    1.124    0.000 {built-in method builtins.len}
   699535    1.017    0.000    1.017    0.000 numeric.py:1490(rollaxis)
   699501    0.828    0.000    1.282    0.000 linalg.py:209(_assertNdSquareness)
   699540    0.827    0.000    3.631    0.000 {method 'view' of 'numpy.ndarray' objects}
   699501    0.807    0.000    1.586    0.000 fromnumeric.py:1143(squeeze)
   699501    0.779    0.000    0.779    0.000 {method 'squeeze' of 'numpy.ndarray' objects}
  4204960    0.777    0.000    0.777    0.000 {built-in method builtins.getattr}
   699535    0.758    0.000    0.758    0.000 {built-in method numpy.core.multiarray.empty}
  1402979    0.751    0.000    0.751    0.000 {built-in method math.log}
   699535    0.745    0.000    1.577    0.000 {method '__array_wrap__' of 'numpy.ndarray' objects}
  1402979    0.693    0.000    8.009    0.000 _methods.py:31(_sum)
   740334    0.685    0.000    0.685    0.000 flow.py:495(__init__)
   835620    0.677    0.000    0.817    0.000 numeric.py:2160(isscalar)
   699501    0.650    0.000    0.650    0.000 linalg.py:101(get_linalg_error_extobj)
   699501    0.591    0.000    0.655    0.000 linalg.py:198(_assertRankAtLeast2)
  2099008    0.587    0.000    0.587    0.000 {built-in method builtins.hash}
  1402979    0.581    0.000    0.891    0.000 linalg.py:124(_realType)
  3081909    0.528    0.000    0.528    0.000 {method 'append' of 'list' objects}
   424512    0.472    0.000    0.472    0.000 linalg.py:89(_raise_linalgerror_singular)
  3080947    0.323    0.000    0.323    0.000 {method '__array_prepare__' of 'numpy.ndarray' objects}
  1402979    0.310    0.000    0.310    0.000 {method 'get' of 'dict' objects}
  1399075    0.284    0.000    0.284    0.000 {method 'tobytes' of 'memoryview' objects}
  1480682    0.193    0.000    0.193    0.000 {method 'items' of 'dict' objects}
   274989    0.178    0.000    0.178    0.000 {method 'tolist' of 'numpy.ndarray' objects}
    30847    0.168    0.000    0.215    0.000 partition.py:17(visit)
   699535    0.150    0.000    0.150    0.000 {method 'item' of 'numpy.ndarray' objects}
  1402979    0.141    0.000    0.141    0.000 linalg.py:130(_linalgRealType)
121442/30852    0.052    0.000    0.310    0.000 partition.py:23(f)
85673/28399    0.043    0.000    0.265    0.000 partition.py:55(b)
   140750    0.030    0.000    0.030    0.000 {method 'is_integer' of 'float' objects}
    41012    0.027    0.000    0.027    0.000 flow.py:464(add_constraint)
    30847    0.022    0.000    0.022    0.000 partition.py:18(<listcomp>)
      350    0.002    0.000    0.002    0.000 guess_weight.py:43(is_feasible)
        2    0.001    0.000  300.000  150.000 guess_weight.py:62(solve)
      189    0.000    0.000    0.001    0.000 flow.py:431(__init__)
      453    0.000    0.000    0.000    0.000 {built-in method builtins.sum}
        4    0.000    0.000    0.000    0.000 twodim_base.py:139(eye)
        2    0.000    0.000    0.000    0.000 flow.py:211(has_bad_bounds)
       15    0.000    0.000    0.000    0.000 flow.py:550(__hash__)
        1    0.000    0.000    0.000    0.000 flow.py:60(_compute_max_weight_bounds)
        1    0.000    0.000  300.000  300.000 toboggan.py:77(find_opt_size)
        5    0.000    0.000    0.000    0.000 partition.py:15(algorithm_u)
        5    0.000    0.000    0.000    0.000 graphs.py:67(labeled_neighborhood)
        3    0.000    0.000    0.000    0.000 flow.py:441(is_redundant)
        1    0.000    0.000    0.000    0.000 flow.py:81(_compute_weight_bounds)
        2    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.arange}
        5    0.000    0.000    0.000    0.000 graphs.py:61(sink)
       25    0.000    0.000    0.000    0.000 graphs.py:84(out_neighborhood)
        6    0.000    0.000    0.000    0.000 graphs.py:55(source)
       30    0.000    0.000    0.000    0.000 graphs.py:78(neighborhood)
        4    0.000    0.000    0.000    0.000 {built-in method builtins.print}
       12    0.000    0.000    0.000    0.000 graphs.py:52(__iter__)
       25    0.000    0.000    0.000    0.000 graphs.py:126(out_degree)
        2    0.000    0.000    0.000    0.000 signal.py:35(_enum_to_int)
        4    0.000    0.000    0.000    0.000 {method 'format' of 'str' objects}
       13    0.000    0.000    0.000    0.000 flow.py:444(<genexpr>)
        6    0.000    0.000    0.000    0.000 graphs.py:129(in_degree)
        1    0.000    0.000    0.000    0.000 toboggan.py:39(__enter__)
        1    0.000    0.000    0.000    0.000 flow.py:198(try_larger_k)
        1    0.000    0.000    0.000    0.000 toboggan.py:36(handle_timeout)
        1    0.000    0.000    0.000    0.000 enum.py:215(__call__)
        1    0.000    0.000    0.000    0.000 signal.py:45(signal)
       12    0.000    0.000    0.000    0.000 {built-in method builtins.iter}
        6    0.000    0.000    0.000    0.000 graphs.py:87(in_neighborhood)
        2    0.000    0.000    0.000    0.000 {built-in method _signal.alarm}
       12    0.000    0.000    0.000    0.000 guess_weight.py:74(<genexpr>)
        3    0.000    0.000    0.000    0.000 {built-in method builtins.all}
        1    0.000    0.000    0.000    0.000 enum.py:459(__new__)
       14    0.000    0.000    0.000    0.000 guess_weight.py:82(<lambda>)
        1    0.000    0.000    0.000    0.000 {built-in method builtins.sorted}
        1    0.000    0.000    0.000    0.000 toboggan.py:44(__exit__)
        1    0.000    0.000    0.000    0.000 signal.py:25(_int_to_enum)
        9    0.000    0.000    0.000    0.000 guess_weight.py:78(<genexpr>)
        1    0.000    0.000    0.000    0.000 {built-in method _signal.signal}
        1    0.000    0.000    0.000    0.000 toboggan.py:32(__init__)
        2    0.000    0.000    0.000    0.000 flow.py:488(__hash__)
        1    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
        4    0.000    0.000    0.000    0.000 flow.py:422(__hash__)
        1    0.000    0.000    0.000    0.000 flow.py:97(<listcomp>)
        1    0.000    0.000    0.000    0.000 flow.py:72(<dictcomp>)
        1    0.000    0.000    0.000    0.000 flow.py:101(<listcomp>)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}


# All_info	n_in	m_in	n_red	m_red	k_gtrue	k_cut	k_impro	k_opt	time_w	time_p
All_info	35	48	5	18	9	8	8	None	300	0
weights	
Finished instance.

# Timeout is set to 300
# Recovering paths
# Running on instances 1940
# Ground-truth available in file ../../research/instances/rnaseq/zebrafish/79.truth

File 79.graph instance 1939 name ENSDARG00000099045 with n = 22, m = 28, and truth = 7:
[(0, 8, 1225), (0, 8, 2795), (8, 10, 1932), (8, 10, 10), (8, 15, 2078), (10, 15, 1277), (10, 15, 665), (15, 21, 1225), (15, 21, 882), (15, 21, 401), (15, 21, 1512)]
# Preprocessing
#	Graph has an edge cut of size 4.
#	Investigating cutsets yields bound 5.
#	User supplied k value of 1.
#	Continuing using k = 5
# Reduced instance has n = 5, m = 11, and lower_bound = 5:
Searching for minimum-sized set of weights, timeout set at 300
# 	Call guess_weight with k = 5
# 	Call guess_weight with k = 6
Timed out after 300 seconds
         184408287 function calls (183245422 primitive calls) in 300.000 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
    17045   23.190    0.001  160.029    0.009 _linprog.py:212(_solve_simplex)
  1305050   21.407    0.000   21.407    0.000 {built-in method numpy.linalg.lapack_lite.dgelsd}
   652525   19.336    0.000   75.019    0.000 linalg.py:1830(lstsq)
  4146892   17.100    0.000   17.100    0.000 {method 'reduce' of 'numpy.ufunc' objects}
  1853984   16.314    0.000   41.092    0.000 core.py:2913(__array_finalize__)
 12092149   16.084    0.000   16.084    0.000 {built-in method numpy.core.multiarray.array}
  2083533   10.876    0.000   22.015    0.000 core.py:2887(_update_from)
 21089460   10.027    0.000   10.027    0.000 {built-in method builtins.getattr}
   652525    8.367    0.000  126.521    0.000 flow.py:343(add_constraint)
   229549    6.564    0.000   25.460    0.000 core.py:1157(__call__)
   652525    5.390    0.000   95.004    0.000 flow.py:296(_test_row)
  2416235    5.224    0.000    7.070    0.000 defmatrix.py:314(__getitem__)
   341210    5.224    0.000    8.778    0.000 function_base.py:4740(insert)
3956762/3251071    5.099    0.000   11.603    0.000 core.py:3320(__setattr__)
  1377841    4.769    0.000   23.836    0.000 core.py:3639(filled)
   286486    4.507    0.000    7.973    0.000 linalg.py:296(solve)
  4244105    4.354    0.000    4.354    0.000 {built-in method numpy.core.multiarray.zeros}
   229549    4.147    0.000   87.140    0.000 _linprog.py:173(_pivot_row)
 21338665    4.126    0.000    4.126    0.000 {built-in method builtins.isinstance}
  1623335    3.830    0.000    3.830    0.000 {built-in method numpy.core.multiarray.copyto}
    16495    3.727    0.000  167.514    0.010 _linprog.py:391(_linprog_simplex)
3229638/2837654    3.484    0.000    3.969    0.000 defmatrix.py:292(__array_finalize__)
   705691    3.390    0.000    7.217    0.000 core.py:3351(__setmask__)
  2371464    3.255    0.000    3.528    0.000 {method 'copy' of 'numpy.ndarray' objects}
  1377841    2.998    0.000    6.650    0.000 core.py:440(_check_fill_value)
   459097    2.616    0.000   21.898    0.000 core.py:3893(__eq__)
  1571190    2.593    0.000    2.593    0.000 {method 'astype' of 'numpy.ndarray' objects}
   246593    2.590    0.000   49.581    0.000 _linprog.py:137(_pivot_col)
   341648    2.448    0.000    7.199    0.000 flow.py:239(__init__)
  2313081    2.408    0.000    2.408    0.000 core.py:3540(_get_data)
      438    2.405    0.005  299.985    0.685 dp.py:14(solve)
   229549    2.369    0.000    5.251    0.000 core.py:848(__call__)
 10188113    2.342    0.000    2.342    0.000 {method 'update' of 'dict' objects}
   705691    2.321    0.000   35.830    0.000 core.py:1810(masked_where)
  1735985    2.226    0.000   34.449    0.000 {method 'view' of 'numpy.ndarray' objects}
   476142    2.209    0.000    5.875    0.000 core.py:4289(count)
   459097    2.086    0.000   30.814    0.000 core.py:5460(min)
  1411382    1.969    0.000    2.736    0.000 core.py:1308(make_mask_descr)
  2330126    1.942    0.000    1.942    0.000 {built-in method builtins.hasattr}
  2761367    1.925    0.000    4.374    0.000 numeric.py:463(asarray)
  1338040    1.896    0.000    5.004    0.000 fromnumeric.py:1364(ravel)
   652525    1.758    0.000    5.602    0.000 fromnumeric.py:1710(sum)
   918196    1.686    0.000    4.024    0.000 numeric.py:2686(seterr)
   459097    1.589    0.000   11.900    0.000 {method 'view' of 'numpy.generic' objects}
   918196    1.547    0.000    1.633    0.000 numeric.py:2786(geterr)
   652525    1.537    0.000    3.728    0.000 linalg.py:180(_fastCopyAndTranspose)
  1305050    1.460    0.000    1.460    0.000 {built-in method numpy.core.multiarray._fastCopyAndTranspose}
  1878022    1.451    0.000    4.717    0.000 linalg.py:106(_makearray)
  1338040    1.450    0.000    1.450    0.000 {method 'ravel' of 'numpy.ndarray' objects}
   705691    1.418    0.000    7.960    0.000 core.py:1531(make_mask)
   391546    1.363    0.000    1.586    0.000 {method 'dot' of 'numpy.ndarray' objects}
  4387753    1.341    0.000    1.341    0.000 {built-in method builtins.issubclass}
   939011    1.311    0.000    1.570    0.000 linalg.py:139(_commonType)
  1738951    1.273    0.000    1.574    0.000 numeric.py:534(asanyarray)
  2100027    1.217    0.000    9.805    0.000 {method 'any' of 'numpy.ndarray' objects}
   197312    1.113    0.000    2.668    0.000 flow.py:553(push)
  3549124    1.104    0.000    1.104    0.000 {built-in method builtins.min}
   459097    1.014    0.000    1.823    0.000 numerictypes.py:603(obj2sctype)
   652525    1.000    0.000    1.294    0.000 linalg.py:168(_to_native_byte_order)
  1305050    0.884    0.000    1.592    0.000 {method 'transpose' of 'numpy.ndarray' objects}
  2100027    0.884    0.000    8.588    0.000 _methods.py:37(_any)
  1164788    0.812    0.000    9.654    0.000 core.py:599(filled)
   229549    0.807    0.000    1.159    0.000 core.py:645(get_masked_subclass)
   384416    0.756    0.000    1.208    0.000 shape_base.py:61(atleast_2d)
   459097    0.736    0.000    9.498    0.000 core.py:6951(where)
   705691    0.726    0.000    2.872    0.000 core.py:1626(make_mask_none)
   196401    0.706    0.000    0.903    0.000 flow.py:505(copy)
   384416    0.704    0.000    0.704    0.000 {built-in method numpy.core.multiarray.concatenate}
  7229260    0.678    0.000    0.678    0.000 {built-in method builtins.len}
  1625655    0.637    0.000    0.637    0.000 {built-in method builtins.max}
   341648    0.619    0.000    3.546    0.000 defmatrix.py:246(__new__)
   652525    0.599    0.000    0.670    0.000 linalg.py:192(_assertRank2)
   459097    0.597    0.000    2.903    0.000 core.py:242(_recursive_extremum_fill_value)
  1128667    0.558    0.000    6.285    0.000 _methods.py:31(_sum)
  1591536    0.558    0.000    0.813    0.000 linalg.py:111(isComplexType)
   459098    0.527    0.000    2.372    0.000 numeric.py:3088(__exit__)
   918196    0.502    0.000    0.502    0.000 {built-in method numpy.core.umath.seterrobj}
   459097    0.495    0.000    2.842    0.000 core.py:1798(_check_mask_axis)
   341210    0.494    0.000    0.494    0.000 numeric.py:1490(rollaxis)
   459097    0.483    0.000    2.305    0.000 numerictypes.py:774(__getitem__)
   459098    0.474    0.000    2.653    0.000 numeric.py:3083(__enter__)
  1411382    0.473    0.000    0.473    0.000 core.py:1287(_recursive_make_descr)
   229549    0.470    0.000   26.069    0.000 core.py:4023(__truediv__)
   459097    0.456    0.000    0.456    0.000 {method 'nonzero' of 'numpy.ndarray' objects}
   476142    0.451    0.000    3.055    0.000 {method 'sum' of 'numpy.ndarray' objects}
   197312    0.408    0.000    0.652    0.000 flow.py:584(distribute)
   358255    0.387    0.000    0.387    0.000 {built-in method numpy.core.multiarray.empty}
   459098    0.376    0.000    0.470    0.000 numeric.py:3079(__init__)
   459097    0.367    0.000    3.412    0.000 core.py:253(minimum_fill_value)
   459097    0.366    0.000    2.419    0.000 {method 'min' of 'numpy.ndarray' objects}
   341210    0.366    0.000    0.761    0.000 {method '__array_wrap__' of 'numpy.ndarray' objects}
   229549    0.359    0.000    0.359    0.000 {built-in method numpy.core.multiarray.can_cast}
   286486    0.346    0.000    0.532    0.000 linalg.py:209(_assertNdSquareness)
   652525    0.344    0.000    0.344    0.000 {built-in method math.log}
   286486    0.317    0.000    0.317    0.000 {method 'squeeze' of 'numpy.ndarray' objects}
   286486    0.309    0.000    0.626    0.000 fromnumeric.py:1143(squeeze)
  1871892    0.309    0.000    0.309    0.000 {method 'append' of 'list' objects}
   459101    0.309    0.000    2.347    0.000 {method 'all' of 'numpy.ndarray' objects}
   353317    0.294    0.000    0.355    0.000 numeric.py:2160(isscalar)
  1836392    0.289    0.000    0.289    0.000 {built-in method numpy.core.umath.geterrobj}
  1121621    0.280    0.000    0.280    0.000 {built-in method builtins.hash}
   652525    0.268    0.000    0.414    0.000 linalg.py:124(_realType)
   286486    0.266    0.000    0.266    0.000 linalg.py:101(get_linalg_error_extobj)
   286486    0.232    0.000    0.257    0.000 linalg.py:198(_assertRankAtLeast2)
   459098    0.227    0.000    0.592    0.000 core.py:672(getdata)
   229549    0.223    0.000    0.223    0.000 core.py:659(<listcomp>)
   192208    0.219    0.000    2.041    0.000 shape_base.py:180(vstack)
   459097    0.219    0.000    2.052    0.000 _methods.py:28(_amin)
    18383    0.205    0.000  168.127    0.009 flow.py:261(is_redundant)
   328460    0.205    0.000    0.205    0.000 flow.py:464(add_constraint)
   459101    0.203    0.000    2.038    0.000 _methods.py:40(_all)
   882075    0.200    0.000    0.200    0.000 {method 'get' of 'dict' objects}
   192208    0.183    0.000    1.391    0.000 shape_base.py:234(<listcomp>)
   153416    0.173    0.000    0.173    0.000 linalg.py:89(_raise_linalgerror_singular)
   459098    0.166    0.000    0.255    0.000 core.py:1344(getmask)
   197276    0.152    0.000    0.152    0.000 flow.py:495(__init__)
  1438120    0.150    0.000    0.150    0.000 {method '__array_prepare__' of 'numpy.ndarray' objects}
   682858    0.138    0.000    0.138    0.000 {method 'tobytes' of 'memoryview' objects}
    31112    0.132    0.000    0.168    0.000 partition.py:17(visit)
    47044    0.105    0.000    0.122    0.000 flow.py:431(__init__)
   229549    0.102    0.000    0.139    0.000 core.py:3883(_delegate_binop)
   459098    0.094    0.000    0.094    0.000 {method 'pop' of 'dict' objects}
    16495    0.079    0.000  167.597    0.010 _linprog.py:824(linprog)
   133070    0.078    0.000    0.078    0.000 {method 'tolist' of 'numpy.ndarray' objects}
   652525    0.077    0.000    0.077    0.000 linalg.py:130(_linalgRealType)
   459097    0.073    0.000    0.073    0.000 {method 'count' of 'tuple' objects}
   341210    0.070    0.000    0.070    0.000 {method 'item' of 'numpy.ndarray' objects}
    16495    0.062    0.000    0.062    0.000 index_tricks.py:665(fill_diagonal)
82251/32023    0.047    0.000    0.242    0.000 partition.py:23(f)
   397579    0.047    0.000    0.047    0.000 {method 'items' of 'dict' objects}
   433247    0.045    0.000    0.045    0.000 {method 'is_integer' of 'float' objects}
    16495    0.030    0.000    0.148    0.000 fromnumeric.py:1866(any)
36848/21886    0.026    0.000    0.139    0.000 partition.py:55(b)
    16495    0.021    0.000    0.092    0.000 numeric.py:150(ones)
    23987    0.020    0.000    0.044    0.000 {built-in method builtins.all}
     5604    0.020    0.000    0.032    0.000 flow.py:441(is_redundant)
    31112    0.019    0.000    0.019    0.000 partition.py:18(<listcomp>)
    49446    0.018    0.000    0.018    0.000 flow.py:265(<genexpr>)
    18383    0.015    0.000    0.015    0.000 flow.py:264(<listcomp>)
    16494    0.014    0.000    0.014    0.000 optimize.py:112(__getattr__)
    16495    0.011    0.000    0.022    0.000 numeric.py:380(count_nonzero)
    16495    0.011    0.000    0.011    0.000 {built-in method numpy.core.multiarray.count_nonzero}
     1869    0.009    0.000    0.010    0.000 guess_weight.py:43(is_feasible)
    20328    0.009    0.000    0.009    0.000 flow.py:444(<genexpr>)
      550    0.008    0.000    0.010    0.000 function_base.py:4538(delete)
      550    0.005    0.000    0.024    0.000 core.py:2753(__new__)
    16494    0.005    0.000    0.005    0.000 {built-in method builtins.abs}
      550    0.005    0.000    0.005    0.000 _linprog.py:325(<listcomp>)
        2    0.005    0.003  300.000  150.000 guess_weight.py:62(solve)
     3027    0.005    0.000    0.006    0.000 flow.py:550(__hash__)
    16495    0.004    0.000    0.004    0.000 {method 'lower' of 'str' objects}
    16495    0.004    0.000    0.004    0.000 optimize.py:137(_check_unknown_options)
      911    0.003    0.000    0.003    0.000 partition.py:15(algorithm_u)
      911    0.002    0.000    0.002    0.000 graphs.py:67(labeled_neighborhood)
      550    0.002    0.000    0.026    0.000 core.py:6155(array)
      438    0.001    0.000    0.004    0.000 graphs.py:61(sink)
      516    0.001    0.000    0.001    0.000 flow.py:533(__eq__)
     2190    0.001    0.000    0.003    0.000 graphs.py:126(out_degree)
     1242    0.001    0.000    0.001    0.000 {method 'add' of 'set' objects}
     2702    0.001    0.000    0.001    0.000 {built-in method builtins.sum}
     2190    0.001    0.000    0.001    0.000 graphs.py:84(out_neighborhood)
     2195    0.001    0.000    0.001    0.000 graphs.py:78(neighborhood)
      439    0.001    0.000    0.001    0.000 graphs.py:55(source)
      550    0.001    0.000    0.001    0.000 core.py:3562(get_fill_value)
      878    0.000    0.000    0.001    0.000 graphs.py:52(__iter__)
      550    0.000    0.000    0.000    0.000 {method 'indices' of 'slice' objects}
       35    0.000    0.000    0.000    0.000 _linprog.py:327(<listcomp>)
      439    0.000    0.000    0.001    0.000 graphs.py:129(in_degree)
      988    0.000    0.000    0.000    0.000 flow.py:422(__hash__)
      550    0.000    0.000    0.000    0.000 index_tricks.py:650(__getitem__)
      878    0.000    0.000    0.000    0.000 {built-in method builtins.iter}
      439    0.000    0.000    0.000    0.000 graphs.py:87(in_neighborhood)
      692    0.000    0.000    0.000    0.000 flow.py:488(__hash__)
        1    0.000    0.000  300.000  300.000 toboggan.py:77(find_opt_size)
        4    0.000    0.000    0.000    0.000 twodim_base.py:139(eye)
        2    0.000    0.000    0.000    0.000 flow.py:211(has_bad_bounds)
        1    0.000    0.000    0.000    0.000 flow.py:60(_compute_max_weight_bounds)
        4    0.000    0.000    0.000    0.000 numeric.py:2584(array_equal)
        1    0.000    0.000    0.000    0.000 flow.py:81(_compute_weight_bounds)
        2    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.arange}
        4    0.000    0.000    0.000    0.000 {built-in method builtins.print}
        4    0.000    0.000    0.000    0.000 {method 'format' of 'str' objects}
        2    0.000    0.000    0.000    0.000 signal.py:35(_enum_to_int)
        4    0.000    0.000    0.000    0.000 flow.py:402(__eq__)
       20    0.000    0.000    0.000    0.000 guess_weight.py:82(<lambda>)
        1    0.000    0.000    0.000    0.000 signal.py:45(signal)
        1    0.000    0.000    0.000    0.000 flow.py:198(try_larger_k)
        1    0.000    0.000    0.000    0.000 toboggan.py:39(__enter__)
       12    0.000    0.000    0.000    0.000 guess_weight.py:74(<genexpr>)
        1    0.000    0.000    0.000    0.000 enum.py:215(__call__)
        1    0.000    0.000    0.000    0.000 getlimits.py:96(__new__)
        2    0.000    0.000    0.000    0.000 {built-in method _signal.alarm}
        1    0.000    0.000    0.000    0.000 {built-in method _signal.signal}
        1    0.000    0.000    0.000    0.000 enum.py:459(__new__)
        1    0.000    0.000    0.000    0.000 toboggan.py:36(handle_timeout)
        1    0.000    0.000    0.000    0.000 signal.py:25(_int_to_enum)
        1    0.000    0.000    0.000    0.000 flow.py:72(<dictcomp>)
        1    0.000    0.000    0.000    0.000 toboggan.py:44(__exit__)
        2    0.000    0.000    0.000    0.000 flow.py:474(__eq__)
        1    0.000    0.000    0.000    0.000 flow.py:97(<listcomp>)
        1    0.000    0.000    0.000    0.000 flow.py:101(<listcomp>)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 toboggan.py:32(__init__)


# All_info	n_in	m_in	n_red	m_red	k_gtrue	k_cut	k_impro	k_opt	time_w	time_p
All_info	22	28	5	11	7	4	5	None	300	0
weights	
Finished instance.

# Timeout is set to 300
# Recovering paths
# Running on instances 5338
# Ground-truth available in file ../../research/instances/rnaseq/zebrafish/79.truth

File 79.graph instance 5337 name ENSDARG00000018460 with n = 22, m = 33, and truth = 7:
[(0, 5, 22), (0, 5, 277), (0, 5, 2859), (0, 5, 46), (5, 21, 22), (5, 10, 965), (5, 10, 2217), (10, 12, 2399), (10, 12, 783), (12, 16, 1286), (12, 16, 1113), (12, 16, 783), (16, 21, 1746), (16, 21, 1113), (16, 21, 2), (16, 21, 275), (16, 21, 46)]
# Preprocessing
#	Graph has an edge cut of size 6.
#	Investigating cutsets yields bound 6.
#	User supplied k value of 1.
#	Continuing using k = 6
# Reduced instance has n = 6, m = 17, and lower_bound = 6:
Searching for minimum-sized set of weights, timeout set at 300
# 	Call guess_weight with k = 6
# 	Call guess_weight with k = 7
# Weights computation took 261.36 seconds
# Solution: {SolvedConstr (2, 22, 46, 275, 781, 965, 1113)}
         153234345 function calls (152243854 primitive calls) in 261.356 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
  2494742   44.960    0.000   44.960    0.000 {built-in method numpy.linalg.lapack_lite.dgelsd}
  1247371   36.723    0.000  146.806    0.000 linalg.py:1830(lstsq)
 14273287   22.692    0.000   22.692    0.000 {built-in method numpy.core.multiarray.array}
  1247371   15.720    0.000  247.121    0.000 flow.py:343(add_constraint)
  1247371   10.740    0.000  188.170    0.000 flow.py:296(_test_row)
   613199    9.791    0.000   17.044    0.000 linalg.py:296(solve)
   613564    9.285    0.000   15.606    0.000 function_base.py:4740(insert)
  3164813    9.230    0.000   13.074    0.000 defmatrix.py:314(__getitem__)
7329206/6417609    7.355    0.000    8.424    0.000 defmatrix.py:292(__array_finalize__)
  1247674    6.497    0.000    6.497    0.000 {method 'reduce' of 'numpy.ufunc' objects}
  6236938    5.321    0.000    5.321    0.000 {built-in method numpy.core.multiarray.zeros}
  3013814    4.902    0.000    4.902    0.000 {method 'astype' of 'numpy.ndarray' objects}
   622906    4.556    0.000    9.600    0.000 flow.py:553(push)
       73    4.506    0.062  261.349    3.580 dp.py:14(solve)
   613637    4.428    0.000   12.577    0.000 flow.py:239(__init__)
  2494744    3.614    0.000    9.342    0.000 fromnumeric.py:1364(ravel)
   911524    3.546    0.000    4.844    0.000 {method 'dot' of 'numpy.ndarray' objects}
  1247371    3.419    0.000   10.801    0.000 fromnumeric.py:1710(sum)
 16989202    3.263    0.000    3.263    0.000 {built-in method builtins.isinstance}
  4334749    3.015    0.000    7.361    0.000 numeric.py:463(asarray)
  1861128    2.904    0.000    3.352    0.000 {method 'copy' of 'numpy.ndarray' objects}
  1247371    2.901    0.000    7.064    0.000 linalg.py:180(_fastCopyAndTranspose)
  2494742    2.810    0.000    2.810    0.000 {built-in method numpy.core.multiarray._fastCopyAndTranspose}
  3721140    2.781    0.000    9.112    0.000 linalg.py:106(_makearray)
  2494744    2.612    0.000    2.612    0.000 {method 'ravel' of 'numpy.ndarray' objects}
   622826    2.603    0.000    3.325    0.000 flow.py:505(copy)
  1860570    2.564    0.000    3.103    0.000 linalg.py:139(_commonType)
  6850072    2.102    0.000    2.102    0.000 {built-in method builtins.min}
  2494773    1.936    0.000    2.361    0.000 numeric.py:534(asanyarray)
  1247371    1.810    0.000    2.343    0.000 linalg.py:168(_to_native_byte_order)
  2494742    1.662    0.000    2.941    0.000 {method 'transpose' of 'numpy.ndarray' objects}
   622906    1.483    0.000    1.719    0.000 flow.py:584(distribute)
  1247371    1.121    0.000    1.257    0.000 linalg.py:192(_assertRank2)
  3107986    1.098    0.000    1.098    0.000 {built-in method builtins.max}
   613637    1.079    0.000    5.953    0.000 defmatrix.py:246(__new__)
  3107941    1.053    0.000    1.537    0.000 linalg.py:111(isComplexType)
 10872049    1.052    0.000    1.052    0.000 {built-in method builtins.len}
  6829161    1.023    0.000    1.023    0.000 {built-in method builtins.issubclass}
   911160    0.891    0.000    1.057    0.000 numeric.py:2160(isscalar)
   613564    0.884    0.000    0.884    0.000 numeric.py:1490(rollaxis)
   613199    0.688    0.000    1.081    0.000 linalg.py:209(_assertNdSquareness)
   613758    0.686    0.000    3.036    0.000 {method 'view' of 'numpy.ndarray' objects}
   613199    0.672    0.000    0.672    0.000 {method 'squeeze' of 'numpy.ndarray' objects}
  1247371    0.670    0.000    0.670    0.000 {built-in method math.log}
   613199    0.657    0.000    1.329    0.000 fromnumeric.py:1143(squeeze)
   613565    0.655    0.000    0.655    0.000 {built-in method numpy.core.multiarray.empty}
   613564    0.650    0.000    1.350    0.000 {method '__array_wrap__' of 'numpy.ndarray' objects}
  3722809    0.642    0.000    0.642    0.000 {built-in method builtins.getattr}
   613199    0.585    0.000    0.585    0.000 linalg.py:101(get_linalg_error_extobj)
  1247412    0.572    0.000    7.068    0.000 _methods.py:31(_sum)
   622972    0.564    0.000    0.564    0.000 flow.py:495(__init__)
  2024348    0.517    0.000    0.517    0.000 {built-in method builtins.hash}
   613199    0.499    0.000    0.557    0.000 linalg.py:198(_assertRankAtLeast2)
  1247371    0.483    0.000    0.750    0.000 linalg.py:124(_realType)
  2683185    0.447    0.000    0.447    0.000 {method 'append' of 'list' objects}
   353663    0.395    0.000    0.395    0.000 linalg.py:89(_raise_linalgerror_singular)
  2754278    0.283    0.000    0.283    0.000 {method '__array_prepare__' of 'numpy.ndarray' objects}
  1247392    0.267    0.000    0.267    0.000 {method 'get' of 'dict' objects}
  1227201    0.244    0.000    0.244    0.000 {method 'tobytes' of 'memoryview' objects}
    91638    0.206    0.000    0.242    0.000 flow.py:431(__init__)
  1247371    0.165    0.000    0.165    0.000 linalg.py:130(_linalgRealType)
  1246251    0.159    0.000    0.159    0.000 {method 'items' of 'dict' objects}
   259536    0.155    0.000    0.155    0.000 {method 'tolist' of 'numpy.ndarray' objects}
    26890    0.131    0.000    0.167    0.000 partition.py:17(visit)
   613564    0.128    0.000    0.128    0.000 {method 'item' of 'numpy.ndarray' objects}
   101632    0.102    0.000    0.102    0.000 flow.py:464(add_constraint)
   940949    0.092    0.000    0.092    0.000 {method 'is_integer' of 'float' objects}
82283/26970    0.040    0.000    0.235    0.000 partition.py:23(f)
43398/19878    0.029    0.000    0.151    0.000 partition.py:55(b)
    26890    0.019    0.000    0.019    0.000 partition.py:18(<listcomp>)
      870    0.004    0.000    0.005    0.000 guess_weight.py:43(is_feasible)
        1    0.002    0.002    0.014    0.014 _linprog.py:212(_solve_simplex)
        2    0.002    0.001  261.355  130.678 guess_weight.py:62(solve)
      161    0.001    0.000    0.004    0.000 core.py:2913(__array_finalize__)
      181    0.001    0.000    0.002    0.000 core.py:2887(_update_from)
       20    0.001    0.000    0.002    0.000 core.py:1157(__call__)
  343/282    0.000    0.000    0.001    0.000 core.py:3320(__setattr__)
      120    0.000    0.000    0.002    0.000 core.py:3639(filled)
      106    0.000    0.000    0.001    0.000 flow.py:441(is_redundant)
       20    0.000    0.000    0.008    0.000 _linprog.py:173(_pivot_row)
     1458    0.000    0.000    0.000    0.000 {built-in method builtins.sum}
      141    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.copyto}
      234    0.000    0.000    0.000    0.000 flow.py:550(__hash__)
        1    0.000    0.000    0.015    0.015 _linprog.py:391(_linprog_simplex)
       61    0.000    0.000    0.001    0.000 core.py:3351(__setmask__)
       80    0.000    0.000    0.000    0.000 partition.py:15(algorithm_u)
      120    0.000    0.000    0.001    0.000 core.py:440(_check_fill_value)
       21    0.000    0.000    0.004    0.000 _linprog.py:137(_pivot_col)
       40    0.000    0.000    0.002    0.000 core.py:3893(__eq__)
       80    0.000    0.000    0.000    0.000 graphs.py:67(labeled_neighborhood)
      201    0.000    0.000    0.000    0.000 core.py:3540(_get_data)
       20    0.000    0.000    0.000    0.000 core.py:848(__call__)
      444    0.000    0.000    0.000    0.000 graphs.py:126(out_degree)
       74    0.000    0.000    0.001    0.000 graphs.py:61(sink)
       61    0.000    0.000    0.003    0.000 core.py:1810(masked_where)
      885    0.000    0.000    0.000    0.000 {method 'update' of 'dict' objects}
      202    0.000    0.000    0.000    0.000 {built-in method builtins.hasattr}
       41    0.000    0.000    0.001    0.000 core.py:4289(count)
      122    0.000    0.000    0.000    0.000 core.py:1308(make_mask_descr)
       40    0.000    0.000    0.003    0.000 core.py:5460(min)
       80    0.000    0.000    0.000    0.000 numeric.py:2686(seterr)
       40    0.000    0.000    0.001    0.000 {method 'view' of 'numpy.generic' objects}
      444    0.000    0.000    0.000    0.000 graphs.py:84(out_neighborhood)
       80    0.000    0.000    0.000    0.000 numeric.py:2786(geterr)
      320    0.000    0.000    0.000    0.000 flow.py:444(<genexpr>)
       61    0.000    0.000    0.001    0.000 core.py:1531(make_mask)
      182    0.000    0.000    0.001    0.000 {method 'any' of 'numpy.ndarray' objects}
      450    0.000    0.000    0.000    0.000 graphs.py:78(neighborhood)
       74    0.000    0.000    0.000    0.000 graphs.py:55(source)
       40    0.000    0.000    0.000    0.000 numerictypes.py:603(obj2sctype)
      182    0.000    0.000    0.001    0.000 _methods.py:37(_any)
      107    0.000    0.000    0.000    0.000 {built-in method builtins.all}
      149    0.000    0.000    0.000    0.000 graphs.py:52(__iter__)
       20    0.000    0.000    0.000    0.000 core.py:645(get_masked_subclass)
      101    0.000    0.000    0.001    0.000 core.py:599(filled)
       61    0.000    0.000    0.000    0.000 core.py:1626(make_mask_none)
       40    0.000    0.000    0.001    0.000 core.py:6951(where)
       28    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.concatenate}
       40    0.000    0.000    0.000    0.000 core.py:242(_recursive_extremum_fill_value)
       28    0.000    0.000    0.000    0.000 shape_base.py:61(atleast_2d)
       74    0.000    0.000    0.000    0.000 graphs.py:129(in_degree)
       40    0.000    0.000    0.000    0.000 numeric.py:3088(__exit__)
       40    0.000    0.000    0.000    0.000 core.py:1798(_check_mask_axis)
       41    0.000    0.000    0.000    0.000 {method 'sum' of 'numpy.ndarray' objects}
       40    0.000    0.000    0.000    0.000 numerictypes.py:774(__getitem__)
       40    0.000    0.000    0.000    0.000 numeric.py:3079(__init__)
       40    0.000    0.000    0.000    0.000 {method 'min' of 'numpy.ndarray' objects}
      149    0.000    0.000    0.000    0.000 {built-in method builtins.iter}
       20    0.000    0.000    0.002    0.000 core.py:4023(__truediv__)
       40    0.000    0.000    0.000    0.000 numeric.py:3083(__enter__)
       40    0.000    0.000    0.000    0.000 {method 'nonzero' of 'numpy.ndarray' objects}
      122    0.000    0.000    0.000    0.000 core.py:1287(_recursive_make_descr)
       80    0.000    0.000    0.000    0.000 {built-in method numpy.core.umath.seterrobj}
       40    0.000    0.000    0.000    0.000 {method 'all' of 'numpy.ndarray' objects}
       74    0.000    0.000    0.000    0.000 graphs.py:87(in_neighborhood)
       20    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.can_cast}
      160    0.000    0.000    0.000    0.000 {built-in method numpy.core.umath.geterrobj}
       40    0.000    0.000    0.000    0.000 core.py:253(minimum_fill_value)
        1    0.000    0.000    0.000    0.000 flow.py:60(_compute_max_weight_bounds)
       40    0.000    0.000    0.000    0.000 _methods.py:28(_amin)
       20    0.000    0.000    0.000    0.000 core.py:659(<listcomp>)
        1    0.000    0.000  261.356  261.356 toboggan.py:77(find_opt_size)
       73    0.000    0.000    0.000    0.000 flow.py:422(__hash__)
       14    0.000    0.000    0.000    0.000 shape_base.py:180(vstack)
       40    0.000    0.000    0.000    0.000 core.py:672(getdata)
        1    0.000    0.000    0.000    0.000 flow.py:81(_compute_weight_bounds)
        5    0.000    0.000    0.000    0.000 {built-in method builtins.print}
        1    0.000    0.000    0.015    0.015 flow.py:261(is_redundant)
       40    0.000    0.000    0.000    0.000 _methods.py:40(_all)
        2    0.000    0.000    0.000    0.000 flow.py:211(has_bad_bounds)
       40    0.000    0.000    0.000    0.000 core.py:1344(getmask)
        2    0.000    0.000    0.000    0.000 twodim_base.py:139(eye)
       14    0.000    0.000    0.000    0.000 shape_base.py:234(<listcomp>)
        4    0.000    0.000    0.000    0.000 {method 'format' of 'str' objects}
       20    0.000    0.000    0.000    0.000 core.py:3883(_delegate_binop)
       40    0.000    0.000    0.000    0.000 {method 'pop' of 'dict' objects}
       40    0.000    0.000    0.000    0.000 {method 'count' of 'tuple' objects}
        1    0.000    0.000    0.015    0.015 _linprog.py:824(linprog)
        1    0.000    0.000    0.000    0.000 index_tricks.py:665(fill_diagonal)
        8    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
        1    0.000    0.000    0.000    0.000 flow.py:198(try_larger_k)
        1    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.arange}
        2    0.000    0.000    0.000    0.000 signal.py:35(_enum_to_int)
        1    0.000    0.000    0.000    0.000 flow.py:438(__repr__)
        1    0.000    0.000    0.000    0.000 toboggan.py:39(__enter__)
        1    0.000    0.000    0.000    0.000 fromnumeric.py:1866(any)
        1    0.000    0.000    0.000    0.000 signal.py:45(signal)
        1    0.000    0.000    0.000    0.000 flow.py:533(__eq__)
        1    0.000    0.000    0.000    0.000 enum.py:215(__call__)
        1    0.000    0.000    0.000    0.000 numeric.py:150(ones)
        2    0.000    0.000    0.000    0.000 {built-in method _signal.alarm}
        1    0.000    0.000    0.000    0.000 numeric.py:380(count_nonzero)
        1    0.000    0.000    0.000    0.000 signal.py:25(_int_to_enum)
        1    0.000    0.000    0.000    0.000 {built-in method _signal.signal}
        1    0.000    0.000    0.000    0.000 toboggan.py:44(__exit__)
        1    0.000    0.000    0.000    0.000 enum.py:459(__new__)
        1    0.000    0.000    0.000    0.000 flow.py:72(<dictcomp>)
        1    0.000    0.000    0.000    0.000 getlimits.py:96(__new__)
        1    0.000    0.000    0.000    0.000 {method 'lower' of 'str' objects}
        1    0.000    0.000    0.000    0.000 flow.py:97(<listcomp>)
        7    0.000    0.000    0.000    0.000 guess_weight.py:74(<genexpr>)
        1    0.000    0.000    0.000    0.000 optimize.py:112(__getattr__)
        1    0.000    0.000    0.000    0.000 optimize.py:137(_check_unknown_options)
        1    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.count_nonzero}
        1    0.000    0.000    0.000    0.000 flow.py:101(<listcomp>)
        1    0.000    0.000    0.000    0.000 flow.py:264(<listcomp>)
        1    0.000    0.000    0.000    0.000 {built-in method builtins.abs}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        8    0.000    0.000    0.000    0.000 flow.py:488(__hash__)
        5    0.000    0.000    0.000    0.000 flow.py:265(<genexpr>)
       13    0.000    0.000    0.000    0.000 guess_weight.py:82(<lambda>)
        1    0.000    0.000    0.000    0.000 toboggan.py:32(__init__)
        1    0.000    0.000    0.000    0.000 {built-in method time.time}


#	Now recovering the 7 paths in the solution (2, 22, 46, 275, 781, 965, 1113)
# Recovery took 0.13 seconds
# Paths, weights pass test: flow decomposition confirmed.
# Solutions:
# 	Path with weight = 2
# 	[0, 1, 4, 5, 6, 7, 8, 9, 10, 12, 15, 16, 17, 18, 21]
# 	Path with weight = 22
# 	[0, 2, 3, 4, 5, 21]
# 	Path with weight = 46
# 	[0, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21]
# 	Path with weight = 275
# 	[0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21]
# 	Path with weight = 781
# 	[0, 4, 5, 6, 7, 8, 9, 10, 12, 15, 16, 21]
# 	Path with weight = 965
# 	[0, 4, 5, 6, 10, 11, 12, 14, 15, 16, 21]
# 	Path with weight = 1113
# 	[0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 21]
# All_info	n_in	m_in	n_red	m_red	k_gtrue	k_cut	k_impro	k_opt	time_w	time_p
All_info	22	33	6	17	7	6	6	7	261.35684275627136	0.1305091381072998
weights	 2 22 46 275 781 965 1113
Finished instance.

# Timeout is set to 300
# Recovering paths
# Running on instances 6656
# Ground-truth available in file ../../research/instances/rnaseq/zebrafish/79.truth

File 79.graph instance 6655 name ENSDARG00000086819 with n = 42, m = 52, and truth = 8:
[(0, 4, 181), (0, 29, 200), (0, 25, 210), (0, 4, 40), (4, 25, 219), (4, 25, 2), (25, 29, 250), (25, 41, 181), (29, 31, 2), (29, 37, 29), (29, 31, 419), (31, 37, 200), (31, 37, 2), (31, 37, 219), (37, 41, 40), (37, 41, 23), (37, 41, 387)]
# Preprocessing
#	Graph has an edge cut of size 5.
#	Investigating cutsets yields bound 6.
#	User supplied k value of 1.
#	Continuing using k = 6
# Reduced instance has n = 7, m = 17, and lower_bound = 6:
Searching for minimum-sized set of weights, timeout set at 300
# 	Call guess_weight with k = 6
Timed out after 300 seconds
         182171667 function calls (180862562 primitive calls) in 300.000 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
  2345610   36.773    0.000   36.773    0.000 {built-in method numpy.linalg.lapack_lite.dgelsd}
  1172805   34.796    0.000  132.447    0.000 linalg.py:1830(lstsq)
 15031805   22.980    0.000   22.980    0.000 {built-in method numpy.core.multiarray.array}
  1172969   18.088    0.000  230.472    0.000 flow.py:343(add_constraint)
  2420567   10.937    0.000   10.937    0.000 {method 'reduce' of 'numpy.ufunc' objects}
   694040   10.435    0.000   17.480    0.000 function_base.py:4740(insert)
  4407789    9.692    0.000   13.128    0.000 defmatrix.py:314(__getitem__)
  1172805    8.984    0.000  162.923    0.000 flow.py:296(_test_row)
     5161    8.364    0.002   57.067    0.011 _linprog.py:212(_solve_simplex)
7141724/6124677    7.455    0.000    8.469    0.000 defmatrix.py:292(__array_finalize__)
   413381    6.599    0.000   11.552    0.000 linalg.py:296(solve)
   662411    5.742    0.000   14.507    0.000 core.py:2913(__array_finalize__)
  6202872    5.530    0.000    5.530    0.000 {built-in method numpy.core.multiarray.zeros}
   694309    5.030    0.000   14.252    0.000 flow.py:239(__init__)
  2650813    4.309    0.000    4.309    0.000 {method 'astype' of 'numpy.ndarray' objects}
 22302920    4.234    0.000    4.234    0.000 {built-in method builtins.isinstance}
   744563    3.932    0.000    7.794    0.000 core.py:2887(_update_from)
  1016778    3.928    0.000    5.343    0.000 {method 'dot' of 'numpy.ndarray' objects}
 10037777    3.863    0.000    3.863    0.000 {built-in method builtins.getattr}
      269    3.562    0.013  299.990    1.115 dp.py:14(solve)
  2360026    3.524    0.000    4.032    0.000 {method 'copy' of 'numpy.ndarray' objects}
  2355864    3.306    0.000    8.701    0.000 fromnumeric.py:1364(ravel)
  1172804    3.194    0.000   10.087    0.000 fromnumeric.py:1710(sum)
  4056385    2.806    0.000    6.949    0.000 numeric.py:463(asarray)
  1172805    2.698    0.000    6.557    0.000 linalg.py:180(_fastCopyAndTranspose)
   441490    2.653    0.000    6.195    0.000 flow.py:553(push)
  2345610    2.584    0.000    2.584    0.000 {built-in method numpy.core.multiarray._fastCopyAndTranspose}
  3172372    2.487    0.000    7.938    0.000 linalg.py:106(_makearray)
  2355864    2.480    0.000    2.480    0.000 {method 'ravel' of 'numpy.ndarray' objects}
    82152    2.351    0.000    9.097    0.000 core.py:1157(__call__)
  1586186    2.107    0.000    2.547    0.000 linalg.py:139(_commonType)
  6277406    1.969    0.000    1.969    0.000 {built-in method builtins.min}
  2484039    1.846    0.000    2.279    0.000 numeric.py:534(asanyarray)
1412271/1160654    1.837    0.000    4.202    0.000 core.py:3320(__setattr__)
   440507    1.800    0.000    2.290    0.000 flow.py:505(copy)
  1172805    1.686    0.000    2.181    0.000 linalg.py:168(_to_native_byte_order)
   492946    1.685    0.000    8.428    0.000 core.py:3639(filled)
  2345610    1.539    0.000    2.764    0.000 {method 'transpose' of 'numpy.ndarray' objects}
    82152    1.490    0.000   31.093    0.000 _linprog.py:173(_pivot_row)
  1192382    1.418    0.000   14.921    0.000 {method 'view' of 'numpy.ndarray' objects}
   580191    1.360    0.000    1.360    0.000 {built-in method numpy.core.multiarray.copyto}
   251617    1.248    0.000    2.619    0.000 core.py:3351(__setmask__)
   694309    1.241    0.000    6.750    0.000 defmatrix.py:246(__new__)
  6259971    1.179    0.000    1.179    0.000 {built-in method builtins.issubclass}
     5127    1.168    0.000   59.415    0.012 _linprog.py:391(_linprog_simplex)
   441490    1.077    0.000    1.252    0.000 flow.py:584(distribute)
   492946    1.073    0.000    2.358    0.000 core.py:440(_check_fill_value)
  1172805    1.072    0.000    1.200    0.000 linalg.py:192(_assertRank2)
  2769314    1.004    0.000    1.004    0.000 {built-in method builtins.max}
 10873910    0.996    0.000    0.996    0.000 {built-in method builtins.len}
   694040    0.981    0.000    0.981    0.000 numeric.py:1490(rollaxis)
  2758991    0.958    0.000    1.404    0.000 linalg.py:111(isComplexType)
   164304    0.953    0.000    7.792    0.000 core.py:3893(__eq__)
    87313    0.900    0.000   17.576    0.000 _linprog.py:137(_pivot_col)
  3640663    0.846    0.000    0.846    0.000 {method 'update' of 'dict' objects}
   251617    0.841    0.000   12.779    0.000 core.py:1810(masked_where)
   826715    0.831    0.000    0.831    0.000 core.py:3540(_get_data)
    82152    0.830    0.000    1.863    0.000 core.py:848(__call__)
   169465    0.799    0.000    2.108    0.000 core.py:4289(count)
   741246    0.769    0.000    0.892    0.000 numeric.py:2160(isscalar)
   164304    0.742    0.000   10.891    0.000 core.py:5460(min)
   699201    0.733    0.000    0.733    0.000 {built-in method numpy.core.multiarray.empty}
   694040    0.722    0.000    1.492    0.000 {method '__array_wrap__' of 'numpy.ndarray' objects}
   503234    0.688    0.000    0.964    0.000 core.py:1308(make_mask_descr)
   831876    0.683    0.000    0.683    0.000 {built-in method builtins.hasattr}
  1342269    0.618    0.000    7.533    0.000 _methods.py:31(_sum)
  1172805    0.615    0.000    0.615    0.000 {built-in method math.log}
   328608    0.609    0.000    1.441    0.000 numeric.py:2686(seterr)
   164304    0.562    0.000    4.205    0.000 {method 'view' of 'numpy.generic' objects}
  2230626    0.558    0.000    0.558    0.000 {built-in method builtins.hash}
   328608    0.555    0.000    0.585    0.000 numeric.py:2786(geterr)
  1172805    0.527    0.000    0.787    0.000 linalg.py:124(_realType)
   251617    0.516    0.000    2.852    0.000 core.py:1531(make_mask)
   413381    0.504    0.000    0.781    0.000 linalg.py:209(_assertNdSquareness)
   749690    0.453    0.000    3.488    0.000 {method 'any' of 'numpy.ndarray' objects}
   413381    0.445    0.000    0.445    0.000 {method 'squeeze' of 'numpy.ndarray' objects}
   413381    0.440    0.000    0.885    0.000 fromnumeric.py:1143(squeeze)
  2598990    0.426    0.000    0.426    0.000 {method 'append' of 'list' objects}
   441044    0.380    0.000    0.380    0.000 flow.py:495(__init__)
   413381    0.376    0.000    0.376    0.000 linalg.py:101(get_linalg_error_extobj)
   164304    0.350    0.000    0.638    0.000 numerictypes.py:603(obj2sctype)
   413381    0.348    0.000    0.383    0.000 linalg.py:198(_assertRankAtLeast2)
   749690    0.312    0.000    3.035    0.000 _methods.py:37(_any)
   260779    0.302    0.000    0.302    0.000 linalg.py:89(_raise_linalgerror_singular)
   415921    0.301    0.000    3.441    0.000 core.py:599(filled)
    82152    0.285    0.000    0.412    0.000 core.py:645(get_masked_subclass)
  1254958    0.278    0.000    0.278    0.000 {method 'get' of 'dict' objects}
  1388349    0.277    0.000    0.277    0.000 {method 'tobytes' of 'memoryview' objects}
   164304    0.267    0.000    3.391    0.000 core.py:6951(where)
   251617    0.267    0.000    1.028    0.000 core.py:1626(make_mask_none)
  2498210    0.255    0.000    0.255    0.000 {method '__array_prepare__' of 'numpy.ndarray' objects}
   123048    0.243    0.000    0.384    0.000 shape_base.py:61(atleast_2d)
   123048    0.226    0.000    0.226    0.000 {built-in method numpy.core.multiarray.concatenate}
   164304    0.221    0.000    1.031    0.000 core.py:242(_recursive_extremum_fill_value)
   164304    0.191    0.000    0.844    0.000 numeric.py:3088(__exit__)
   328608    0.177    0.000    0.177    0.000 {built-in method numpy.core.umath.seterrobj}
   503234    0.176    0.000    0.176    0.000 core.py:1287(_recursive_make_descr)
   164304    0.176    0.000    1.007    0.000 core.py:1798(_check_mask_axis)
   164304    0.173    0.000    0.961    0.000 numeric.py:3083(__enter__)
   164304    0.172    0.000    0.810    0.000 numerictypes.py:774(__getitem__)
    82152    0.172    0.000    9.318    0.000 core.py:4023(__truediv__)
   169465    0.166    0.000    1.096    0.000 {method 'sum' of 'numpy.ndarray' objects}
   164304    0.166    0.000    0.166    0.000 {method 'nonzero' of 'numpy.ndarray' objects}
    72816    0.165    0.000    0.192    0.000 flow.py:431(__init__)
   164304    0.148    0.000    0.182    0.000 numeric.py:3079(__init__)
   694040    0.145    0.000    0.145    0.000 {method 'item' of 'numpy.ndarray' objects}
   164304    0.139    0.000    0.865    0.000 {method 'min' of 'numpy.ndarray' objects}
   164304    0.133    0.000    1.213    0.000 core.py:253(minimum_fill_value)
    82152    0.126    0.000    0.126    0.000 {built-in method numpy.core.multiarray.can_cast}
  1172805    0.119    0.000    0.119    0.000 linalg.py:130(_linalgRealType)
   884959    0.112    0.000    0.112    0.000 {method 'items' of 'dict' objects}
   164304    0.108    0.000    0.831    0.000 {method 'all' of 'numpy.ndarray' objects}
   657216    0.100    0.000    0.100    0.000 {built-in method numpy.core.umath.geterrobj}
    22594    0.098    0.000    0.124    0.000 partition.py:17(visit)
   152602    0.093    0.000    0.093    0.000 {method 'tolist' of 'numpy.ndarray' objects}
   164304    0.082    0.000    0.211    0.000 core.py:672(getdata)
    82152    0.082    0.000    0.082    0.000 core.py:659(<listcomp>)
    98216    0.081    0.000    0.081    0.000 flow.py:464(add_constraint)
   164304    0.079    0.000    0.727    0.000 _methods.py:28(_amin)
   164304    0.072    0.000    0.723    0.000 _methods.py:40(_all)
     6785    0.070    0.000   59.615    0.009 flow.py:261(is_redundant)
    61524    0.069    0.000    0.648    0.000 shape_base.py:180(vstack)
   614674    0.060    0.000    0.060    0.000 {method 'is_integer' of 'float' objects}
   164304    0.060    0.000    0.090    0.000 core.py:1344(getmask)
    61524    0.058    0.000    0.442    0.000 shape_base.py:234(<listcomp>)
    82152    0.036    0.000    0.049    0.000 core.py:3883(_delegate_binop)
   164304    0.034    0.000    0.034    0.000 {method 'pop' of 'dict' objects}
56407/23577    0.033    0.000    0.172    0.000 partition.py:23(f)
     8154    0.030    0.000    0.047    0.000 flow.py:441(is_redundant)
   164304    0.027    0.000    0.027    0.000 {method 'count' of 'tuple' objects}
     5127    0.025    0.000   59.442    0.012 _linprog.py:824(linprog)
     5127    0.020    0.000    0.020    0.000 index_tricks.py:665(fill_diagonal)
18626/11015    0.015    0.000    0.068    0.000 partition.py:55(b)
    22594    0.014    0.000    0.014    0.000 partition.py:18(<listcomp>)
    29096    0.013    0.000    0.013    0.000 flow.py:444(<genexpr>)
    14939    0.011    0.000    0.027    0.000 {built-in method builtins.all}
     5127    0.009    0.000    0.046    0.000 fromnumeric.py:1866(any)
    19081    0.007    0.000    0.007    0.000 flow.py:265(<genexpr>)
     5127    0.007    0.000    0.029    0.000 numeric.py:150(ones)
     1252    0.006    0.000    0.007    0.000 guess_weight.py:43(is_feasible)
     6785    0.006    0.000    0.006    0.000 flow.py:264(<listcomp>)
     5127    0.005    0.000    0.005    0.000 optimize.py:112(__getattr__)
     5127    0.004    0.000    0.007    0.000 numeric.py:380(count_nonzero)
     5127    0.003    0.000    0.003    0.000 {built-in method numpy.core.multiarray.count_nonzero}
     2336    0.003    0.000    0.004    0.000 flow.py:550(__hash__)
        1    0.003    0.003  300.000  300.000 guess_weight.py:62(solve)
      983    0.003    0.000    0.003    0.000 partition.py:15(algorithm_u)
      983    0.002    0.000    0.002    0.000 graphs.py:67(labeled_neighborhood)
     5127    0.002    0.000    0.002    0.000 {built-in method builtins.abs}
     5127    0.001    0.000    0.001    0.000 {method 'lower' of 'str' objects}
     5127    0.001    0.000    0.001    0.000 optimize.py:137(_check_unknown_options)
      268    0.001    0.000    0.003    0.000 graphs.py:61(sink)
     1876    0.001    0.000    0.002    0.000 graphs.py:126(out_degree)
     1876    0.001    0.000    0.001    0.000 graphs.py:84(out_neighborhood)
     2069    0.001    0.000    0.001    0.000 {built-in method builtins.sum}
     1876    0.001    0.000    0.001    0.000 graphs.py:78(neighborhood)
       34    0.000    0.000    0.001    0.000 function_base.py:4538(delete)
      817    0.000    0.000    0.001    0.000 {method 'add' of 'set' objects}
      269    0.000    0.000    0.001    0.000 graphs.py:55(source)
       34    0.000    0.000    0.002    0.000 core.py:2753(__new__)
       34    0.000    0.000    0.000    0.000 _linprog.py:325(<listcomp>)
      537    0.000    0.000    0.000    0.000 graphs.py:52(__iter__)
      783    0.000    0.000    0.000    0.000 flow.py:488(__hash__)
      269    0.000    0.000    0.000    0.000 graphs.py:129(in_degree)
       52    0.000    0.000    0.000    0.000 flow.py:533(__eq__)
       34    0.000    0.000    0.002    0.000 core.py:6155(array)
      269    0.000    0.000    0.000    0.000 graphs.py:87(in_neighborhood)
      537    0.000    0.000    0.000    0.000 {built-in method builtins.iter}
      303    0.000    0.000    0.000    0.000 flow.py:422(__hash__)
       34    0.000    0.000    0.000    0.000 core.py:3562(get_fill_value)
       34    0.000    0.000    0.000    0.000 {method 'indices' of 'slice' objects}
        1    0.000    0.000  300.000  300.000 toboggan.py:77(find_opt_size)
       34    0.000    0.000    0.000    0.000 index_tricks.py:650(__getitem__)
        2    0.000    0.000    0.000    0.000 twodim_base.py:139(eye)
        1    0.000    0.000    0.000    0.000 flow.py:211(has_bad_bounds)
        6    0.000    0.000    0.000    0.000 flow.py:474(__eq__)
        2    0.000    0.000    0.000    0.000 signal.py:35(_enum_to_int)
        1    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.arange}
        3    0.000    0.000    0.000    0.000 {built-in method builtins.print}
        3    0.000    0.000    0.000    0.000 {method 'format' of 'str' objects}
        1    0.000    0.000    0.000    0.000 signal.py:45(signal)
        1    0.000    0.000    0.000    0.000 toboggan.py:39(__enter__)
        2    0.000    0.000    0.000    0.000 {built-in method _signal.alarm}
        1    0.000    0.000    0.000    0.000 toboggan.py:36(handle_timeout)
        1    0.000    0.000    0.000    0.000 getlimits.py:96(__new__)
        1    0.000    0.000    0.000    0.000 {built-in method _signal.signal}
        1    0.000    0.000    0.000    0.000 enum.py:215(__call__)
        1    0.000    0.000    0.000    0.000 toboggan.py:44(__exit__)
        8    0.000    0.000    0.000    0.000 guess_weight.py:74(<genexpr>)
        1    0.000    0.000    0.000    0.000 signal.py:25(_int_to_enum)
        1    0.000    0.000    0.000    0.000 enum.py:459(__new__)
        1    0.000    0.000    0.000    0.000 toboggan.py:32(__init__)
       11    0.000    0.000    0.000    0.000 guess_weight.py:82(<lambda>)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}


# All_info	n_in	m_in	n_red	m_red	k_gtrue	k_cut	k_impro	k_opt	time_w	time_p
All_info	42	52	7	17	8	5	6	None	300	0
weights	
Finished instance.

# Timeout is set to 300
# Recovering paths
# Running on instances 10273
# Ground-truth available in file ../../research/instances/rnaseq/zebrafish/79.truth

File 79.graph instance 10272 name ENSDARG00000056322 with n = 34, m = 47, and truth = 9:
[(0, 7, 743), (0, 7, 54), (0, 7, 815), (0, 7, 1), (7, 19, 363), (7, 19, 333), (7, 13, 54), (7, 13, 39), (7, 13, 815), (7, 19, 9), (13, 33, 815), (13, 33, 54), (13, 33, 39), (19, 21, 363), (19, 21, 342), (21, 23, 363), (21, 23, 342), (23, 30, 495), (23, 30, 210), (30, 33, 495), (30, 33, 210)]
# Preprocessing
#	Graph has an edge cut of size 6.
#	Investigating cutsets yields bound 6.
#	User supplied k value of 1.
#	Continuing using k = 6
# Reduced instance has n = 8, m = 21, and lower_bound = 6:
Searching for minimum-sized set of weights, timeout set at 300
# 	Call guess_weight with k = 6
# 	Call guess_weight with k = 7
# 	Call guess_weight with k = 8
Number of 1s is 1
Timed out after 300 seconds
         186258711 function calls (186040087 primitive calls) in 300.000 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
  2645204   45.660    0.000   45.660    0.000 {built-in method numpy.linalg.lapack_lite.dgelsd}
  1322603   39.747    0.000  156.003    0.000 linalg.py:1830(lstsq)
 14548891   22.255    0.000   22.255    0.000 {built-in method numpy.core.multiarray.array}
  1322603   21.048    0.000  245.250    0.000 flow.py:296(_test_row)
  1322371   20.447    0.000   37.201    0.000 linalg.py:296(solve)
  2471903   16.582    0.000   31.498    0.000 flow.py:553(push)
  2645897   11.058    0.000   16.124    0.000 defmatrix.py:314(__getitem__)
       33   10.792    0.327  299.990    9.091 dp.py:14(solve)
  5289947    8.569    0.000    8.569    0.000 {method 'astype' of 'numpy.ndarray' objects}
  2471852    8.294    0.000   10.387    0.000 flow.py:505(copy)
  1322602    7.005    0.000    7.005    0.000 {method 'reduce' of 'numpy.ufunc' objects}
  1322603    6.044    0.000  255.719    0.000 flow.py:343(add_constraint)
  6613014    5.641    0.000    5.641    0.000 {built-in method numpy.core.multiarray.zeros}
5290865/5290580    4.250    0.000    5.076    0.000 defmatrix.py:292(__array_finalize__)
  5289948    4.170    0.000   13.505    0.000 linalg.py:106(_makearray)
  2471903    4.018    0.000    4.529    0.000 flow.py:584(distribute)
  2645204    3.765    0.000    9.924    0.000 fromnumeric.py:1364(ravel)
  1322602    3.612    0.000   11.583    0.000 fromnumeric.py:1710(sum)
  5290179    3.458    0.000    7.994    0.000 numeric.py:463(asarray)
  2644974    3.449    0.000    4.126    0.000 linalg.py:139(_commonType)
  1322603    3.316    0.000    8.004    0.000 linalg.py:180(_fastCopyAndTranspose)
  2645204    3.111    0.000    3.111    0.000 {built-in method numpy.core.multiarray._fastCopyAndTranspose}
  1322371    2.832    0.000    3.328    0.000 flow.py:431(__init__)
  2645204    2.781    0.000    2.781    0.000 {method 'ravel' of 'numpy.ndarray' objects}
 13227731    2.572    0.000    2.572    0.000 {built-in method builtins.isinstance}
  7935424    2.443    0.000    2.443    0.000 {built-in method builtins.min}
  2645204    2.073    0.000    2.530    0.000 numeric.py:534(asanyarray)
  1322867    2.028    0.000    2.029    0.000 {method 'copy' of 'numpy.ndarray' objects}
  2556969    1.979    0.000    1.979    0.000 flow.py:464(add_constraint)
  1322602    1.972    0.000    2.581    0.000 linalg.py:168(_to_native_byte_order)
  2645206    1.906    0.000    3.620    0.000 {method 'transpose' of 'numpy.ndarray' objects}
  2471917    1.600    0.000    1.600    0.000 flow.py:495(__init__)
  3967703    1.478    0.000    1.478    0.000 {built-in method builtins.max}
  1322371    1.472    0.000    2.341    0.000 linalg.py:209(_assertNdSquareness)
  1322371    1.389    0.000    2.740    0.000 fromnumeric.py:1143(squeeze)
  1322371    1.351    0.000    1.351    0.000 {method 'squeeze' of 'numpy.ndarray' objects}
  5289948    1.342    0.000    1.342    0.000 {built-in method builtins.getattr}
  3967575    1.321    0.000    1.948    0.000 linalg.py:111(isComplexType)
  9257523    1.304    0.000    1.304    0.000 {built-in method builtins.issubclass}
  1322371    1.259    0.000    1.259    0.000 linalg.py:101(get_linalg_error_extobj)
  1322603    1.196    0.000    1.343    0.000 linalg.py:192(_assertRank2)
  1322371    1.115    0.000    1.230    0.000 linalg.py:198(_assertRankAtLeast2)
 10584636    0.994    0.000    0.994    0.000 {built-in method builtins.len}
  1322392    0.961    0.000    1.203    0.000 numeric.py:2160(isscalar)
  1322371    0.831    0.000    0.831    0.000 {method 'tolist' of 'numpy.ndarray' objects}
 10578968    0.781    0.000    0.781    0.000 {method 'is_integer' of 'float' objects}
  1322602    0.687    0.000    0.687    0.000 {built-in method math.log}
  1322602    0.627    0.000    7.632    0.000 _methods.py:31(_sum)
  3099582    0.531    0.000    0.531    0.000 {method 'append' of 'list' objects}
  1322603    0.515    0.000    0.797    0.000 linalg.py:124(_realType)
  2645641    0.496    0.000    0.496    0.000 {built-in method builtins.hash}
  4944069    0.493    0.000    0.493    0.000 {method 'items' of 'dict' objects}
  3967575    0.469    0.000    0.469    0.000 {method '__array_prepare__' of 'numpy.ndarray' objects}
  1322603    0.282    0.000    0.282    0.000 {method 'get' of 'dict' objects}
    56821    0.281    0.000    0.357    0.000 partition.py:17(visit)
  1322603    0.134    0.000    0.134    0.000 linalg.py:130(_linalgRealType)
198720/56872    0.085    0.000    0.510    0.000 partition.py:23(f)
124628/48137    0.068    0.000    0.391    0.000 partition.py:55(b)
    56821    0.040    0.000    0.040    0.000 partition.py:18(<listcomp>)
     1420    0.007    0.000    0.007    0.000 guess_weight.py:43(is_feasible)
      231    0.004    0.000    0.006    0.000 function_base.py:4740(insert)
        3    0.003    0.001  300.000  100.000 guess_weight.py:62(solve)
      264    0.002    0.000    0.006    0.000 flow.py:239(__init__)
      252    0.001    0.000    0.001    0.000 {method 'dot' of 'numpy.ndarray' objects}
     1875    0.001    0.000    0.001    0.000 {built-in method builtins.sum}
      264    0.000    0.000    0.003    0.000 defmatrix.py:246(__new__)
      231    0.000    0.000    0.000    0.000 numeric.py:1490(rollaxis)
      264    0.000    0.000    0.001    0.000 {method 'view' of 'numpy.ndarray' objects}
      231    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.empty}
      231    0.000    0.000    0.001    0.000 {method '__array_wrap__' of 'numpy.ndarray' objects}
      140    0.000    0.000    0.000    0.000 flow.py:550(__hash__)
       51    0.000    0.000    0.000    0.000 partition.py:15(algorithm_u)
       51    0.000    0.000    0.000    0.000 graphs.py:67(labeled_neighborhood)
      272    0.000    0.000    0.000    0.000 graphs.py:126(out_degree)
       34    0.000    0.000    0.000    0.000 graphs.py:61(sink)
      495    0.000    0.000    0.000    0.000 {method 'tobytes' of 'memoryview' objects}
      272    0.000    0.000    0.000    0.000 graphs.py:84(out_neighborhood)
      288    0.000    0.000    0.000    0.000 graphs.py:78(neighborhood)
       25    0.000    0.000    0.000    0.000 flow.py:441(is_redundant)
        2    0.000    0.000    0.000    0.000 flow.py:60(_compute_max_weight_bounds)
      231    0.000    0.000    0.000    0.000 {method 'item' of 'numpy.ndarray' objects}
      200    0.000    0.000    0.000    0.000 flow.py:444(<genexpr>)
       71    0.000    0.000    0.000    0.000 graphs.py:52(__iter__)
       35    0.000    0.000    0.000    0.000 graphs.py:55(source)
       25    0.000    0.000    0.000    0.000 {built-in method builtins.all}
        2    0.000    0.000    0.000    0.000 flow.py:81(_compute_weight_bounds)
       35    0.000    0.000    0.000    0.000 graphs.py:129(in_degree)
        1    0.000    0.000  300.000  300.000 toboggan.py:77(find_opt_size)
        3    0.000    0.000    0.000    0.000 flow.py:211(has_bad_bounds)
       25    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
        7    0.000    0.000    0.000    0.000 flow.py:533(__eq__)
       35    0.000    0.000    0.000    0.000 graphs.py:87(in_neighborhood)
        2    0.000    0.000    0.000    0.000 twodim_base.py:139(eye)
        6    0.000    0.000    0.000    0.000 {built-in method builtins.print}
       71    0.000    0.000    0.000    0.000 {built-in method builtins.iter}
        1    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.arange}
        2    0.000    0.000    0.000    0.000 flow.py:198(try_larger_k)
       33    0.000    0.000    0.000    0.000 flow.py:422(__hash__)
        6    0.000    0.000    0.000    0.000 {method 'format' of 'str' objects}
        2    0.000    0.000    0.000    0.000 signal.py:35(_enum_to_int)
        1    0.000    0.000    0.000    0.000 signal.py:45(signal)
        5    0.000    0.000    0.000    0.000 flow.py:474(__eq__)
        9    0.000    0.000    0.000    0.000 guess_weight.py:74(<genexpr>)
        9    0.000    0.000    0.000    0.000 guess_weight.py:99(<genexpr>)
       11    0.000    0.000    0.000    0.000 guess_weight.py:82(<lambda>)
        2    0.000    0.000    0.000    0.000 flow.py:72(<dictcomp>)
       25    0.000    0.000    0.000    0.000 flow.py:488(__hash__)
        1    0.000    0.000    0.000    0.000 enum.py:215(__call__)
        2    0.000    0.000    0.000    0.000 {built-in method _signal.alarm}
        1    0.000    0.000    0.000    0.000 toboggan.py:39(__enter__)
        1    0.000    0.000    0.000    0.000 signal.py:25(_int_to_enum)
        1    0.000    0.000    0.000    0.000 {built-in method _signal.signal}
        1    0.000    0.000    0.000    0.000 toboggan.py:36(handle_timeout)
        1    0.000    0.000    0.000    0.000 toboggan.py:44(__exit__)
        1    0.000    0.000    0.000    0.000 enum.py:459(__new__)
        2    0.000    0.000    0.000    0.000 flow.py:97(<listcomp>)
        1    0.000    0.000    0.000    0.000 toboggan.py:32(__init__)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 guess_weight.py:101(<listcomp>)
        2    0.000    0.000    0.000    0.000 flow.py:101(<listcomp>)


# All_info	n_in	m_in	n_red	m_red	k_gtrue	k_cut	k_impro	k_opt	time_w	time_p
All_info	34	47	8	21	9	6	6	None	300	0
weights	
Finished instance.

# Timeout is set to 300
# Recovering paths
# Running on instances 10371
# Ground-truth available in file ../../research/instances/rnaseq/zebrafish/79.truth

File 79.graph instance 10370 name ENSDARG00000028148 with n = 25, m = 35, and truth = 7:
[(0, 3, 90), (0, 10, 1196), (0, 3, 2), (0, 3, 1011), (3, 10, 695), (3, 10, 408), (10, 13, 32), (10, 13, 2267), (13, 15, 90), (13, 15, 2209), (15, 18, 1891), (15, 18, 408), (18, 20, 1697), (18, 20, 602), (20, 24, 1799), (20, 24, 408), (20, 24, 2), (20, 24, 90)]
# Preprocessing
#	Graph has an edge cut of size 4.
#	Investigating cutsets yields bound 5.
#	User supplied k value of 1.
#	Continuing using k = 5
# Reduced instance has n = 8, m = 18, and lower_bound = 5:
Searching for minimum-sized set of weights, timeout set at 300
# 	Call guess_weight with k = 5
# 	Call guess_weight with k = 6
Timed out after 300 seconds
         181913354 function calls (180632871 primitive calls) in 300.000 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
  2579696   40.745    0.000   40.745    0.000 {built-in method numpy.linalg.lapack_lite.dgelsd}
  1289848   37.727    0.000  145.159    0.000 linalg.py:1830(lstsq)
 15841086   24.488    0.000   24.488    0.000 {built-in method numpy.core.multiarray.array}
  1312313   18.477    0.000  250.494    0.000 flow.py:343(add_constraint)
   757680   11.292    0.000   18.991    0.000 function_base.py:4740(insert)
  1289848   10.084    0.000  179.671    0.000 flow.py:296(_test_row)
  4307936    9.943    0.000   13.575    0.000 defmatrix.py:314(__getitem__)
  2084335    9.696    0.000    9.696    0.000 {method 'reduce' of 'numpy.ufunc' objects}
7624330/6553521    8.088    0.000    9.152    0.000 defmatrix.py:292(__array_finalize__)
   471720    7.498    0.000   13.154    0.000 linalg.py:296(solve)
  6670760    5.818    0.000    5.818    0.000 {built-in method numpy.core.multiarray.zeros}
   757999    5.460    0.000   15.491    0.000 flow.py:239(__init__)
     3623    5.310    0.001   36.191    0.010 _linprog.py:212(_solve_simplex)
  2944052    4.755    0.000    4.755    0.000 {method 'astype' of 'numpy.ndarray' objects}
 21672534    4.140    0.000    4.140    0.000 {built-in method builtins.isinstance}
      319    4.096    0.013  299.986    0.940 dp.py:14(solve)
  1070490    4.021    0.000    5.392    0.000 {method 'dot' of 'numpy.ndarray' objects}
   421580    3.647    0.000    9.226    0.000 core.py:2913(__array_finalize__)
  2586886    3.600    0.000    9.475    0.000 fromnumeric.py:1364(ravel)
  2361294    3.598    0.000    4.170    0.000 {method 'copy' of 'numpy.ndarray' objects}
  1289848    3.485    0.000   11.020    0.000 fromnumeric.py:1710(sum)
   506701    3.210    0.000    7.300    0.000 flow.py:553(push)
  4403301    3.095    0.000    7.589    0.000 numeric.py:463(asarray)
  1289848    2.963    0.000    7.172    0.000 linalg.py:180(_fastCopyAndTranspose)
  2579696    2.823    0.000    2.823    0.000 {built-in method numpy.core.multiarray._fastCopyAndTranspose}
  7892029    2.749    0.000    2.749    0.000 {built-in method builtins.getattr}
  3523136    2.696    0.000    8.753    0.000 linalg.py:106(_makearray)
  2586886    2.673    0.000    2.673    0.000 {method 'ravel' of 'numpy.ndarray' objects}
   473821    2.477    0.000    4.956    0.000 core.py:2887(_update_from)
  1761568    2.307    0.000    2.804    0.000 linalg.py:139(_commonType)
  6920979    2.147    0.000    2.147    0.000 {built-in method builtins.min}
   506124    2.057    0.000    2.677    0.000 flow.py:505(copy)
  2676761    1.984    0.000    2.444    0.000 numeric.py:534(asanyarray)
  1289848    1.916    0.000    2.493    0.000 linalg.py:168(_to_native_byte_order)
  2579696    1.703    0.000    3.055    0.000 {method 'transpose' of 'numpy.ndarray' objects}
    52241    1.491    0.000    5.751    0.000 core.py:1157(__call__)
   757999    1.332    0.000    7.377    0.000 defmatrix.py:246(__new__)
  1075068    1.261    0.000   11.053    0.000 {method 'view' of 'numpy.ndarray' objects}
   506701    1.216    0.000    1.412    0.000 flow.py:584(distribute)
  1289848    1.185    0.000    1.328    0.000 linalg.py:192(_assertRank2)
899134/738788    1.169    0.000    2.665    0.000 core.py:3320(__setattr__)
  6783517    1.152    0.000    1.152    0.000 {built-in method builtins.issubclass}
 11726161    1.123    0.000    1.123    0.000 {built-in method builtins.len}
  3058704    1.089    0.000    1.089    0.000 {built-in method builtins.max}
   313475    1.080    0.000    5.344    0.000 core.py:3639(filled)
  3051416    1.077    0.000    1.547    0.000 linalg.py:111(isComplexType)
   757680    1.075    0.000    1.075    0.000 numeric.py:1490(rollaxis)
    52241    0.942    0.000   19.686    0.000 _linprog.py:173(_pivot_row)
   369283    0.852    0.000    0.852    0.000 {built-in method numpy.core.multiarray.copyto}
     3595    0.826    0.000   37.838    0.011 _linprog.py:391(_linprog_simplex)
   761303    0.797    0.000    0.797    0.000 {built-in method numpy.core.multiarray.empty}
   160346    0.794    0.000    1.654    0.000 core.py:3351(__setmask__)
   757680    0.791    0.000    1.668    0.000 {method '__array_wrap__' of 'numpy.ndarray' objects}
   788125    0.779    0.000    0.905    0.000 numeric.py:2160(isscalar)
  1289848    0.689    0.000    0.689    0.000 {built-in method math.log}
   313475    0.681    0.000    1.490    0.000 core.py:440(_check_fill_value)
  1397953    0.655    0.000    7.801    0.000 _methods.py:31(_sum)
  2422446    0.591    0.000    0.591    0.000 {built-in method builtins.hash}
   104482    0.587    0.000    4.922    0.000 core.py:3893(__eq__)
    55864    0.585    0.000   11.171    0.000 _linprog.py:137(_pivot_col)
   471720    0.578    0.000    0.894    0.000 linalg.py:209(_assertNdSquareness)
  1289848    0.535    0.000    0.818    0.000 linalg.py:124(_realType)
   526062    0.528    0.000    0.528    0.000 core.py:3540(_get_data)
    52241    0.528    0.000    1.185    0.000 core.py:848(__call__)
   160346    0.528    0.000    8.115    0.000 core.py:1810(masked_where)
  2316861    0.524    0.000    0.524    0.000 {method 'update' of 'dict' objects}
   471720    0.512    0.000    0.512    0.000 {method 'squeeze' of 'numpy.ndarray' objects}
   471720    0.505    0.000    1.016    0.000 fromnumeric.py:1143(squeeze)
   108105    0.496    0.000    1.326    0.000 core.py:4289(count)
   506761    0.495    0.000    0.495    0.000 flow.py:495(__init__)
  2816109    0.482    0.000    0.482    0.000 {method 'append' of 'list' objects}
   104483    0.469    0.000    6.930    0.000 core.py:5460(min)
   471720    0.437    0.000    0.437    0.000 linalg.py:101(get_linalg_error_extobj)
   529685    0.437    0.000    0.437    0.000 {built-in method builtins.hasattr}
   320692    0.429    0.000    0.607    0.000 core.py:1308(make_mask_descr)
   471720    0.397    0.000    0.442    0.000 linalg.py:198(_assertRankAtLeast2)
   208964    0.387    0.000    0.924    0.000 numeric.py:2686(seterr)
   208964    0.364    0.000    0.383    0.000 numeric.py:2786(geterr)
   104483    0.358    0.000    2.686    0.000 {method 'view' of 'numpy.generic' objects}
   160346    0.321    0.000    1.803    0.000 core.py:1531(make_mask)
   289542    0.317    0.000    0.317    0.000 linalg.py:89(_raise_linalgerror_singular)
  1515679    0.304    0.000    0.304    0.000 {method 'tobytes' of 'memoryview' objects}
  1342090    0.294    0.000    0.294    0.000 {method 'get' of 'dict' objects}
  2761874    0.285    0.000    0.285    0.000 {method '__array_prepare__' of 'numpy.ndarray' objects}
   477416    0.283    0.000    2.221    0.000 {method 'any' of 'numpy.ndarray' objects}
   104483    0.225    0.000    0.407    0.000 numerictypes.py:603(obj2sctype)
   477416    0.206    0.000    1.938    0.000 _methods.py:37(_any)
   264828    0.187    0.000    2.184    0.000 core.py:599(filled)
    52241    0.179    0.000    0.260    0.000 core.py:645(get_masked_subclass)
   160346    0.170    0.000    0.645    0.000 core.py:1626(make_mask_none)
    86280    0.166    0.000    0.264    0.000 shape_base.py:61(atleast_2d)
    73546    0.166    0.000    0.193    0.000 flow.py:431(__init__)
   104482    0.165    0.000    2.148    0.000 core.py:6951(where)
    86280    0.159    0.000    0.159    0.000 {built-in method numpy.core.multiarray.concatenate}
   757680    0.157    0.000    0.157    0.000 {method 'item' of 'numpy.ndarray' objects}
   104483    0.139    0.000    0.666    0.000 core.py:242(_recursive_extremum_fill_value)
  1016151    0.127    0.000    0.127    0.000 {method 'items' of 'dict' objects}
  1289848    0.125    0.000    0.125    0.000 linalg.py:130(_linalgRealType)
   104483    0.121    0.000    0.527    0.000 numerictypes.py:774(__getitem__)
   104482    0.118    0.000    0.543    0.000 numeric.py:3088(__exit__)
   320692    0.113    0.000    0.113    0.000 core.py:1287(_recursive_make_descr)
    25058    0.111    0.000    0.140    0.000 partition.py:17(visit)
   208964    0.110    0.000    0.110    0.000 {built-in method numpy.core.umath.seterrobj}
   104483    0.108    0.000    0.640    0.000 core.py:1798(_check_mask_axis)
    52241    0.107    0.000    5.890    0.000 core.py:4023(__truediv__)
   182178    0.105    0.000    0.105    0.000 {method 'tolist' of 'numpy.ndarray' objects}
   104482    0.104    0.000    0.604    0.000 numeric.py:3083(__enter__)
   104482    0.104    0.000    0.104    0.000 {method 'nonzero' of 'numpy.ndarray' objects}
   108105    0.104    0.000    0.695    0.000 {method 'sum' of 'numpy.ndarray' objects}
   104483    0.088    0.000    0.546    0.000 {method 'min' of 'numpy.ndarray' objects}
   104482    0.086    0.000    0.108    0.000 numeric.py:3079(__init__)
   104483    0.085    0.000    0.782    0.000 core.py:253(minimum_fill_value)
    93662    0.084    0.000    0.084    0.000 flow.py:464(add_constraint)
    52241    0.082    0.000    0.082    0.000 {built-in method numpy.core.multiarray.can_cast}
   104483    0.072    0.000    0.532    0.000 {method 'all' of 'numpy.ndarray' objects}
   666362    0.068    0.000    0.068    0.000 {method 'is_integer' of 'float' objects}
   417928    0.063    0.000    0.063    0.000 {built-in method numpy.core.umath.geterrobj}
   104482    0.053    0.000    0.134    0.000 core.py:672(getdata)
    52241    0.052    0.000    0.052    0.000 core.py:659(<listcomp>)
   104483    0.052    0.000    0.459    0.000 _methods.py:28(_amin)
   104483    0.049    0.000    0.460    0.000 _methods.py:40(_all)
    43140    0.048    0.000    0.450    0.000 shape_base.py:180(vstack)
     4407    0.046    0.000   37.975    0.009 flow.py:261(is_redundant)
    43140    0.041    0.000    0.305    0.000 shape_base.py:234(<listcomp>)
64513/25635    0.037    0.000    0.195    0.000 partition.py:23(f)
   104482    0.037    0.000    0.055    0.000 core.py:1344(getmask)
    52241    0.024    0.000    0.032    0.000 core.py:3883(_delegate_binop)
   104482    0.022    0.000    0.022    0.000 {method 'pop' of 'dict' objects}
24533/14083    0.018    0.000    0.087    0.000 partition.py:55(b)
     3595    0.018    0.000   37.857    0.011 _linprog.py:824(linprog)
   104482    0.017    0.000    0.017    0.000 {method 'count' of 'tuple' objects}
    25058    0.017    0.000    0.017    0.000 partition.py:18(<listcomp>)
     3595    0.014    0.000    0.014    0.000 index_tricks.py:665(fill_diagonal)
     3328    0.012    0.000    0.019    0.000 flow.py:441(is_redundant)
     1732    0.009    0.000    0.010    0.000 guess_weight.py:43(is_feasible)
     3595    0.006    0.000    0.033    0.000 fromnumeric.py:1866(any)
     7735    0.006    0.000    0.014    0.000 {built-in method builtins.all}
    11507    0.005    0.000    0.005    0.000 flow.py:444(<genexpr>)
    13222    0.005    0.000    0.005    0.000 flow.py:265(<genexpr>)
     3595    0.005    0.000    0.020    0.000 numeric.py:150(ones)
        2    0.004    0.002  300.000  150.000 guess_weight.py:62(solve)
     4407    0.004    0.000    0.004    0.000 flow.py:264(<listcomp>)
     3594    0.003    0.000    0.003    0.000 optimize.py:112(__getattr__)
     3595    0.003    0.000    0.005    0.000 numeric.py:380(count_nonzero)
     3595    0.002    0.000    0.002    0.000 {built-in method numpy.core.multiarray.count_nonzero}
     1676    0.002    0.000    0.003    0.000 flow.py:550(__hash__)
      577    0.002    0.000    0.002    0.000 partition.py:15(algorithm_u)
      577    0.001    0.000    0.002    0.000 graphs.py:67(labeled_neighborhood)
     3594    0.001    0.000    0.001    0.000 {built-in method builtins.abs}
     2552    0.001    0.000    0.003    0.000 graphs.py:126(out_degree)
      319    0.001    0.000    0.004    0.000 graphs.py:61(sink)
     3595    0.001    0.000    0.001    0.000 {method 'lower' of 'str' objects}
     3595    0.001    0.000    0.001    0.000 optimize.py:137(_check_unknown_options)
     2552    0.001    0.000    0.001    0.000 graphs.py:84(out_neighborhood)
     2487    0.001    0.000    0.001    0.000 {built-in method builtins.sum}
     2560    0.001    0.000    0.001    0.000 graphs.py:78(neighborhood)
       28    0.000    0.000    0.001    0.000 function_base.py:4538(delete)
      320    0.000    0.000    0.001    0.000 graphs.py:55(source)
      640    0.000    0.000    0.000    0.000 graphs.py:52(__iter__)
       28    0.000    0.000    0.001    0.000 core.py:2753(__new__)
      119    0.000    0.000    0.000    0.000 flow.py:533(__eq__)
       28    0.000    0.000    0.000    0.000 _linprog.py:325(<listcomp>)
      461    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
      320    0.000    0.000    0.000    0.000 graphs.py:129(in_degree)
      640    0.000    0.000    0.000    0.000 {built-in method builtins.iter}
      320    0.000    0.000    0.000    0.000 graphs.py:87(in_neighborhood)
       28    0.000    0.000    0.001    0.000 core.py:6155(array)
      347    0.000    0.000    0.000    0.000 flow.py:422(__hash__)
      433    0.000    0.000    0.000    0.000 flow.py:488(__hash__)
        4    0.000    0.000    0.000    0.000 _linprog.py:327(<listcomp>)
       28    0.000    0.000    0.000    0.000 core.py:3562(get_fill_value)
        1    0.000    0.000    0.000    0.000 flow.py:60(_compute_max_weight_bounds)
        1    0.000    0.000  300.000  300.000 toboggan.py:77(find_opt_size)
        2    0.000    0.000    0.000    0.000 flow.py:211(has_bad_bounds)
       28    0.000    0.000    0.000    0.000 {method 'indices' of 'slice' objects}
        1    0.000    0.000    0.000    0.000 flow.py:81(_compute_weight_bounds)
        2    0.000    0.000    0.000    0.000 twodim_base.py:139(eye)
       28    0.000    0.000    0.000    0.000 index_tricks.py:650(__getitem__)
        4    0.000    0.000    0.000    0.000 {built-in method builtins.print}
        4    0.000    0.000    0.000    0.000 {method 'format' of 'str' objects}
        1    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.arange}
        4    0.000    0.000    0.000    0.000 flow.py:474(__eq__)
        1    0.000    0.000    0.000    0.000 signal.py:45(signal)
        2    0.000    0.000    0.000    0.000 signal.py:35(_enum_to_int)
        1    0.000    0.000    0.000    0.000 toboggan.py:39(__enter__)
        1    0.000    0.000    0.000    0.000 getlimits.py:96(__new__)
        2    0.000    0.000    0.000    0.000 {built-in method _signal.alarm}
        1    0.000    0.000    0.000    0.000 flow.py:198(try_larger_k)
        1    0.000    0.000    0.000    0.000 toboggan.py:44(__exit__)
        1    0.000    0.000    0.000    0.000 enum.py:215(__call__)
        1    0.000    0.000    0.000    0.000 signal.py:25(_int_to_enum)
       13    0.000    0.000    0.000    0.000 guess_weight.py:82(<lambda>)
        1    0.000    0.000    0.000    0.000 enum.py:459(__new__)
        9    0.000    0.000    0.000    0.000 guess_weight.py:74(<genexpr>)
        1    0.000    0.000    0.000    0.000 {built-in method _signal.signal}
        1    0.000    0.000    0.000    0.000 toboggan.py:36(handle_timeout)
        1    0.000    0.000    0.000    0.000 flow.py:72(<dictcomp>)
        1    0.000    0.000    0.000    0.000 toboggan.py:32(__init__)
        1    0.000    0.000    0.000    0.000 flow.py:97(<listcomp>)
        1    0.000    0.000    0.000    0.000 flow.py:101(<listcomp>)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}


# All_info	n_in	m_in	n_red	m_red	k_gtrue	k_cut	k_impro	k_opt	time_w	time_p
All_info	25	35	8	18	7	4	5	None	300	0
weights	
Finished instance.

# Timeout is set to 300
# Recovering paths
# Running on instances 1660
# Ground-truth available in file ../../research/instances/rnaseq/zebrafish/100.truth

File 100.graph instance 1659 name ENSDARG00000068457 with n = 30, m = 45, and truth = 8:
[(0, 6, 533), (0, 6, 693), (0, 6, 472), (0, 6, 8), (0, 6, 1), (6, 9, 347), (6, 9, 8), (6, 12, 661), (6, 20, 18), (6, 20, 673), (9, 12, 8), (9, 12, 347), (12, 20, 533), (12, 20, 136), (12, 20, 347), (20, 29, 533), (20, 29, 1), (20, 29, 8), (20, 29, 128), (20, 29, 472), (20, 29, 565)]
# Preprocessing
#	Graph has an edge cut of size 6.
#	Investigating cutsets yields bound 7.
#	User supplied k value of 1.
#	Continuing using k = 7
# Reduced instance has n = 6, m = 21, and lower_bound = 7:
Searching for minimum-sized set of weights, timeout set at 300
# 	Call guess_weight with k = 7
# 	Call guess_weight with k = 8
Number of 1s is 1
Timed out after 300 seconds
         186491585 function calls (186440703 primitive calls) in 300.000 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
  2740086   47.274    0.000   47.274    0.000 {built-in method numpy.linalg.lapack_lite.dgelsd}
  1370043   41.574    0.000  161.376    0.000 linalg.py:1830(lstsq)
 15070555   23.097    0.000   23.097    0.000 {built-in method numpy.core.multiarray.array}
  1370043   21.933    0.000  253.740    0.000 flow.py:296(_test_row)
  1369965   21.033    0.000   38.228    0.000 linalg.py:296(solve)
  1747980   13.212    0.000   24.724    0.000 flow.py:553(push)
  2740315   11.516    0.000   16.873    0.000 defmatrix.py:314(__getitem__)
       11    9.175    0.834  299.998   27.273 dp.py:14(solve)
  5480015    8.698    0.000    8.698    0.000 {method 'astype' of 'numpy.ndarray' objects}
  1370042    7.134    0.000    7.134    0.000 {method 'reduce' of 'numpy.ufunc' objects}
  1747966    6.421    0.000    8.082    0.000 flow.py:505(copy)
  1370043    6.204    0.000  264.536    0.000 flow.py:343(add_constraint)
  6850218    5.821    0.000    5.821    0.000 {built-in method numpy.core.multiarray.zeros}
5480315/5480221    4.482    0.000    5.341    0.000 defmatrix.py:292(__array_finalize__)
  5480016    4.368    0.000   13.742    0.000 linalg.py:106(_makearray)
  2740085    3.975    0.000   10.320    0.000 fromnumeric.py:1364(ravel)
  1370042    3.817    0.000   11.925    0.000 fromnumeric.py:1710(sum)
  5480093    3.627    0.000    8.348    0.000 numeric.py:463(asarray)
  2740008    3.606    0.000    4.377    0.000 linalg.py:139(_commonType)
  1747980    3.303    0.000    3.430    0.000 flow.py:584(distribute)
  1370043    3.226    0.000    7.755    0.000 linalg.py:180(_fastCopyAndTranspose)
  2740086    2.980    0.000    2.980    0.000 {built-in method numpy.core.multiarray._fastCopyAndTranspose}
  1369965    2.916    0.000    3.432    0.000 flow.py:431(__init__)
  2740084    2.900    0.000    2.900    0.000 {method 'ravel' of 'numpy.ndarray' objects}
 13700983    2.591    0.000    2.591    0.000 {built-in method builtins.isinstance}
  8220201    2.523    0.000    2.523    0.000 {built-in method builtins.min}
  2740085    2.131    0.000    2.585    0.000 numeric.py:534(asanyarray)
  1370043    2.091    0.000    2.761    0.000 linalg.py:168(_to_native_byte_order)
  1370131    2.079    0.000    2.079    0.000 {method 'copy' of 'numpy.ndarray' objects}
  2740086    2.040    0.000    3.743    0.000 {method 'transpose' of 'numpy.ndarray' objects}
  1784723    1.562    0.000    1.562    0.000 flow.py:464(add_constraint)
  1369965    1.561    0.000    2.443    0.000 linalg.py:209(_assertNdSquareness)
  4110106    1.531    0.000    1.531    0.000 {built-in method builtins.max}
  1369965    1.452    0.000    2.860    0.000 fromnumeric.py:1143(squeeze)
  9590066    1.413    0.000    1.413    0.000 {built-in method builtins.issubclass}
  1369965    1.408    0.000    1.408    0.000 {method 'squeeze' of 'numpy.ndarray' objects}
  4110050    1.353    0.000    1.995    0.000 linalg.py:111(isComplexType)
  1369965    1.282    0.000    1.282    0.000 linalg.py:101(get_linalg_error_extobj)
  1747987    1.280    0.000    1.280    0.000 flow.py:495(__init__)
  1370043    1.214    0.000    1.364    0.000 linalg.py:192(_assertRank2)
  1369965    1.123    0.000    1.265    0.000 linalg.py:198(_assertRankAtLeast2)
 10961095    1.051    0.000    1.051    0.000 {built-in method builtins.len}
  5480016    1.026    0.000    1.026    0.000 {built-in method builtins.getattr}
  1369971    0.982    0.000    1.211    0.000 numeric.py:2160(isscalar)
  1369965    0.826    0.000    0.826    0.000 {method 'tolist' of 'numpy.ndarray' objects}
 10959720    0.824    0.000    0.824    0.000 {method 'is_integer' of 'float' objects}
  1370043    0.710    0.000    0.710    0.000 {built-in method math.log}
  1370042    0.639    0.000    7.774    0.000 _methods.py:31(_sum)
  2856700    0.554    0.000    0.554    0.000 {method 'append' of 'list' objects}
  1370043    0.548    0.000    0.832    0.000 linalg.py:124(_realType)
  2740223    0.516    0.000    0.516    0.000 {built-in method builtins.hash}
  4110049    0.468    0.000    0.468    0.000 {method '__array_prepare__' of 'numpy.ndarray' objects}
  3496023    0.380    0.000    0.380    0.000 {method 'items' of 'dict' objects}
  1370043    0.285    0.000    0.285    0.000 {method 'get' of 'dict' objects}
  1370043    0.142    0.000    0.142    0.000 linalg.py:130(_linalgRealType)
    14567    0.070    0.000    0.091    0.000 partition.py:17(visit)
49987/14581    0.021    0.000    0.127    0.000 partition.py:23(f)
26108/10726    0.015    0.000    0.083    0.000 partition.py:55(b)
    14567    0.012    0.000    0.012    0.000 partition.py:18(<listcomp>)
       77    0.001    0.000    0.002    0.000 function_base.py:4740(insert)
      233    0.001    0.000    0.001    0.000 guess_weight.py:43(is_feasible)
       88    0.001    0.000    0.002    0.000 flow.py:239(__init__)
        2    0.001    0.000  300.000  150.000 guess_weight.py:62(solve)
       83    0.000    0.000    0.000    0.000 {method 'dot' of 'numpy.ndarray' objects}
       88    0.000    0.000    0.001    0.000 defmatrix.py:246(__new__)
      416    0.000    0.000    0.000    0.000 {built-in method builtins.sum}
       77    0.000    0.000    0.000    0.000 numeric.py:1490(rollaxis)
       88    0.000    0.000    0.000    0.000 {method 'view' of 'numpy.ndarray' objects}
       77    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.empty}
       77    0.000    0.000    0.000    0.000 {method '__array_wrap__' of 'numpy.ndarray' objects}
       40    0.000    0.000    0.000    0.000 flow.py:550(__hash__)
       14    0.000    0.000    0.000    0.000 graphs.py:67(labeled_neighborhood)
       14    0.000    0.000    0.000    0.000 partition.py:15(algorithm_u)
      165    0.000    0.000    0.000    0.000 {method 'tobytes' of 'memoryview' objects}
       11    0.000    0.000    0.000    0.000 graphs.py:61(sink)
        1    0.000    0.000    0.000    0.000 flow.py:60(_compute_max_weight_bounds)
       66    0.000    0.000    0.000    0.000 graphs.py:126(out_degree)
       72    0.000    0.000    0.000    0.000 graphs.py:78(neighborhood)
        1    0.000    0.000  300.000  300.000 toboggan.py:77(find_opt_size)
       66    0.000    0.000    0.000    0.000 graphs.py:84(out_neighborhood)
        5    0.000    0.000    0.000    0.000 flow.py:441(is_redundant)
        2    0.000    0.000    0.000    0.000 flow.py:211(has_bad_bounds)
       77    0.000    0.000    0.000    0.000 {method 'item' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 flow.py:81(_compute_weight_bounds)
        2    0.000    0.000    0.000    0.000 twodim_base.py:139(eye)
       12    0.000    0.000    0.000    0.000 graphs.py:55(source)
       24    0.000    0.000    0.000    0.000 graphs.py:52(__iter__)
        5    0.000    0.000    0.000    0.000 {built-in method builtins.all}
       12    0.000    0.000    0.000    0.000 graphs.py:129(in_degree)
        1    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.arange}
        5    0.000    0.000    0.000    0.000 {built-in method builtins.print}
       12    0.000    0.000    0.000    0.000 graphs.py:87(in_neighborhood)
        5    0.000    0.000    0.000    0.000 {method 'format' of 'str' objects}
       40    0.000    0.000    0.000    0.000 flow.py:444(<genexpr>)
        2    0.000    0.000    0.000    0.000 signal.py:35(_enum_to_int)
        5    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
        1    0.000    0.000    0.000    0.000 flow.py:198(try_larger_k)
        1    0.000    0.000    0.000    0.000 enum.py:215(__call__)
        1    0.000    0.000    0.000    0.000 signal.py:45(signal)
        1    0.000    0.000    0.000    0.000 toboggan.py:39(__enter__)
        1    0.000    0.000    0.000    0.000 flow.py:533(__eq__)
        1    0.000    0.000    0.000    0.000 toboggan.py:44(__exit__)
        1    0.000    0.000    0.000    0.000 toboggan.py:36(handle_timeout)
        2    0.000    0.000    0.000    0.000 {built-in method _signal.alarm}
       24    0.000    0.000    0.000    0.000 {built-in method builtins.iter}
       11    0.000    0.000    0.000    0.000 flow.py:422(__hash__)
        8    0.000    0.000    0.000    0.000 guess_weight.py:99(<genexpr>)
        1    0.000    0.000    0.000    0.000 signal.py:25(_int_to_enum)
        1    0.000    0.000    0.000    0.000 enum.py:459(__new__)
        1    0.000    0.000    0.000    0.000 flow.py:72(<dictcomp>)
        1    0.000    0.000    0.000    0.000 {built-in method _signal.signal}
        1    0.000    0.000    0.000    0.000 flow.py:97(<listcomp>)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        5    0.000    0.000    0.000    0.000 flow.py:488(__hash__)
        7    0.000    0.000    0.000    0.000 guess_weight.py:74(<genexpr>)
        1    0.000    0.000    0.000    0.000 toboggan.py:32(__init__)
       12    0.000    0.000    0.000    0.000 guess_weight.py:82(<lambda>)
        1    0.000    0.000    0.000    0.000 flow.py:101(<listcomp>)
        1    0.000    0.000    0.000    0.000 guess_weight.py:101(<listcomp>)
        1    0.000    0.000    0.000    0.000 flow.py:474(__eq__)


# All_info	n_in	m_in	n_red	m_red	k_gtrue	k_cut	k_impro	k_opt	time_w	time_p
All_info	30	45	6	21	8	6	7	None	300	0
weights	
Finished instance.

# Timeout is set to 300
# Recovering paths
# Running on instances 10355
# Ground-truth available in file ../../research/instances/rnaseq/zebrafish/100.truth

File 100.graph instance 10354 name ENSDARG00000056322 with n = 37, m = 55, and truth = 11:
[(0, 9, 2000), (0, 9, 149), (0, 9, 209), (0, 9, 594), (0, 9, 379), (0, 9, 560), (9, 36, 209), (9, 22, 131), (9, 22, 16), (9, 15, 1104), (9, 22, 1307), (9, 15, 379), (9, 22, 2), (9, 15, 743), (15, 36, 149), (15, 36, 379), (15, 36, 1104), (15, 36, 594), (22, 24, 747), (22, 24, 709), (24, 26, 747), (24, 26, 709), (26, 33, 25), (26, 33, 1431), (33, 36, 25), (33, 36, 1431)]
# Preprocessing
#	Graph has an edge cut of size 9.
#	Investigating cutsets yields bound 9.
#	User supplied k value of 1.
#	Continuing using k = 9
# Reduced instance has n = 8, m = 26, and lower_bound = 9:
Searching for minimum-sized set of weights, timeout set at 300
# 	Call guess_weight with k = 9
# 	Call guess_weight with k = 10
Timed out after 300 seconds
         135142633 function calls (135026400 primitive calls) in 300.000 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
 19222654  143.385    0.000  236.767    0.000 flow.py:553(push)
 19222653   58.076    0.000   72.344    0.000 flow.py:505(copy)
        1   51.501   51.501  299.999  299.999 dp.py:14(solve)
 19222655   20.833    0.000   21.038    0.000 flow.py:584(distribute)
 19370942   11.728    0.000   11.728    0.000 flow.py:464(add_constraint)
 19222654   11.136    0.000   11.136    0.000 flow.py:495(__init__)
 38445312    3.132    0.000    3.132    0.000 {method 'items' of 'dict' objects}
    22897    0.112    0.000    0.147    0.000 partition.py:17(visit)
96374/22899    0.032    0.000    0.205    0.000 partition.py:23(f)
62589/19841    0.026    0.000    0.164    0.000 partition.py:55(b)
   229014    0.018    0.000    0.018    0.000 {method 'append' of 'list' objects}
    22897    0.017    0.000    0.017    0.000 partition.py:18(<listcomp>)
      126    0.001    0.000    0.001    0.000 guess_weight.py:43(is_feasible)
       20    0.000    0.000    0.000    0.000 {built-in method numpy.linalg.lapack_lite.dgelsd}
       10    0.000    0.000    0.001    0.000 linalg.py:1830(lstsq)
        2    0.000    0.000  300.000  150.000 guess_weight.py:62(solve)
      121    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.array}
       10    0.000    0.000    0.002    0.000 flow.py:343(add_constraint)
        9    0.000    0.000    0.000    0.000 function_base.py:4740(insert)
       10    0.000    0.000    0.000    0.000 flow.py:239(__init__)
        1    0.000    0.000    0.000    0.000 linalg.py:296(solve)
       10    0.000    0.000    0.002    0.000 flow.py:296(_test_row)
       56    0.000    0.000    0.000    0.000 defmatrix.py:314(__getitem__)
       10    0.000    0.000    0.000    0.000 {method 'reduce' of 'numpy.ufunc' objects}
    52/42    0.000    0.000    0.000    0.000 defmatrix.py:292(__array_finalize__)
       22    0.000    0.000    0.000    0.000 {method 'astype' of 'numpy.ndarray' objects}
       53    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.zeros}
      202    0.000    0.000    0.000    0.000 {built-in method builtins.sum}
      169    0.000    0.000    0.000    0.000 {built-in method builtins.isinstance}
       10    0.000    0.000    0.000    0.000 linalg.py:180(_fastCopyAndTranspose)
       20    0.000    0.000    0.000    0.000 {method 'copy' of 'numpy.ndarray' objects}
        9    0.000    0.000    0.000    0.000 {method 'dot' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 flow.py:60(_compute_max_weight_bounds)
       10    0.000    0.000    0.000    0.000 fromnumeric.py:1710(sum)
       20    0.000    0.000    0.000    0.000 fromnumeric.py:1364(ravel)
       20    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray._fastCopyAndTranspose}
       31    0.000    0.000    0.000    0.000 numeric.py:463(asarray)
       10    0.000    0.000    0.000    0.000 defmatrix.py:246(__new__)
      107    0.000    0.000    0.000    0.000 {built-in method builtins.max}
        1    0.000    0.000  300.000  300.000 toboggan.py:77(find_opt_size)
        9    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.empty}
       78    0.000    0.000    0.000    0.000 {built-in method builtins.min}
       20    0.000    0.000    0.000    0.000 {method 'ravel' of 'numpy.ndarray' objects}
       20    0.000    0.000    0.000    0.000 numeric.py:534(asanyarray)
        1    0.000    0.000    0.000    0.000 flow.py:81(_compute_weight_bounds)
       11    0.000    0.000    0.000    0.000 linalg.py:139(_commonType)
      261    0.000    0.000    0.000    0.000 {built-in method builtins.len}
        2    0.000    0.000    0.000    0.000 flow.py:211(has_bad_bounds)
       22    0.000    0.000    0.000    0.000 linalg.py:106(_makearray)
       10    0.000    0.000    0.000    0.000 linalg.py:168(_to_native_byte_order)
       20    0.000    0.000    0.000    0.000 {method 'transpose' of 'numpy.ndarray' objects}
        2    0.000    0.000    0.000    0.000 twodim_base.py:139(eye)
       10    0.000    0.000    0.000    0.000 {method 'view' of 'numpy.ndarray' objects}
        2    0.000    0.000    0.000    0.000 graphs.py:67(labeled_neighborhood)
        9    0.000    0.000    0.000    0.000 numeric.py:1490(rollaxis)
        2    0.000    0.000    0.000    0.000 partition.py:15(algorithm_u)
       35    0.000    0.000    0.000    0.000 {built-in method builtins.hash}
        4    0.000    0.000    0.000    0.000 flow.py:550(__hash__)
        2    0.000    0.000    0.000    0.000 flow.py:441(is_redundant)
        9    0.000    0.000    0.000    0.000 {method '__array_wrap__' of 'numpy.ndarray' objects}
       10    0.000    0.000    0.000    0.000 linalg.py:192(_assertRank2)
        1    0.000    0.000    0.000    0.000 flow.py:198(try_larger_k)
        4    0.000    0.000    0.000    0.000 {built-in method builtins.print}
        4    0.000    0.000    0.000    0.000 {method 'format' of 'str' objects}
       10    0.000    0.000    0.000    0.000 _methods.py:31(_sum)
       10    0.000    0.000    0.000    0.000 {built-in method math.log}
       21    0.000    0.000    0.000    0.000 linalg.py:111(isComplexType)
        1    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.arange}
       20    0.000    0.000    0.000    0.000 flow.py:444(<genexpr>)
       22    0.000    0.000    0.000    0.000 {built-in method builtins.getattr}
       19    0.000    0.000    0.000    0.000 {method 'tobytes' of 'memoryview' objects}
        8    0.000    0.000    0.000    0.000 graphs.py:126(out_degree)
        2    0.000    0.000    0.000    0.000 signal.py:35(_enum_to_int)
       43    0.000    0.000    0.000    0.000 {built-in method builtins.issubclass}
        1    0.000    0.000    0.000    0.000 signal.py:45(signal)
        1    0.000    0.000    0.000    0.000 flow.py:533(__eq__)
        1    0.000    0.000    0.000    0.000 toboggan.py:39(__enter__)
        1    0.000    0.000    0.000    0.000 flow.py:431(__init__)
       10    0.000    0.000    0.000    0.000 linalg.py:124(_realType)
        9    0.000    0.000    0.000    0.000 guess_weight.py:74(<genexpr>)
        2    0.000    0.000    0.000    0.000 {built-in method builtins.all}
        1    0.000    0.000    0.000    0.000 graphs.py:61(sink)
        2    0.000    0.000    0.000    0.000 graphs.py:55(source)
       10    0.000    0.000    0.000    0.000 {method 'get' of 'dict' objects}
        4    0.000    0.000    0.000    0.000 graphs.py:52(__iter__)
        1    0.000    0.000    0.000    0.000 fromnumeric.py:1143(squeeze)
        2    0.000    0.000    0.000    0.000 {built-in method _signal.alarm}
        1    0.000    0.000    0.000    0.000 enum.py:215(__call__)
        1    0.000    0.000    0.000    0.000 toboggan.py:36(handle_timeout)
        1    0.000    0.000    0.000    0.000 numeric.py:2160(isscalar)
        1    0.000    0.000    0.000    0.000 {method 'tolist' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 toboggan.py:44(__exit__)
        1    0.000    0.000    0.000    0.000 enum.py:459(__new__)
        3    0.000    0.000    0.000    0.000 flow.py:488(__hash__)
        1    0.000    0.000    0.000    0.000 linalg.py:198(_assertRankAtLeast2)
        1    0.000    0.000    0.000    0.000 linalg.py:209(_assertNdSquareness)
        1    0.000    0.000    0.000    0.000 {built-in method _signal.signal}
        1    0.000    0.000    0.000    0.000 signal.py:25(_int_to_enum)
       16    0.000    0.000    0.000    0.000 graphs.py:78(neighborhood)
        8    0.000    0.000    0.000    0.000 graphs.py:84(out_neighborhood)
        4    0.000    0.000    0.000    0.000 {built-in method builtins.iter}
        2    0.000    0.000    0.000    0.000 graphs.py:129(in_degree)
        1    0.000    0.000    0.000    0.000 flow.py:97(<listcomp>)
       21    0.000    0.000    0.000    0.000 {method '__array_prepare__' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 flow.py:72(<dictcomp>)
        1    0.000    0.000    0.000    0.000 linalg.py:101(get_linalg_error_extobj)
        1    0.000    0.000    0.000    0.000 {method 'squeeze' of 'numpy.ndarray' objects}
        2    0.000    0.000    0.000    0.000 graphs.py:87(in_neighborhood)
        9    0.000    0.000    0.000    0.000 {method 'item' of 'numpy.ndarray' objects}
       10    0.000    0.000    0.000    0.000 {method 'is_integer' of 'float' objects}
        1    0.000    0.000    0.000    0.000 toboggan.py:32(__init__)
        2    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
       10    0.000    0.000    0.000    0.000 linalg.py:130(_linalgRealType)
        1    0.000    0.000    0.000    0.000 flow.py:101(<listcomp>)
       16    0.000    0.000    0.000    0.000 guess_weight.py:82(<lambda>)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}


# All_info	n_in	m_in	n_red	m_red	k_gtrue	k_cut	k_impro	k_opt	time_w	time_p
All_info	37	55	8	26	11	9	9	None	300	0
weights	
Finished instance.

# Timeout is set to 300
# Recovering paths
# Running on instances 1897
# Ground-truth available in file ../../research/instances/rnaseq/zebrafish/24.truth

File 24.graph instance 1896 name ENSDARG00000099045 with n = 25, m = 34, and truth = 7:
[(0, 10, 9), (0, 10, 795), (0, 10, 904), (0, 10, 2), (10, 12, 509), (10, 12, 295), (10, 17, 906), (12, 17, 315), (12, 17, 489), (17, 24, 157), (17, 24, 2), (17, 24, 904), (17, 24, 489), (17, 24, 158)]
# Preprocessing
#	Graph has an edge cut of size 5.
#	Investigating cutsets yields bound 5.
#	User supplied k value of 1.
#	Continuing using k = 5
# Reduced instance has n = 5, m = 14, and lower_bound = 5:
Searching for minimum-sized set of weights, timeout set at 300
# 	Call guess_weight with k = 5
# 	Call guess_weight with k = 6
Timed out after 300 seconds
         178591545 function calls (177474514 primitive calls) in 300.000 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
  2899160   47.563    0.000   47.563    0.000 {built-in method numpy.linalg.lapack_lite.dgelsd}
  1449581   43.198    0.000  166.499    0.000 linalg.py:1830(lstsq)
 16565508   26.455    0.000   26.455    0.000 {built-in method numpy.core.multiarray.array}
  1449845   18.092    0.000  282.531    0.000 flow.py:343(add_constraint)
  1449581   12.570    0.000  214.579    0.000 flow.py:296(_test_row)
   706412   11.119    0.000   19.601    0.000 linalg.py:296(solve)
   708480   10.766    0.000   18.177    0.000 function_base.py:4740(insert)
  3655536   10.546    0.000   14.900    0.000 defmatrix.py:314(__getitem__)
8355461/7321324    8.605    0.000    9.797    0.000 defmatrix.py:292(__array_finalize__)
  1461097    7.551    0.000    7.551    0.000 {method 'reduce' of 'numpy.ufunc' objects}
  7251012    6.234    0.000    6.234    0.000 {built-in method numpy.core.multiarray.zeros}
  3532593    5.821    0.000    5.821    0.000 {method 'astype' of 'numpy.ndarray' objects}
      451    5.401    0.012  299.978    0.665 dp.py:14(solve)
   772958    5.271    0.000   11.246    0.000 flow.py:553(push)
   708931    5.070    0.000   14.612    0.000 flow.py:239(__init__)
  2899250    4.049    0.000   10.700    0.000 fromnumeric.py:1364(ravel)
  1033686    4.007    0.000    5.446    0.000 {method 'dot' of 'numpy.ndarray' objects}
  1449580    3.960    0.000   12.480    0.000 fromnumeric.py:1710(sum)
 19558553    3.768    0.000    3.768    0.000 {built-in method builtins.isinstance}
  2163054    3.444    0.000    3.965    0.000 {method 'copy' of 'numpy.ndarray' objects}
  5022214    3.402    0.000    8.441    0.000 numeric.py:463(asarray)
  4311986    3.376    0.000   10.722    0.000 linalg.py:106(_makearray)
  1449581    3.342    0.000    8.156    0.000 linalg.py:180(_fastCopyAndTranspose)
  2899162    3.219    0.000    3.219    0.000 {built-in method numpy.core.multiarray._fastCopyAndTranspose}
  2899250    3.088    0.000    3.088    0.000 {method 'ravel' of 'numpy.ndarray' objects}
   772354    3.060    0.000    3.905    0.000 flow.py:505(copy)
  2155993    2.940    0.000    3.531    0.000 linalg.py:139(_commonType)
  7954328    2.469    0.000    2.469    0.000 {built-in method builtins.min}
  2900375    2.170    0.000    2.667    0.000 numeric.py:534(asanyarray)
  1449581    2.146    0.000    2.792    0.000 linalg.py:168(_to_native_byte_order)
  2899162    1.977    0.000    3.516    0.000 {method 'transpose' of 'numpy.ndarray' objects}
   772958    1.771    0.000    2.071    0.000 flow.py:584(distribute)
  3605715    1.323    0.000    1.323    0.000 {built-in method builtins.max}
   708931    1.319    0.000    7.034    0.000 defmatrix.py:246(__new__)
  1449581    1.281    0.000    1.437    0.000 linalg.py:192(_assertRank2)
  3605572    1.243    0.000    1.801    0.000 linalg.py:111(isComplexType)
 12610890    1.174    0.000    1.174    0.000 {built-in method builtins.len}
  7920586    1.151    0.000    1.151    0.000 {built-in method builtins.issubclass}
   708480    1.033    0.000    1.033    0.000 numeric.py:1490(rollaxis)
  1031663    0.942    0.000    1.113    0.000 numeric.py:2160(isscalar)
   706412    0.864    0.000    1.335    0.000 linalg.py:209(_assertNdSquareness)
  4375393    0.821    0.000    0.821    0.000 {built-in method builtins.getattr}
   713527    0.814    0.000    3.656    0.000 {method 'view' of 'numpy.ndarray' objects}
   708480    0.789    0.000    1.631    0.000 {method '__array_wrap__' of 'numpy.ndarray' objects}
   708534    0.767    0.000    0.767    0.000 {built-in method numpy.core.multiarray.empty}
   706412    0.752    0.000    0.752    0.000 {method 'squeeze' of 'numpy.ndarray' objects}
  1449580    0.744    0.000    0.744    0.000 {built-in method math.log}
   706412    0.743    0.000    1.496    0.000 fromnumeric.py:1143(squeeze)
   773255    0.663    0.000    0.663    0.000 flow.py:495(__init__)
  1451148    0.662    0.000    8.176    0.000 _methods.py:31(_sum)
   706412    0.652    0.000    0.652    0.000 linalg.py:101(get_linalg_error_extobj)
  2444239    0.613    0.000    0.613    0.000 {built-in method builtins.hash}
   706412    0.586    0.000    0.655    0.000 linalg.py:198(_assertRankAtLeast2)
  1449581    0.554    0.000    0.876    0.000 linalg.py:124(_realType)
  3134827    0.539    0.000    0.539    0.000 {method 'append' of 'list' objects}
   389696    0.436    0.000    0.436    0.000 linalg.py:89(_raise_linalgerror_singular)
   158096    0.370    0.000    0.430    0.000 flow.py:431(__init__)
  3215876    0.338    0.000    0.338    0.000 {method '__array_prepare__' of 'numpy.ndarray' objects}
  1450339    0.322    0.000    0.322    0.000 {method 'get' of 'dict' objects}
  1417411    0.283    0.000    0.283    0.000 {method 'tobytes' of 'memoryview' objects}
   252899    0.220    0.000    0.220    0.000 flow.py:464(add_constraint)
   316716    0.186    0.000    0.186    0.000 {method 'tolist' of 'numpy.ndarray' objects}
  1548214    0.184    0.000    0.184    0.000 {method 'items' of 'dict' objects}
    38810    0.168    0.000    0.213    0.000 partition.py:17(visit)
   708480    0.157    0.000    0.157    0.000 {method 'item' of 'numpy.ndarray' objects}
  1449581    0.149    0.000    0.149    0.000 linalg.py:130(_linalgRealType)
  1313042    0.128    0.000    0.128    0.000 {method 'is_integer' of 'float' objects}
       54    0.077    0.001    0.529    0.010 _linprog.py:212(_solve_simplex)
103589/39414    0.057    0.000    0.298    0.000 partition.py:23(f)
     6119    0.053    0.000    0.133    0.000 core.py:2913(__array_finalize__)
     6876    0.035    0.000    0.071    0.000 core.py:2887(_update_from)
37497/21103    0.027    0.000    0.128    0.000 partition.py:55(b)
    38810    0.025    0.000    0.025    0.000 partition.py:18(<listcomp>)
      757    0.022    0.000    0.085    0.000 core.py:1157(__call__)
13085/10760    0.017    0.000    0.039    0.000 core.py:3320(__setattr__)
     4551    0.016    0.000    0.079    0.000 core.py:3639(filled)
     2945    0.015    0.000    0.016    0.000 guess_weight.py:43(is_feasible)
      757    0.014    0.000    0.288    0.000 _linprog.py:173(_pivot_row)
     5344    0.012    0.000    0.012    0.000 {built-in method numpy.core.multiarray.copyto}
     2325    0.011    0.000    0.024    0.000 core.py:3351(__setmask__)
       45    0.011    0.000    0.551    0.012 _linprog.py:391(_linprog_simplex)
     4551    0.010    0.000    0.022    0.000 core.py:440(_check_fill_value)
     1514    0.009    0.000    0.072    0.000 core.py:3893(__eq__)
      811    0.009    0.000    0.163    0.000 _linprog.py:137(_pivot_col)
     7633    0.008    0.000    0.008    0.000 core.py:3540(_get_data)
    33623    0.008    0.000    0.008    0.000 {method 'update' of 'dict' objects}
      757    0.008    0.000    0.017    0.000 core.py:848(__call__)
     2325    0.008    0.000    0.118    0.000 core.py:1810(masked_where)
     1568    0.007    0.000    0.020    0.000 core.py:4289(count)
     1514    0.007    0.000    0.102    0.000 core.py:5460(min)
     4650    0.007    0.000    0.009    0.000 core.py:1308(make_mask_descr)
     7687    0.006    0.000    0.006    0.000 {built-in method builtins.hasattr}
        2    0.006    0.003  300.000  150.000 guess_weight.py:62(solve)
     3028    0.006    0.000    0.014    0.000 numeric.py:2686(seterr)
     1514    0.005    0.000    0.039    0.000 {method 'view' of 'numpy.generic' objects}
     3028    0.005    0.000    0.006    0.000 numeric.py:2786(geterr)
     2325    0.005    0.000    0.026    0.000 core.py:1531(make_mask)
     6921    0.004    0.000    0.032    0.000 {method 'any' of 'numpy.ndarray' objects}
     1514    0.004    0.000    0.006    0.000 numerictypes.py:603(obj2sctype)
     6921    0.003    0.000    0.028    0.000 _methods.py:37(_any)
     3839    0.003    0.000    0.032    0.000 core.py:599(filled)
      757    0.003    0.000    0.004    0.000 core.py:645(get_masked_subclass)
      781    0.003    0.000    0.005    0.000 flow.py:441(is_redundant)
     2325    0.003    0.000    0.010    0.000 core.py:1626(make_mask_none)
     1514    0.002    0.000    0.031    0.000 core.py:6951(where)
     1705    0.002    0.000    0.003    0.000 flow.py:550(__hash__)
     1080    0.002    0.000    0.003    0.000 shape_base.py:61(atleast_2d)
      604    0.002    0.000    0.002    0.000 partition.py:15(algorithm_u)
     1080    0.002    0.000    0.002    0.000 {built-in method numpy.core.multiarray.concatenate}
     1514    0.002    0.000    0.010    0.000 core.py:242(_recursive_extremum_fill_value)
     1514    0.002    0.000    0.008    0.000 numeric.py:3088(__exit__)
     4650    0.002    0.000    0.002    0.000 core.py:1287(_recursive_make_descr)
     1514    0.002    0.000    0.009    0.000 core.py:1798(_check_mask_axis)
     1514    0.002    0.000    0.009    0.000 numeric.py:3083(__enter__)
     3028    0.002    0.000    0.002    0.000 {built-in method numpy.core.umath.seterrobj}
     1514    0.002    0.000    0.008    0.000 numerictypes.py:774(__getitem__)
      604    0.002    0.000    0.002    0.000 graphs.py:67(labeled_neighborhood)
      757    0.002    0.000    0.087    0.000 core.py:4023(__truediv__)
     1568    0.002    0.000    0.010    0.000 {method 'sum' of 'numpy.ndarray' objects}
     1514    0.002    0.000    0.002    0.000 {method 'nonzero' of 'numpy.ndarray' objects}
     1514    0.001    0.000    0.002    0.000 numeric.py:3079(__init__)
     1514    0.001    0.000    0.008    0.000 {method 'min' of 'numpy.ndarray' objects}
     3035    0.001    0.000    0.001    0.000 flow.py:444(<genexpr>)
     1514    0.001    0.000    0.011    0.000 core.py:253(minimum_fill_value)
      757    0.001    0.000    0.001    0.000 {built-in method numpy.core.multiarray.can_cast}
      451    0.001    0.000    0.004    0.000 graphs.py:61(sink)
     1514    0.001    0.000    0.008    0.000 {method 'all' of 'numpy.ndarray' objects}
     4133    0.001    0.000    0.001    0.000 {built-in method builtins.sum}
     2255    0.001    0.000    0.003    0.000 graphs.py:126(out_degree)
     6056    0.001    0.000    0.001    0.000 {built-in method numpy.core.umath.geterrobj}
      757    0.001    0.000    0.001    0.000 core.py:659(<listcomp>)
     1514    0.001    0.000    0.002    0.000 core.py:672(getdata)
     2255    0.001    0.000    0.001    0.000 graphs.py:84(out_neighborhood)
     1514    0.001    0.000    0.007    0.000 _methods.py:28(_amin)
     1514    0.001    0.000    0.007    0.000 _methods.py:40(_all)
      540    0.001    0.000    0.006    0.000 shape_base.py:180(vstack)
      826    0.001    0.000    0.002    0.000 {built-in method builtins.all}
     2260    0.001    0.000    0.001    0.000 graphs.py:78(neighborhood)
      452    0.001    0.000    0.001    0.000 graphs.py:55(source)
       45    0.001    0.000    0.552    0.012 flow.py:261(is_redundant)
     1514    0.001    0.000    0.001    0.000 core.py:1344(getmask)
      540    0.001    0.000    0.004    0.000 shape_base.py:234(<listcomp>)
      904    0.000    0.000    0.001    0.000 graphs.py:52(__iter__)
      757    0.000    0.000    0.000    0.000 core.py:3883(_delegate_binop)
     1514    0.000    0.000    0.000    0.000 {method 'pop' of 'dict' objects}
      452    0.000    0.000    0.001    0.000 graphs.py:129(in_degree)
     1514    0.000    0.000    0.000    0.000 {method 'count' of 'tuple' objects}
       45    0.000    0.000    0.551    0.012 _linprog.py:824(linprog)
      452    0.000    0.000    0.000    0.000 graphs.py:87(in_neighborhood)
       45    0.000    0.000    0.000    0.000 index_tricks.py:665(fill_diagonal)
      904    0.000    0.000    0.000    0.000 {built-in method builtins.iter}
        9    0.000    0.000    0.000    0.000 function_base.py:4538(delete)
      200    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
      460    0.000    0.000    0.000    0.000 flow.py:422(__hash__)
       41    0.000    0.000    0.000    0.000 flow.py:533(__eq__)
        9    0.000    0.000    0.000    0.000 core.py:2753(__new__)
        9    0.000    0.000    0.000    0.000 _linprog.py:325(<listcomp>)
       45    0.000    0.000    0.000    0.000 fromnumeric.py:1866(any)
       45    0.000    0.000    0.000    0.000 numeric.py:150(ones)
      180    0.000    0.000    0.000    0.000 flow.py:265(<genexpr>)
       45    0.000    0.000    0.000    0.000 optimize.py:112(__getattr__)
      191    0.000    0.000    0.000    0.000 flow.py:488(__hash__)
       45    0.000    0.000    0.000    0.000 flow.py:264(<listcomp>)
       45    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.count_nonzero}
        9    0.000    0.000    0.000    0.000 core.py:6155(array)
       45    0.000    0.000    0.000    0.000 numeric.py:380(count_nonzero)
        1    0.000    0.000  300.000  300.000 toboggan.py:77(find_opt_size)
        1    0.000    0.000    0.000    0.000 flow.py:60(_compute_max_weight_bounds)
       45    0.000    0.000    0.000    0.000 {built-in method builtins.abs}
        2    0.000    0.000    0.000    0.000 flow.py:211(has_bad_bounds)
       45    0.000    0.000    0.000    0.000 {method 'lower' of 'str' objects}
        1    0.000    0.000    0.000    0.000 flow.py:81(_compute_weight_bounds)
        2    0.000    0.000    0.000    0.000 twodim_base.py:139(eye)
       45    0.000    0.000    0.000    0.000 optimize.py:137(_check_unknown_options)
        1    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.arange}
        4    0.000    0.000    0.000    0.000 {built-in method builtins.print}
        9    0.000    0.000    0.000    0.000 core.py:3562(get_fill_value)
        2    0.000    0.000    0.000    0.000 signal.py:35(_enum_to_int)
        4    0.000    0.000    0.000    0.000 {method 'format' of 'str' objects}
        9    0.000    0.000    0.000    0.000 {method 'indices' of 'slice' objects}
        1    0.000    0.000    0.000    0.000 signal.py:45(signal)
        9    0.000    0.000    0.000    0.000 index_tricks.py:650(__getitem__)
        2    0.000    0.000    0.000    0.000 {built-in method _signal.alarm}
        1    0.000    0.000    0.000    0.000 toboggan.py:39(__enter__)
        1    0.000    0.000    0.000    0.000 flow.py:198(try_larger_k)
        1    0.000    0.000    0.000    0.000 signal.py:25(_int_to_enum)
        1    0.000    0.000    0.000    0.000 toboggan.py:36(handle_timeout)
        1    0.000    0.000    0.000    0.000 enum.py:459(__new__)
        1    0.000    0.000    0.000    0.000 getlimits.py:96(__new__)
        1    0.000    0.000    0.000    0.000 {built-in method _signal.signal}
        1    0.000    0.000    0.000    0.000 flow.py:474(__eq__)
        1    0.000    0.000    0.000    0.000 enum.py:215(__call__)
        1    0.000    0.000    0.000    0.000 toboggan.py:44(__exit__)
        1    0.000    0.000    0.000    0.000 toboggan.py:32(__init__)
        1    0.000    0.000    0.000    0.000 flow.py:72(<dictcomp>)
        6    0.000    0.000    0.000    0.000 guess_weight.py:74(<genexpr>)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
       11    0.000    0.000    0.000    0.000 guess_weight.py:82(<lambda>)
        1    0.000    0.000    0.000    0.000 flow.py:101(<listcomp>)
        1    0.000    0.000    0.000    0.000 flow.py:97(<listcomp>)


# All_info	n_in	m_in	n_red	m_red	k_gtrue	k_cut	k_impro	k_opt	time_w	time_p
All_info	25	34	5	14	7	5	5	None	300	0
weights	
Finished instance.

# Timeout is set to 300
# Recovering paths
# Running on instances 10279
# Ground-truth available in file ../../research/instances/rnaseq/zebrafish/24.truth

File 24.graph instance 10278 name ENSDARG00000056322 with n = 33, m = 53, and truth = 13:
[(0, 10, 84), (0, 10, 190), (0, 10, 18), (0, 10, 523), (0, 10, 2469), (0, 10, 2), (0, 10, 235), (10, 24, 29), (10, 24, 772), (10, 16, 511), (10, 24, 303), (10, 16, 235), (10, 24, 280), (10, 16, 242), (10, 16, 525), (10, 24, 624), (16, 32, 84), (16, 32, 523), (16, 32, 235), (16, 32, 18), (16, 32, 651), (16, 32, 2), (24, 32, 303), (24, 32, 280), (24, 32, 1425)]
# Preprocessing
#	Graph has an edge cut of size 11.
#	Investigating cutsets yields bound 11.
#	User supplied k value of 1.
#	Continuing using k = 11
# Reduced instance has n = 5, m = 25, and lower_bound = 11:
Searching for minimum-sized set of weights, timeout set at 300
# 	Call guess_weight with k = 11
Timed out after 300 seconds
         127228047 function calls (127204377 primitive calls) in 300.000 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
 18083993  151.533    0.000  239.886    0.000 flow.py:553(push)
 18083992   55.254    0.000   68.164    0.000 flow.py:505(copy)
        1   48.696   48.696  300.000  300.000 dp.py:14(solve)
 18083993   20.154    0.000   20.190    0.000 flow.py:584(distribute)
 18645592   11.415    0.000   11.415    0.000 flow.py:464(add_constraint)
 18083993   10.135    0.000   10.135    0.000 flow.py:495(__init__)
 36167986    2.775    0.000    2.775    0.000 {method 'items' of 'dict' objects}
     3589    0.018    0.000    0.025    0.000 partition.py:17(visit)
21524/3590    0.007    0.000    0.035    0.000 partition.py:23(f)
8860/3135    0.004    0.000    0.027    0.000 partition.py:55(b)
    39508    0.004    0.000    0.004    0.000 {method 'append' of 'list' objects}
     3589    0.003    0.000    0.003    0.000 partition.py:18(<listcomp>)
       22    0.000    0.000    0.000    0.000 {built-in method numpy.linalg.lapack_lite.dgelsd}
       11    0.000    0.000    0.002    0.000 linalg.py:1830(lstsq)
      132    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.array}
       11    0.000    0.000    0.003    0.000 flow.py:343(add_constraint)
       10    0.000    0.000    0.000    0.000 function_base.py:4740(insert)
       11    0.000    0.000    0.000    0.000 flow.py:239(__init__)
       11    0.000    0.000    0.002    0.000 flow.py:296(_test_row)
        1    0.000    0.000    0.000    0.000 linalg.py:296(solve)
       67    0.000    0.000    0.000    0.000 defmatrix.py:314(__getitem__)
    57/46    0.000    0.000    0.000    0.000 defmatrix.py:292(__array_finalize__)
       11    0.000    0.000    0.000    0.000 {method 'reduce' of 'numpy.ufunc' objects}
       58    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.zeros}
      190    0.000    0.000    0.000    0.000 {built-in method builtins.isinstance}
       11    0.000    0.000    0.000    0.000 linalg.py:180(_fastCopyAndTranspose)
       24    0.000    0.000    0.000    0.000 {method 'astype' of 'numpy.ndarray' objects}
       10    0.000    0.000    0.000    0.000 {method 'dot' of 'numpy.ndarray' objects}
       22    0.000    0.000    0.000    0.000 {method 'copy' of 'numpy.ndarray' objects}
       11    0.000    0.000    0.000    0.000 fromnumeric.py:1710(sum)
       34    0.000    0.000    0.000    0.000 numeric.py:463(asarray)
       22    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray._fastCopyAndTranspose}
       22    0.000    0.000    0.000    0.000 fromnumeric.py:1364(ravel)
       22    0.000    0.000    0.000    0.000 {method 'ravel' of 'numpy.ndarray' objects}
       24    0.000    0.000    0.000    0.000 linalg.py:106(_makearray)
       11    0.000    0.000    0.000    0.000 defmatrix.py:246(__new__)
       12    0.000    0.000    0.000    0.000 linalg.py:139(_commonType)
       56    0.000    0.000    0.000    0.000 {built-in method builtins.min}
        1    0.000    0.000  300.000  300.000 toboggan.py:77(find_opt_size)
       22    0.000    0.000    0.000    0.000 numeric.py:534(asanyarray)
       10    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.empty}
       11    0.000    0.000    0.000    0.000 linalg.py:168(_to_native_byte_order)
        1    0.000    0.000    0.000    0.000 flow.py:211(has_bad_bounds)
       25    0.000    0.000    0.000    0.000 {built-in method builtins.max}
       11    0.000    0.000    0.000    0.000 {method 'view' of 'numpy.ndarray' objects}
       10    0.000    0.000    0.000    0.000 numeric.py:1490(rollaxis)
        2    0.000    0.000    0.000    0.000 twodim_base.py:139(eye)
       22    0.000    0.000    0.000    0.000 {method 'transpose' of 'numpy.ndarray' objects}
      111    0.000    0.000    0.000    0.000 {built-in method builtins.len}
        1    0.000    0.000  300.000  300.000 guess_weight.py:62(solve)
       11    0.000    0.000    0.000    0.000 linalg.py:192(_assertRank2)
       11    0.000    0.000    0.000    0.000 _methods.py:31(_sum)
       10    0.000    0.000    0.000    0.000 {method '__array_wrap__' of 'numpy.ndarray' objects}
       23    0.000    0.000    0.000    0.000 linalg.py:111(isComplexType)
       35    0.000    0.000    0.000    0.000 {built-in method builtins.hash}
        1    0.000    0.000    0.000    0.000 partition.py:15(algorithm_u)
       24    0.000    0.000    0.000    0.000 {built-in method builtins.getattr}
       11    0.000    0.000    0.000    0.000 {built-in method math.log}
        2    0.000    0.000    0.000    0.000 signal.py:35(_enum_to_int)
        1    0.000    0.000    0.000    0.000 flow.py:431(__init__)
        1    0.000    0.000    0.000    0.000 graphs.py:67(labeled_neighborhood)
        3    0.000    0.000    0.000    0.000 {built-in method builtins.print}
       47    0.000    0.000    0.000    0.000 {built-in method builtins.issubclass}
       11    0.000    0.000    0.000    0.000 linalg.py:124(_realType)
        1    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.arange}
        1    0.000    0.000    0.000    0.000 flow.py:550(__hash__)
       21    0.000    0.000    0.000    0.000 {method 'tobytes' of 'memoryview' objects}
        3    0.000    0.000    0.000    0.000 {method 'format' of 'str' objects}
        1    0.000    0.000    0.000    0.000 signal.py:45(signal)
       23    0.000    0.000    0.000    0.000 {method '__array_prepare__' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 enum.py:215(__call__)
        1    0.000    0.000    0.000    0.000 {built-in method builtins.sorted}
        2    0.000    0.000    0.000    0.000 {built-in method _signal.alarm}
        6    0.000    0.000    0.000    0.000 guess_weight.py:74(<genexpr>)
        1    0.000    0.000    0.000    0.000 fromnumeric.py:1143(squeeze)
        1    0.000    0.000    0.000    0.000 toboggan.py:36(handle_timeout)
        1    0.000    0.000    0.000    0.000 toboggan.py:39(__enter__)
        1    0.000    0.000    0.000    0.000 graphs.py:55(source)
        1    0.000    0.000    0.000    0.000 graphs.py:52(__iter__)
       10    0.000    0.000    0.000    0.000 {method 'item' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 signal.py:25(_int_to_enum)
        1    0.000    0.000    0.000    0.000 {built-in method _signal.signal}
        1    0.000    0.000    0.000    0.000 toboggan.py:44(__exit__)
        1    0.000    0.000    0.000    0.000 numeric.py:2160(isscalar)
       11    0.000    0.000    0.000    0.000 {method 'get' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 {method 'squeeze' of 'numpy.ndarray' objects}
       11    0.000    0.000    0.000    0.000 linalg.py:130(_linalgRealType)
        1    0.000    0.000    0.000    0.000 {method 'tolist' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 linalg.py:101(get_linalg_error_extobj)
        1    0.000    0.000    0.000    0.000 graphs.py:129(in_degree)
        1    0.000    0.000    0.000    0.000 toboggan.py:32(__init__)
        1    0.000    0.000    0.000    0.000 linalg.py:198(_assertRankAtLeast2)
       12    0.000    0.000    0.000    0.000 guess_weight.py:78(<genexpr>)
        1    0.000    0.000    0.000    0.000 enum.py:459(__new__)
        1    0.000    0.000    0.000    0.000 graphs.py:87(in_neighborhood)
        1    0.000    0.000    0.000    0.000 flow.py:488(__hash__)
       11    0.000    0.000    0.000    0.000 {method 'is_integer' of 'float' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 {built-in method builtins.iter}
        1    0.000    0.000    0.000    0.000 linalg.py:209(_assertNdSquareness)


# All_info	n_in	m_in	n_red	m_red	k_gtrue	k_cut	k_impro	k_opt	time_w	time_p
All_info	33	53	5	25	13	11	11	None	300	0
weights	
Finished instance.

# Timeout is set to 300
# Recovering paths
# Running on instances 1676
# Ground-truth available in file ../../research/instances/rnaseq/zebrafish/91.truth

File 91.graph instance 1675 name ENSDARG00000068457 with n = 31, m = 48, and truth = 8:
[(0, 8, 85), (0, 8, 457), (0, 8, 42), (0, 8, 1177), (0, 8, 1226), (0, 8, 2), (0, 8, 17), (8, 12, 2), (8, 21, 876), (8, 12, 1761), (8, 13, 367), (12, 21, 499), (12, 13, 1262), (12, 21, 2), (13, 21, 1544), (13, 21, 85), (21, 30, 1262), (21, 26, 457), (21, 30, 42), (21, 26, 1245), (26, 30, 17), (26, 30, 457), (26, 30, 1226), (26, 30, 2)]
# Preprocessing
#	Graph has an edge cut of size 7.
#	Investigating cutsets yields bound 7.
#	User supplied k value of 1.
#	Continuing using k = 7
# Reduced instance has n = 7, m = 24, and lower_bound = 7:
Searching for minimum-sized set of weights, timeout set at 300
# 	Call guess_weight with k = 7
# 	Call guess_weight with k = 8
Timed out after 300 seconds
         172054940 function calls (171000261 primitive calls) in 300.000 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
  2811246   52.718    0.000   52.718    0.000 {built-in method numpy.linalg.lapack_lite.dgelsd}
  1405624   42.002    0.000  168.797    0.000 linalg.py:1830(lstsq)
 16021440   25.850    0.000   25.850    0.000 {built-in method numpy.core.multiarray.array}
  1416880   18.682    0.000  282.754    0.000 flow.py:343(add_constraint)
  4383439   11.309    0.000   15.856    0.000 defmatrix.py:314(__getitem__)
   680664   11.108    0.000   19.216    0.000 linalg.py:296(solve)
  1405624   11.026    0.000  213.656    0.000 flow.py:296(_test_row)
   680695   10.433    0.000   17.475    0.000 function_base.py:4740(insert)
8372582/7324854    8.600    0.000    9.776    0.000 defmatrix.py:292(__array_finalize__)
  1405944    7.424    0.000    7.424    0.000 {method 'reduce' of 'numpy.ufunc' objects}
   691928    6.817    0.000   12.242    0.000 flow.py:553(push)
  7028206    6.187    0.000    6.187    0.000 {built-in method numpy.core.multiarray.zeros}
  3218528    5.313    0.000    5.313    0.000 {method 'astype' of 'numpy.ndarray' objects}
        5    4.986    0.997  299.998   60.000 dp.py:14(solve)
   680700    4.969    0.000   14.202    0.000 flow.py:239(__init__)
  1047723    4.127    0.000    5.754    0.000 {method 'dot' of 'numpy.ndarray' objects}
  2811248    4.035    0.000   10.546    0.000 fromnumeric.py:1364(ravel)
  1405623    3.869    0.000   12.315    0.000 fromnumeric.py:1710(sum)
 20063819    3.810    0.000    3.810    0.000 {built-in method builtins.isinstance}
  4853317    3.372    0.000    8.262    0.000 numeric.py:463(asarray)
  2086449    3.274    0.000    3.781    0.000 {method 'copy' of 'numpy.ndarray' objects}
  4172574    3.263    0.000   10.465    0.000 linalg.py:106(_makearray)
  1405623    3.190    0.000    7.917    0.000 linalg.py:180(_fastCopyAndTranspose)
  2811246    3.145    0.000    3.145    0.000 {built-in method numpy.core.multiarray._fastCopyAndTranspose}
  2811248    2.995    0.000    2.995    0.000 {method 'ravel' of 'numpy.ndarray' objects}
   691922    2.986    0.000    3.828    0.000 flow.py:505(copy)
  2086287    2.872    0.000    3.445    0.000 linalg.py:139(_commonType)
  7708804    2.367    0.000    2.367    0.000 {built-in method builtins.min}
  2811281    2.170    0.000    2.641    0.000 numeric.py:534(asanyarray)
  1405623    2.079    0.000    2.706    0.000 linalg.py:168(_to_native_byte_order)
  2811248    1.928    0.000    3.423    0.000 {method 'transpose' of 'numpy.ndarray' objects}
   691928    1.579    0.000    1.596    0.000 flow.py:584(distribute)
  1405623    1.263    0.000    1.413    0.000 linalg.py:192(_assertRank2)
   680700    1.225    0.000    6.700    0.000 defmatrix.py:246(__new__)
  3491976    1.223    0.000    1.223    0.000 {built-in method builtins.max}
  3491910    1.162    0.000    1.710    0.000 linalg.py:111(isComplexType)
 12260180    1.159    0.000    1.159    0.000 {built-in method builtins.len}
  7664568    1.121    0.000    1.121    0.000 {built-in method builtins.issubclass}
  1047693    1.030    0.000    1.203    0.000 numeric.py:2160(isscalar)
   680695    0.995    0.000    0.995    0.000 numeric.py:1490(rollaxis)
   680664    0.813    0.000    1.249    0.000 linalg.py:209(_assertNdSquareness)
   680828    0.783    0.000    3.397    0.000 {method 'view' of 'numpy.ndarray' objects}
  4174345    0.762    0.000    0.762    0.000 {built-in method builtins.getattr}
  1405623    0.742    0.000    0.742    0.000 {built-in method math.log}
   680697    0.734    0.000    0.734    0.000 {built-in method numpy.core.multiarray.empty}
   680664    0.730    0.000    0.730    0.000 {method 'squeeze' of 'numpy.ndarray' objects}
   680695    0.727    0.000    1.498    0.000 {method '__array_wrap__' of 'numpy.ndarray' objects}
   680664    0.720    0.000    1.450    0.000 fromnumeric.py:1143(squeeze)
  1405667    0.666    0.000    8.090    0.000 _methods.py:31(_sum)
   691931    0.658    0.000    0.658    0.000 flow.py:495(__init__)
   680664    0.651    0.000    0.651    0.000 linalg.py:101(get_linalg_error_extobj)
  1405623    0.628    0.000    0.939    0.000 linalg.py:124(_realType)
   680664    0.554    0.000    0.616    0.000 linalg.py:198(_assertRankAtLeast2)
  2042206    0.540    0.000    0.540    0.000 {built-in method builtins.hash}
   477023    0.533    0.000    0.533    0.000 linalg.py:89(_raise_linalgerror_singular)
  2825973    0.497    0.000    0.497    0.000 {method 'append' of 'list' objects}
  1405645    0.311    0.000    0.311    0.000 {method 'get' of 'dict' objects}
  3014887    0.310    0.000    0.310    0.000 {method '__array_prepare__' of 'numpy.ndarray' objects}
  1361395    0.277    0.000    0.277    0.000 {method 'tobytes' of 'memoryview' objects}
  1405623    0.193    0.000    0.193    0.000 linalg.py:130(_linalgRealType)
  1383884    0.184    0.000    0.184    0.000 {method 'items' of 'dict' objects}
   680695    0.145    0.000    0.145    0.000 {method 'item' of 'numpy.ndarray' objects}
   203641    0.129    0.000    0.129    0.000 {method 'tolist' of 'numpy.ndarray' objects}
   102432    0.022    0.000    0.022    0.000 {method 'is_integer' of 'float' objects}
     1831    0.010    0.000    0.012    0.000 partition.py:17(visit)
6400/1837    0.003    0.000    0.017    0.000 partition.py:23(f)
        2    0.003    0.001    0.015    0.008 _linprog.py:212(_solve_simplex)
3780/1457    0.002    0.000    0.013    0.000 partition.py:55(b)
      171    0.002    0.000    0.004    0.000 core.py:2913(__array_finalize__)
     1831    0.001    0.000    0.001    0.000 partition.py:18(<listcomp>)
      231    0.001    0.000    0.001    0.000 guess_weight.py:43(is_feasible)
      192    0.001    0.000    0.002    0.000 core.py:2887(_update_from)
       21    0.001    0.000    0.002    0.000 core.py:1157(__call__)
  369/304    0.000    0.000    0.001    0.000 core.py:3320(__setattr__)
      127    0.000    0.000    0.002    0.000 core.py:3639(filled)
      148    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.copyto}
        2    0.000    0.000  300.000  150.000 guess_weight.py:62(solve)
       21    0.000    0.000    0.008    0.000 _linprog.py:173(_pivot_row)
        1    0.000    0.000    0.016    0.016 _linprog.py:391(_linprog_simplex)
       65    0.000    0.000    0.001    0.000 core.py:3351(__setmask__)
      127    0.000    0.000    0.001    0.000 core.py:440(_check_fill_value)
       23    0.000    0.000    0.005    0.000 _linprog.py:137(_pivot_col)
       42    0.000    0.000    0.002    0.000 core.py:3893(__eq__)
      939    0.000    0.000    0.000    0.000 {method 'update' of 'dict' objects}
       21    0.000    0.000    0.000    0.000 core.py:848(__call__)
       65    0.000    0.000    0.003    0.000 core.py:1810(masked_where)
       44    0.000    0.000    0.001    0.000 core.py:4289(count)
      213    0.000    0.000    0.000    0.000 core.py:3540(_get_data)
      215    0.000    0.000    0.000    0.000 {built-in method builtins.hasattr}
      130    0.000    0.000    0.000    0.000 core.py:1308(make_mask_descr)
       42    0.000    0.000    0.003    0.000 core.py:5460(min)
       84    0.000    0.000    0.000    0.000 numeric.py:2686(seterr)
       42    0.000    0.000    0.001    0.000 {method 'view' of 'numpy.generic' objects}
       84    0.000    0.000    0.000    0.000 numeric.py:2786(geterr)
       65    0.000    0.000    0.001    0.000 core.py:1531(make_mask)
      193    0.000    0.000    0.001    0.000 {method 'any' of 'numpy.ndarray' objects}
       48    0.000    0.000    0.000    0.000 flow.py:431(__init__)
      353    0.000    0.000    0.000    0.000 {built-in method builtins.sum}
       42    0.000    0.000    0.000    0.000 numerictypes.py:603(obj2sctype)
      193    0.000    0.000    0.001    0.000 _methods.py:37(_any)
       42    0.000    0.000    0.001    0.000 core.py:6951(where)
      107    0.000    0.000    0.001    0.000 core.py:599(filled)
       32    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.concatenate}
       65    0.000    0.000    0.000    0.000 core.py:1626(make_mask_none)
       21    0.000    0.000    0.000    0.000 core.py:645(get_masked_subclass)
       32    0.000    0.000    0.000    0.000 shape_base.py:61(atleast_2d)
       42    0.000    0.000    0.000    0.000 core.py:242(_recursive_extremum_fill_value)
       42    0.000    0.000    0.000    0.000 {method 'min' of 'numpy.ndarray' objects}
       42    0.000    0.000    0.000    0.000 core.py:1798(_check_mask_axis)
       42    0.000    0.000    0.000    0.000 numeric.py:3083(__enter__)
       84    0.000    0.000    0.000    0.000 {built-in method numpy.core.umath.seterrobj}
       42    0.000    0.000    0.000    0.000 numerictypes.py:774(__getitem__)
       44    0.000    0.000    0.000    0.000 {method 'sum' of 'numpy.ndarray' objects}
       48    0.000    0.000    0.000    0.000 flow.py:464(add_constraint)
       42    0.000    0.000    0.000    0.000 {method 'nonzero' of 'numpy.ndarray' objects}
       42    0.000    0.000    0.000    0.000 numeric.py:3088(__exit__)
      130    0.000    0.000    0.000    0.000 core.py:1287(_recursive_make_descr)
       21    0.000    0.000    0.002    0.000 core.py:4023(__truediv__)
       42    0.000    0.000    0.000    0.000 numeric.py:3079(__init__)
       42    0.000    0.000    0.000    0.000 core.py:253(minimum_fill_value)
       42    0.000    0.000    0.000    0.000 {method 'all' of 'numpy.ndarray' objects}
        6    0.000    0.000    0.000    0.000 graphs.py:67(labeled_neighborhood)
       21    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.can_cast}
      168    0.000    0.000    0.000    0.000 {built-in method numpy.core.umath.geterrobj}
        1    0.000    0.000    0.000    0.000 flow.py:60(_compute_max_weight_bounds)
       16    0.000    0.000    0.000    0.000 shape_base.py:180(vstack)
       15    0.000    0.000    0.000    0.000 flow.py:550(__hash__)
        1    0.000    0.000  300.000  300.000 toboggan.py:77(find_opt_size)
        6    0.000    0.000    0.000    0.000 partition.py:15(algorithm_u)
       21    0.000    0.000    0.000    0.000 core.py:659(<listcomp>)
        1    0.000    0.000    0.016    0.016 flow.py:261(is_redundant)
        1    0.000    0.000    0.000    0.000 function_base.py:4538(delete)
       42    0.000    0.000    0.000    0.000 core.py:672(getdata)
        2    0.000    0.000    0.000    0.000 flow.py:211(has_bad_bounds)
        5    0.000    0.000    0.000    0.000 graphs.py:61(sink)
        1    0.000    0.000    0.000    0.000 flow.py:81(_compute_weight_bounds)
       16    0.000    0.000    0.000    0.000 shape_base.py:234(<listcomp>)
       35    0.000    0.000    0.000    0.000 graphs.py:84(out_neighborhood)
       35    0.000    0.000    0.000    0.000 graphs.py:126(out_degree)
       42    0.000    0.000    0.000    0.000 graphs.py:78(neighborhood)
        2    0.000    0.000    0.000    0.000 twodim_base.py:139(eye)
       42    0.000    0.000    0.000    0.000 core.py:1344(getmask)
        1    0.000    0.000    0.000    0.000 _linprog.py:325(<listcomp>)
       21    0.000    0.000    0.000    0.000 core.py:3883(_delegate_binop)
       42    0.000    0.000    0.000    0.000 _methods.py:28(_amin)
        6    0.000    0.000    0.000    0.000 graphs.py:55(source)
       42    0.000    0.000    0.000    0.000 _methods.py:40(_all)
        1    0.000    0.000    0.000    0.000 core.py:2753(__new__)
       12    0.000    0.000    0.000    0.000 graphs.py:52(__iter__)
        4    0.000    0.000    0.000    0.000 {built-in method builtins.print}
        1    0.000    0.000    0.016    0.016 _linprog.py:824(linprog)
       42    0.000    0.000    0.000    0.000 {method 'count' of 'tuple' objects}
       42    0.000    0.000    0.000    0.000 {method 'pop' of 'dict' objects}
        2    0.000    0.000    0.000    0.000 signal.py:35(_enum_to_int)
        1    0.000    0.000    0.000    0.000 flow.py:198(try_larger_k)
        4    0.000    0.000    0.000    0.000 {method 'format' of 'str' objects}
        1    0.000    0.000    0.000    0.000 index_tricks.py:665(fill_diagonal)
        1    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.arange}
        6    0.000    0.000    0.000    0.000 graphs.py:129(in_degree)
        6    0.000    0.000    0.000    0.000 flow.py:422(__hash__)
        2    0.000    0.000    0.000    0.000 {built-in method _signal.alarm}
        1    0.000    0.000    0.000    0.000 toboggan.py:39(__enter__)
        1    0.000    0.000    0.000    0.000 core.py:6155(array)
        1    0.000    0.000    0.000    0.000 fromnumeric.py:1866(any)
        6    0.000    0.000    0.000    0.000 graphs.py:87(in_neighborhood)
        8    0.000    0.000    0.000    0.000 guess_weight.py:74(<genexpr>)
        1    0.000    0.000    0.000    0.000 signal.py:45(signal)
        1    0.000    0.000    0.000    0.000 numeric.py:380(count_nonzero)
        1    0.000    0.000    0.000    0.000 toboggan.py:36(handle_timeout)
        1    0.000    0.000    0.000    0.000 flow.py:264(<listcomp>)
        6    0.000    0.000    0.000    0.000 flow.py:265(<genexpr>)
        1    0.000    0.000    0.000    0.000 enum.py:215(__call__)
        1    0.000    0.000    0.000    0.000 signal.py:25(_int_to_enum)
        1    0.000    0.000    0.000    0.000 {built-in method _signal.signal}
        1    0.000    0.000    0.000    0.000 enum.py:459(__new__)
        1    0.000    0.000    0.000    0.000 numeric.py:150(ones)
       14    0.000    0.000    0.000    0.000 guess_weight.py:82(<lambda>)
        1    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
        1    0.000    0.000    0.000    0.000 flow.py:101(<listcomp>)
        1    0.000    0.000    0.000    0.000 getlimits.py:96(__new__)
        1    0.000    0.000    0.000    0.000 core.py:3562(get_fill_value)
       12    0.000    0.000    0.000    0.000 {built-in method builtins.iter}
        1    0.000    0.000    0.000    0.000 toboggan.py:32(__init__)
        1    0.000    0.000    0.000    0.000 flow.py:97(<listcomp>)
        1    0.000    0.000    0.000    0.000 {built-in method builtins.all}
        1    0.000    0.000    0.000    0.000 flow.py:72(<dictcomp>)
        1    0.000    0.000    0.000    0.000 toboggan.py:44(__exit__)
        1    0.000    0.000    0.000    0.000 optimize.py:112(__getattr__)
        1    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.count_nonzero}
        1    0.000    0.000    0.000    0.000 index_tricks.py:650(__getitem__)
        1    0.000    0.000    0.000    0.000 {built-in method builtins.abs}
        1    0.000    0.000    0.000    0.000 {method 'lower' of 'str' objects}
        1    0.000    0.000    0.000    0.000 {method 'indices' of 'slice' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 optimize.py:137(_check_unknown_options)


# All_info	n_in	m_in	n_red	m_red	k_gtrue	k_cut	k_impro	k_opt	time_w	time_p
All_info	31	48	7	24	8	7	7	None	300	0
weights	
Finished instance.

# Timeout is set to 300
# Recovering paths
# Running on instances 9023
# Ground-truth available in file ../../research/instances/rnaseq/zebrafish/91.truth

File 91.graph instance 9022 name ENSDARG00000044062 with n = 31, m = 49, and truth = 10:
[(0, 4, 108), (0, 4, 594), (0, 4, 5), (0, 4, 1598), (0, 16, 451), (0, 16, 229), (0, 16, 345), (0, 6, 123), (4, 6, 1211), (4, 16, 1094), (6, 16, 825), (6, 16, 509), (16, 19, 121), (16, 19, 601), (16, 30, 229), (16, 30, 345), (16, 30, 1089), (16, 27, 108), (16, 27, 509), (16, 27, 451), (19, 30, 5), (19, 30, 717), (27, 30, 509), (27, 30, 108), (27, 30, 451)]
# Preprocessing
#	Graph has an edge cut of size 8.
#	Investigating cutsets yields bound 10.
#	User supplied k value of 1.
#	Continuing using k = 10
# Reduced instance has n = 7, m = 25, and lower_bound = 10:
Searching for minimum-sized set of weights, timeout set at 300
# 	Call guess_weight with k = 10
Timed out after 300 seconds
         87627219 function calls (86944446 primitive calls) in 300.000 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
  1385566   49.197    0.000   49.197    0.000 {built-in method numpy.linalg.lapack_lite.dgelsd}
   343867   46.479    0.000   53.416    0.000 linalg.py:296(solve)
   692784   33.572    0.000  144.273    0.000 linalg.py:1830(lstsq)
  7949373   21.532    0.000   21.532    0.000 {built-in method numpy.core.multiarray.array}
   692784   17.831    0.000  284.779    0.000 flow.py:343(add_constraint)
  2133810   10.810    0.000   15.497    0.000 defmatrix.py:314(__getitem__)
5132860/4450155    9.106    0.000   10.343    0.000 defmatrix.py:292(__array_finalize__)
   343876    9.050    0.000   15.070    0.000 function_base.py:4740(insert)
   692784    9.034    0.000  218.960    0.000 flow.py:296(_test_row)
   343869    6.691    0.000   11.203    0.000 flow.py:553(push)
  3463919    5.449    0.000    5.449    0.000 {built-in method numpy.core.multiarray.zeros}
   692783    5.422    0.000    5.422    0.000 {method 'reduce' of 'numpy.ufunc' objects}
   682704    5.060    0.000    7.734    0.000 {method 'dot' of 'numpy.ndarray' objects}
  1486367    4.678    0.000    4.678    0.000 {method 'astype' of 'numpy.ndarray' objects}
   343877    4.220    0.000   12.008    0.000 flow.py:239(__init__)
        1    4.012    4.012  299.995  299.995 dp.py:14(solve)
 11059344    3.418    0.000    3.418    0.000 {built-in method builtins.isinstance}
  1385566    3.391    0.000    8.872    0.000 fromnumeric.py:1364(ravel)
  1385568    3.200    0.000    3.200    0.000 {built-in method numpy.core.multiarray._fastCopyAndTranspose}
  2417178    2.980    0.000    7.433    0.000 numeric.py:463(asarray)
   692783    2.965    0.000    9.239    0.000 fromnumeric.py:1710(sum)
  2073302    2.858    0.000    9.303    0.000 linalg.py:106(_makearray)
   692784    2.764    0.000    7.582    0.000 linalg.py:180(_fastCopyAndTranspose)
  1036661    2.637    0.000    3.112    0.000 {method 'copy' of 'numpy.ndarray' objects}
   343868    2.618    0.000    3.311    0.000 flow.py:505(copy)
  1385566    2.611    0.000    2.611    0.000 {method 'ravel' of 'numpy.ndarray' objects}
  1036651    2.206    0.000    2.685    0.000 linalg.py:139(_commonType)
  3807783    2.009    0.000    2.009    0.000 {built-in method builtins.min}
  1385566    1.844    0.000    2.230    0.000 numeric.py:534(asanyarray)
   692784    1.746    0.000    2.245    0.000 linalg.py:168(_to_native_byte_order)
  1385568    1.621    0.000    2.875    0.000 {method 'transpose' of 'numpy.ndarray' objects}
   343869    1.201    0.000    1.201    0.000 flow.py:584(distribute)
   682695    1.168    0.000    1.378    0.000 numeric.py:2160(isscalar)
   692784    1.063    0.000    1.195    0.000 linalg.py:192(_assertRank2)
  1729435    1.061    0.000    1.061    0.000 {built-in method builtins.max}
  6220667    0.984    0.000    0.984    0.000 {built-in method builtins.len}
   343877    0.979    0.000    5.601    0.000 defmatrix.py:246(__new__)
  3802735    0.958    0.000    0.958    0.000 {built-in method builtins.issubclass}
  1729433    0.922    0.000    1.401    0.000 linalg.py:111(isComplexType)
   343876    0.761    0.000    0.761    0.000 numeric.py:1490(rollaxis)
   343867    0.726    0.000    1.124    0.000 linalg.py:209(_assertNdSquareness)
   343877    0.633    0.000    2.860    0.000 {method 'view' of 'numpy.ndarray' objects}
  2073302    0.628    0.000    0.628    0.000 {built-in method builtins.getattr}
   343867    0.623    0.000    0.623    0.000 {method 'squeeze' of 'numpy.ndarray' objects}
   343876    0.620    0.000    0.620    0.000 {built-in method numpy.core.multiarray.empty}
   343876    0.589    0.000    1.227    0.000 {method '__array_wrap__' of 'numpy.ndarray' objects}
   343867    0.563    0.000    1.186    0.000 fromnumeric.py:1143(squeeze)
   692783    0.552    0.000    5.974    0.000 _methods.py:31(_sum)
   343869    0.541    0.000    0.541    0.000 flow.py:495(__init__)
   343867    0.527    0.000    0.527    0.000 linalg.py:101(get_linalg_error_extobj)
   293467    0.496    0.000    0.496    0.000 linalg.py:89(_raise_linalgerror_singular)
   692783    0.492    0.000    0.492    0.000 {built-in method math.log}
   343867    0.471    0.000    0.525    0.000 linalg.py:198(_assertRankAtLeast2)
  1031631    0.457    0.000    0.457    0.000 {built-in method builtins.hash}
   692784    0.452    0.000    0.679    0.000 linalg.py:124(_realType)
  1385666    0.398    0.000    0.398    0.000 {method 'append' of 'list' objects}
  1435966    0.234    0.000    0.234    0.000 {method '__array_prepare__' of 'numpy.ndarray' objects}
   692784    0.227    0.000    0.227    0.000 {method 'get' of 'dict' objects}
   687753    0.215    0.000    0.215    0.000 {method 'tobytes' of 'memoryview' objects}
   687738    0.152    0.000    0.152    0.000 {method 'items' of 'dict' objects}
   692784    0.126    0.000    0.126    0.000 linalg.py:130(_linalgRealType)
   343876    0.109    0.000    0.109    0.000 {method 'item' of 'numpy.ndarray' objects}
    50400    0.049    0.000    0.049    0.000 {method 'tolist' of 'numpy.ndarray' objects}
    25200    0.008    0.000    0.008    0.000 {method 'is_integer' of 'float' objects}
      706    0.004    0.000    0.004    0.000 guess_weight.py:43(is_feasible)
        1    0.001    0.001  300.000  300.000 guess_weight.py:62(solve)
     1037    0.000    0.000    0.000    0.000 {built-in method builtins.sum}
        9    0.000    0.000    0.000    0.000 partition.py:17(visit)
    78/10    0.000    0.000    0.000    0.000 partition.py:23(f)
        1    0.000    0.000  300.000  300.000 toboggan.py:77(find_opt_size)
        1    0.000    0.000    0.000    0.000 flow.py:211(has_bad_bounds)
        9    0.000    0.000    0.000    0.000 partition.py:18(<listcomp>)
        2    0.000    0.000    0.000    0.000 twodim_base.py:139(eye)
        1    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.arange}
        3    0.000    0.000    0.000    0.000 {built-in method builtins.print}
        4    0.000    0.000    0.000    0.000 partition.py:55(b)
        3    0.000    0.000    0.000    0.000 {method 'format' of 'str' objects}
        1    0.000    0.000    0.000    0.000 flow.py:550(__hash__)
        1    0.000    0.000    0.000    0.000 partition.py:15(algorithm_u)
        2    0.000    0.000    0.000    0.000 signal.py:35(_enum_to_int)
        1    0.000    0.000    0.000    0.000 graphs.py:67(labeled_neighborhood)
        1    0.000    0.000    0.000    0.000 signal.py:45(signal)
        1    0.000    0.000    0.000    0.000 toboggan.py:44(__exit__)
        1    0.000    0.000    0.000    0.000 toboggan.py:36(handle_timeout)
        1    0.000    0.000    0.000    0.000 toboggan.py:39(__enter__)
        1    0.000    0.000    0.000    0.000 signal.py:25(_int_to_enum)
        2    0.000    0.000    0.000    0.000 {built-in method _signal.alarm}
        1    0.000    0.000    0.000    0.000 {built-in method _signal.signal}
       16    0.000    0.000    0.000    0.000 guess_weight.py:82(<lambda>)
        1    0.000    0.000    0.000    0.000 enum.py:215(__call__)
        1    0.000    0.000    0.000    0.000 enum.py:459(__new__)
        1    0.000    0.000    0.000    0.000 graphs.py:52(__iter__)
        1    0.000    0.000    0.000    0.000 toboggan.py:32(__init__)
        1    0.000    0.000    0.000    0.000 graphs.py:129(in_degree)
        1    0.000    0.000    0.000    0.000 {built-in method builtins.iter}
        8    0.000    0.000    0.000    0.000 guess_weight.py:74(<genexpr>)
        1    0.000    0.000    0.000    0.000 flow.py:422(__hash__)
        1    0.000    0.000    0.000    0.000 graphs.py:87(in_neighborhood)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 graphs.py:55(source)


# All_info	n_in	m_in	n_red	m_red	k_gtrue	k_cut	k_impro	k_opt	time_w	time_p
All_info	31	49	7	25	10	8	10	None	300	0
weights	
Finished instance.

# Timeout is set to 300
# Recovering paths
# Running on instances 10361
# Ground-truth available in file ../../research/instances/rnaseq/zebrafish/91.truth

File 91.graph instance 10360 name ENSDARG00000056322 with n = 40, m = 63, and truth = 13:
[(0, 9, 10), (0, 9, 1), (0, 9, 1314), (0, 9, 88), (0, 9, 563), (0, 9, 22), (9, 22, 1), (9, 22, 287), (9, 14, 313), (9, 22, 294), (9, 22, 353), (9, 22, 75), (9, 14, 1), (9, 22, 10), (9, 22, 13), (9, 14, 651), (14, 39, 1), (14, 39, 88), (14, 39, 313), (14, 39, 563), (22, 24, 761), (22, 24, 272), (24, 26, 761), (24, 26, 272), (26, 34, 17), (26, 39, 353), (26, 34, 663), (34, 36, 663), (34, 36, 17), (36, 39, 595), (36, 39, 10), (36, 39, 75)]
# Preprocessing
#	Graph has an edge cut of size 11.
#	Investigating cutsets yields bound 11.
#	User supplied k value of 1.
#	Continuing using k = 11
# Reduced instance has n = 9, m = 32, and lower_bound = 11:
Searching for minimum-sized set of weights, timeout set at 300
# 	Call guess_weight with k = 11
Timed out after 300 seconds
         130931644 function calls (130762239 primitive calls) in 300.000 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
 18541696  144.803    0.000  236.724    0.000 flow.py:553(push)
 18541696   57.992    0.000   71.238    0.000 flow.py:505(copy)
        1   50.826   50.826  300.000  300.000 dp.py:14(solve)
 18541697   20.439    0.000   20.683    0.000 flow.py:584(distribute)
 19126455   12.447    0.000   12.447    0.000 flow.py:464(add_constraint)
 18541697   10.259    0.000   10.259    0.000 flow.py:495(__init__)
 37083394    2.988    0.000    2.988    0.000 {method 'items' of 'dict' objects}
    25753    0.128    0.000    0.168    0.000 partition.py:17(visit)
142627/25754    0.044    0.000    0.243    0.000 partition.py:23(f)
76113/23593    0.031    0.000    0.201    0.000 partition.py:55(b)
   283311    0.021    0.000    0.021    0.000 {method 'append' of 'list' objects}
    25753    0.019    0.000    0.019    0.000 partition.py:18(<listcomp>)
       22    0.000    0.000    0.000    0.000 {built-in method numpy.linalg.lapack_lite.dgelsd}
       11    0.000    0.000    0.002    0.000 linalg.py:1830(lstsq)
      132    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.array}
       11    0.000    0.000    0.003    0.000 flow.py:343(add_constraint)
        1    0.000    0.000    0.000    0.000 linalg.py:296(solve)
       10    0.000    0.000    0.000    0.000 function_base.py:4740(insert)
       11    0.000    0.000    0.000    0.000 flow.py:239(__init__)
       11    0.000    0.000    0.002    0.000 flow.py:296(_test_row)
       67    0.000    0.000    0.000    0.000 defmatrix.py:314(__getitem__)
    63/51    0.000    0.000    0.000    0.000 defmatrix.py:292(__array_finalize__)
       11    0.000    0.000    0.000    0.000 {method 'reduce' of 'numpy.ufunc' objects}
       58    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.zeros}
       11    0.000    0.000    0.000    0.000 linalg.py:180(_fastCopyAndTranspose)
      197    0.000    0.000    0.000    0.000 {built-in method builtins.isinstance}
       11    0.000    0.000    0.000    0.000 {method 'dot' of 'numpy.ndarray' objects}
       24    0.000    0.000    0.000    0.000 {method 'astype' of 'numpy.ndarray' objects}
       22    0.000    0.000    0.000    0.000 {method 'copy' of 'numpy.ndarray' objects}
       34    0.000    0.000    0.000    0.000 numeric.py:463(asarray)
       22    0.000    0.000    0.000    0.000 fromnumeric.py:1364(ravel)
       11    0.000    0.000    0.000    0.000 defmatrix.py:246(__new__)
       11    0.000    0.000    0.000    0.000 fromnumeric.py:1710(sum)
       22    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray._fastCopyAndTranspose}
       22    0.000    0.000    0.000    0.000 {method 'ravel' of 'numpy.ndarray' objects}
       56    0.000    0.000    0.000    0.000 {built-in method builtins.min}
       11    0.000    0.000    0.000    0.000 linalg.py:168(_to_native_byte_order)
       24    0.000    0.000    0.000    0.000 linalg.py:106(_makearray)
       10    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.empty}
       22    0.000    0.000    0.000    0.000 numeric.py:534(asanyarray)
       12    0.000    0.000    0.000    0.000 linalg.py:139(_commonType)
       25    0.000    0.000    0.000    0.000 {built-in method builtins.max}
        1    0.000    0.000    0.000    0.000 flow.py:211(has_bad_bounds)
        1    0.000    0.000  300.000  300.000 toboggan.py:77(find_opt_size)
       22    0.000    0.000    0.000    0.000 {method 'transpose' of 'numpy.ndarray' objects}
       10    0.000    0.000    0.000    0.000 {method '__array_wrap__' of 'numpy.ndarray' objects}
       10    0.000    0.000    0.000    0.000 numeric.py:1490(rollaxis)
        2    0.000    0.000    0.000    0.000 twodim_base.py:139(eye)
        1    0.000    0.000  300.000  300.000 guess_weight.py:62(solve)
       11    0.000    0.000    0.000    0.000 _methods.py:31(_sum)
       11    0.000    0.000    0.000    0.000 {method 'view' of 'numpy.ndarray' objects}
       11    0.000    0.000    0.000    0.000 linalg.py:192(_assertRank2)
      116    0.000    0.000    0.000    0.000 {built-in method builtins.len}
       35    0.000    0.000    0.000    0.000 {built-in method builtins.hash}
        3    0.000    0.000    0.000    0.000 {built-in method builtins.print}
       47    0.000    0.000    0.000    0.000 {built-in method builtins.issubclass}
       11    0.000    0.000    0.000    0.000 {built-in method math.log}
       23    0.000    0.000    0.000    0.000 linalg.py:111(isComplexType)
        1    0.000    0.000    0.000    0.000 partition.py:15(algorithm_u)
        1    0.000    0.000    0.000    0.000 graphs.py:67(labeled_neighborhood)
        1    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.arange}
       24    0.000    0.000    0.000    0.000 {built-in method builtins.getattr}
        1    0.000    0.000    0.000    0.000 signal.py:45(signal)
        1    0.000    0.000    0.000    0.000 toboggan.py:39(__enter__)
        2    0.000    0.000    0.000    0.000 signal.py:35(_enum_to_int)
        1    0.000    0.000    0.000    0.000 flow.py:431(__init__)
        3    0.000    0.000    0.000    0.000 {method 'format' of 'str' objects}
       11    0.000    0.000    0.000    0.000 linalg.py:124(_realType)
        1    0.000    0.000    0.000    0.000 flow.py:550(__hash__)
        2    0.000    0.000    0.000    0.000 numeric.py:2160(isscalar)
       21    0.000    0.000    0.000    0.000 {method 'tobytes' of 'memoryview' objects}
        1    0.000    0.000    0.000    0.000 graphs.py:52(__iter__)
       10    0.000    0.000    0.000    0.000 guess_weight.py:74(<genexpr>)
       23    0.000    0.000    0.000    0.000 {method '__array_prepare__' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 toboggan.py:44(__exit__)
        1    0.000    0.000    0.000    0.000 enum.py:215(__call__)
        1    0.000    0.000    0.000    0.000 {built-in method builtins.sorted}
        1    0.000    0.000    0.000    0.000 fromnumeric.py:1143(squeeze)
        1    0.000    0.000    0.000    0.000 toboggan.py:36(handle_timeout)
       10    0.000    0.000    0.000    0.000 {method 'item' of 'numpy.ndarray' objects}
        2    0.000    0.000    0.000    0.000 {built-in method _signal.alarm}
       12    0.000    0.000    0.000    0.000 guess_weight.py:78(<genexpr>)
        1    0.000    0.000    0.000    0.000 linalg.py:198(_assertRankAtLeast2)
        1    0.000    0.000    0.000    0.000 enum.py:459(__new__)
        1    0.000    0.000    0.000    0.000 graphs.py:129(in_degree)
        1    0.000    0.000    0.000    0.000 graphs.py:55(source)
        1    0.000    0.000    0.000    0.000 signal.py:25(_int_to_enum)
        1    0.000    0.000    0.000    0.000 toboggan.py:32(__init__)
        1    0.000    0.000    0.000    0.000 {method 'tolist' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 graphs.py:87(in_neighborhood)
        1    0.000    0.000    0.000    0.000 {built-in method _signal.signal}
        1    0.000    0.000    0.000    0.000 flow.py:488(__hash__)
        1    0.000    0.000    0.000    0.000 linalg.py:209(_assertNdSquareness)
        1    0.000    0.000    0.000    0.000 {method 'squeeze' of 'numpy.ndarray' objects}
       11    0.000    0.000    0.000    0.000 linalg.py:130(_linalgRealType)
       11    0.000    0.000    0.000    0.000 {method 'is_integer' of 'float' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
       11    0.000    0.000    0.000    0.000 {method 'get' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 linalg.py:101(get_linalg_error_extobj)
        1    0.000    0.000    0.000    0.000 {built-in method builtins.iter}


# All_info	n_in	m_in	n_red	m_red	k_gtrue	k_cut	k_impro	k_opt	time_w	time_p
All_info	40	63	9	32	13	11	11	None	300	0
weights	
Finished instance.

# Timeout is set to 300
# Recovering paths
# Running on instances 10464
# Ground-truth available in file ../../research/instances/rnaseq/zebrafish/91.truth

File 91.graph instance 10463 name ENSDARG00000028148 with n = 22, m = 31, and truth = 8:
[(0, 9, 1119), (0, 9, 334), (0, 9, 3085), (0, 9, 363), (0, 9, 303), (9, 12, 1907), (9, 12, 3297), (12, 15, 637), (12, 15, 4567), (15, 17, 2101), (15, 17, 3103), (17, 21, 3448), (17, 21, 334), (17, 21, 303), (17, 21, 1119)]
# Preprocessing
#	Graph has an edge cut of size 5.
#	Investigating cutsets yields bound 5.
#	User supplied k value of 1.
#	Continuing using k = 5
# Reduced instance has n = 6, m = 15, and lower_bound = 5:
Searching for minimum-sized set of weights, timeout set at 300
# 	Call guess_weight with k = 5
# 	Call guess_weight with k = 6
Timed out after 300 seconds
         177782657 function calls (176618283 primitive calls) in 300.000 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
  2923928   45.743    0.000   45.743    0.000 {built-in method numpy.linalg.lapack_lite.dgelsd}
  1461965   43.623    0.000  166.441    0.000 linalg.py:1830(lstsq)
 16699622   26.864    0.000   26.864    0.000 {built-in method numpy.core.multiarray.array}
  1461965   20.600    0.000  284.864    0.000 flow.py:343(add_constraint)
   832583   12.574    0.000   21.203    0.000 function_base.py:4740(insert)
  1461965   11.685    0.000  206.494    0.000 flow.py:296(_test_row)
  4617036   10.974    0.000   14.967    0.000 defmatrix.py:314(__getitem__)
8283043/7140139    8.963    0.000   10.164    0.000 defmatrix.py:292(__array_finalize__)
   543109    8.674    0.000   15.279    0.000 linalg.py:296(solve)
  1495636    7.757    0.000    7.757    0.000 {method 'reduce' of 'numpy.ufunc' objects}
  7318985    6.307    0.000    6.307    0.000 {built-in method numpy.core.multiarray.zeros}
   832885    6.061    0.000   17.273    0.000 flow.py:239(__init__)
  3292174    5.448    0.000    5.448    0.000 {method 'astype' of 'numpy.ndarray' objects}
      302    4.714    0.016  299.986    0.993 dp.py:14(solve)
  2924194    4.373    0.000   11.123    0.000 fromnumeric.py:1364(ravel)
  1142602    4.359    0.000    5.766    0.000 {method 'dot' of 'numpy.ndarray' objects}
   548315    4.264    0.000    8.648    0.000 flow.py:553(push)
 20756980    4.099    0.000    4.099    0.000 {built-in method builtins.isinstance}
  1461964    3.979    0.000   12.657    0.000 fromnumeric.py:1710(sum)
  2308103    3.642    0.000    4.276    0.000 {method 'copy' of 'numpy.ndarray' objects}
  4847858    3.474    0.000    8.585    0.000 numeric.py:463(asarray)
  1461964    3.363    0.000    8.301    0.000 linalg.py:180(_fastCopyAndTranspose)
  2923928    3.307    0.000    3.307    0.000 {built-in method numpy.core.multiarray._fastCopyAndTranspose}
  4010146    3.132    0.000   10.160    0.000 linalg.py:106(_makearray)
  2924194    3.088    0.000    3.088    0.000 {method 'ravel' of 'numpy.ndarray' objects}
  2005073    2.782    0.000    3.356    0.000 linalg.py:139(_commonType)
  7852945    2.438    0.000    2.438    0.000 {built-in method builtins.min}
   547894    2.300    0.000    2.943    0.000 flow.py:505(copy)
  2927519    2.211    0.000    2.725    0.000 numeric.py:534(asanyarray)
  1461964    2.134    0.000    2.818    0.000 linalg.py:168(_to_native_byte_order)
  2923930    1.952    0.000    3.532    0.000 {method 'transpose' of 'numpy.ndarray' objects}
   832885    1.453    0.000    8.272    0.000 defmatrix.py:246(__new__)
   548315    1.376    0.000    1.441    0.000 flow.py:584(distribute)
  1461964    1.346    0.000    1.512    0.000 linalg.py:192(_assertRank2)
 12773040    1.269    0.000    1.269    0.000 {built-in method builtins.len}
  3467037    1.234    0.000    1.789    0.000 linalg.py:111(isComplexType)
  3467432    1.218    0.000    1.218    0.000 {built-in method builtins.max}
   832583    1.189    0.000    1.189    0.000 numeric.py:1490(rollaxis)
  7486019    1.136    0.000    1.136    0.000 {built-in method builtins.issubclass}
   846318    0.964    0.000    4.571    0.000 {method 'view' of 'numpy.ndarray' objects}
   832583    0.888    0.000    1.842    0.000 {method '__array_wrap__' of 'numpy.ndarray' objects}
   832762    0.884    0.000    0.884    0.000 {built-in method numpy.core.multiarray.empty}
   853261    0.860    0.000    0.999    0.000 numeric.py:2160(isscalar)
  4195564    0.814    0.000    0.814    0.000 {built-in method builtins.getattr}
  1461964    0.769    0.000    0.769    0.000 {built-in method math.log}
  1461964    0.724    0.000    1.024    0.000 linalg.py:124(_realType)
  1466561    0.687    0.000    8.334    0.000 _methods.py:31(_sum)
  2704365    0.669    0.000    0.669    0.000 {built-in method builtins.hash}
   543109    0.664    0.000    1.020    0.000 linalg.py:209(_assertNdSquareness)
   543109    0.608    0.000    0.608    0.000 {method 'squeeze' of 'numpy.ndarray' objects}
   543109    0.560    0.000    1.168    0.000 fromnumeric.py:1143(squeeze)
  2977926    0.555    0.000    0.555    0.000 {method 'append' of 'list' objects}
   543109    0.537    0.000    0.537    0.000 linalg.py:101(get_linalg_error_extobj)
   548497    0.502    0.000    0.502    0.000 flow.py:495(__init__)
   543109    0.458    0.000    0.510    0.000 linalg.py:198(_assertRankAtLeast2)
   358986    0.401    0.000    0.401    0.000 linalg.py:89(_raise_linalgerror_singular)
  1665468    0.339    0.000    0.339    0.000 {method 'tobytes' of 'memoryview' objects}
  3108051    0.323    0.000    0.323    0.000 {method '__array_prepare__' of 'numpy.ndarray' objects}
  1464174    0.300    0.000    0.300    0.000 {method 'get' of 'dict' objects}
   102391    0.237    0.000    0.276    0.000 flow.py:431(__init__)
      179    0.226    0.001    1.555    0.009 _linprog.py:212(_solve_simplex)
   832583    0.182    0.000    0.182    0.000 {method 'item' of 'numpy.ndarray' objects}
  1461964    0.176    0.000    0.176    0.000 linalg.py:130(_linalgRealType)
    17897    0.156    0.000    0.393    0.000 core.py:2913(__array_finalize__)
  1098524    0.142    0.000    0.142    0.000 {method 'items' of 'dict' objects}
   184123    0.111    0.000    0.111    0.000 {method 'tolist' of 'numpy.ndarray' objects}
   116135    0.110    0.000    0.110    0.000 flow.py:464(add_constraint)
    20106    0.105    0.000    0.211    0.000 core.py:2887(_update_from)
   757245    0.073    0.000    0.073    0.000 {method 'is_integer' of 'float' objects}
     2209    0.064    0.000    0.247    0.000 core.py:1157(__call__)
38366/31560    0.049    0.000    0.115    0.000 core.py:3320(__setattr__)
    13300    0.047    0.000    0.233    0.000 core.py:3639(filled)
     2209    0.040    0.000    0.845    0.000 _linprog.py:173(_pivot_row)
    15596    0.037    0.000    0.037    0.000 {built-in method numpy.core.multiarray.copyto}
     8178    0.036    0.000    0.047    0.000 partition.py:17(visit)
     6806    0.034    0.000    0.072    0.000 core.py:3351(__setmask__)
      133    0.032    0.000    1.622    0.012 _linprog.py:391(_linprog_simplex)
    13300    0.031    0.000    0.066    0.000 core.py:440(_check_fill_value)
     2388    0.025    0.000    0.482    0.000 _linprog.py:137(_pivot_col)
     4418    0.025    0.000    0.211    0.000 core.py:3893(__eq__)
     6806    0.024    0.000    0.349    0.000 core.py:1810(masked_where)
     2209    0.022    0.000    0.051    0.000 core.py:848(__call__)
    22315    0.022    0.000    0.022    0.000 core.py:3540(_get_data)
    98321    0.022    0.000    0.022    0.000 {method 'update' of 'dict' objects}
     4597    0.022    0.000    0.058    0.000 core.py:4289(count)
     4418    0.021    0.000    0.297    0.000 core.py:5460(min)
    13612    0.020    0.000    0.027    0.000 core.py:1308(make_mask_descr)
    22494    0.019    0.000    0.019    0.000 {built-in method builtins.hasattr}
     8836    0.016    0.000    0.039    0.000 numeric.py:2686(seterr)
     8836    0.015    0.000    0.016    0.000 numeric.py:2786(geterr)
     4418    0.015    0.000    0.114    0.000 {method 'view' of 'numpy.generic' objects}
     6806    0.014    0.000    0.078    0.000 core.py:1531(make_mask)
20899/8599    0.013    0.000    0.063    0.000 partition.py:23(f)
    20239    0.012    0.000    0.096    0.000 {method 'any' of 'numpy.ndarray' objects}
     4418    0.009    0.000    0.017    0.000 numerictypes.py:603(obj2sctype)
     1642    0.009    0.000    0.009    0.000 guess_weight.py:43(is_feasible)
    20239    0.008    0.000    0.083    0.000 _methods.py:37(_any)
    11224    0.008    0.000    0.095    0.000 core.py:599(filled)
     2209    0.008    0.000    0.012    0.000 core.py:645(get_masked_subclass)
     6806    0.008    0.000    0.029    0.000 core.py:1626(make_mask_none)
     4418    0.007    0.000    0.094    0.000 core.py:6951(where)
     3192    0.006    0.000    0.010    0.000 shape_base.py:61(atleast_2d)
     8178    0.006    0.000    0.006    0.000 partition.py:18(<listcomp>)
     3192    0.006    0.000    0.006    0.000 {built-in method numpy.core.multiarray.concatenate}
     4418    0.006    0.000    0.028    0.000 core.py:242(_recursive_extremum_fill_value)
     4418    0.005    0.000    0.023    0.000 numeric.py:3088(__exit__)
     8836    0.005    0.000    0.005    0.000 {built-in method numpy.core.umath.seterrobj}
     1365    0.005    0.000    0.008    0.000 flow.py:441(is_redundant)
     4418    0.005    0.000    0.022    0.000 numerictypes.py:774(__getitem__)
     4418    0.005    0.000    0.026    0.000 numeric.py:3083(__enter__)
     4597    0.005    0.000    0.030    0.000 {method 'sum' of 'numpy.ndarray' objects}
    13612    0.005    0.000    0.005    0.000 core.py:1287(_recursive_make_descr)
     2209    0.005    0.000    0.253    0.000 core.py:4023(__truediv__)
     4418    0.005    0.000    0.027    0.000 core.py:1798(_check_mask_axis)
     4418    0.004    0.000    0.004    0.000 {method 'nonzero' of 'numpy.ndarray' objects}
        2    0.004    0.002  300.000  150.000 guess_weight.py:62(solve)
     4418    0.004    0.000    0.024    0.000 {method 'min' of 'numpy.ndarray' objects}
     4418    0.004    0.000    0.005    0.000 numeric.py:3079(__init__)
     4418    0.004    0.000    0.033    0.000 core.py:253(minimum_fill_value)
     2209    0.004    0.000    0.004    0.000 {built-in method numpy.core.multiarray.can_cast}
     4418    0.003    0.000    0.023    0.000 {method 'all' of 'numpy.ndarray' objects}
5680/3316    0.003    0.000    0.019    0.000 partition.py:55(b)
    17672    0.003    0.000    0.003    0.000 {built-in method numpy.core.umath.geterrobj}
     2209    0.002    0.000    0.002    0.000 core.py:659(<listcomp>)
     4418    0.002    0.000    0.006    0.000 core.py:672(getdata)
     4623    0.002    0.000    0.002    0.000 flow.py:444(<genexpr>)
     4418    0.002    0.000    0.020    0.000 _methods.py:40(_all)
     4418    0.002    0.000    0.020    0.000 _methods.py:28(_amin)
      171    0.002    0.000    1.627    0.010 flow.py:261(is_redundant)
     1596    0.002    0.000    0.017    0.000 shape_base.py:180(vstack)
     1230    0.002    0.000    0.002    0.000 flow.py:550(__hash__)
     1596    0.002    0.000    0.012    0.000 shape_base.py:234(<listcomp>)
     4418    0.002    0.000    0.002    0.000 core.py:1344(getmask)
      421    0.001    0.000    0.001    0.000 partition.py:15(algorithm_u)
      421    0.001    0.000    0.001    0.000 graphs.py:67(labeled_neighborhood)
     2209    0.001    0.000    0.001    0.000 core.py:3883(_delegate_binop)
     1536    0.001    0.000    0.003    0.000 {built-in method builtins.all}
     4418    0.001    0.000    0.001    0.000 {method 'pop' of 'dict' objects}
     1812    0.001    0.000    0.002    0.000 graphs.py:126(out_degree)
      302    0.001    0.000    0.003    0.000 graphs.py:61(sink)
     4418    0.001    0.000    0.001    0.000 {method 'count' of 'tuple' objects}
      133    0.001    0.000    1.622    0.012 _linprog.py:824(linprog)
       46    0.001    0.000    0.001    0.000 function_base.py:4538(delete)
     2274    0.001    0.000    0.001    0.000 {built-in method builtins.sum}
     1812    0.001    0.000    0.001    0.000 graphs.py:84(out_neighborhood)
      133    0.001    0.000    0.001    0.000 index_tricks.py:665(fill_diagonal)
     1818    0.000    0.000    0.000    0.000 graphs.py:78(neighborhood)
       46    0.000    0.000    0.002    0.000 core.py:2753(__new__)
       46    0.000    0.000    0.000    0.000 _linprog.py:325(<listcomp>)
      303    0.000    0.000    0.001    0.000 graphs.py:55(source)
      606    0.000    0.000    0.000    0.000 graphs.py:52(__iter__)
      133    0.000    0.000    0.001    0.000 fromnumeric.py:1866(any)
      303    0.000    0.000    0.000    0.000 graphs.py:129(in_degree)
      542    0.000    0.000    0.000    0.000 flow.py:265(<genexpr>)
       46    0.000    0.000    0.002    0.000 core.py:6155(array)
      133    0.000    0.000    0.001    0.000 numeric.py:150(ones)
       73    0.000    0.000    0.000    0.000 flow.py:533(__eq__)
      171    0.000    0.000    0.000    0.000 flow.py:264(<listcomp>)
      606    0.000    0.000    0.000    0.000 {built-in method builtins.iter}
      303    0.000    0.000    0.000    0.000 graphs.py:87(in_neighborhood)
      347    0.000    0.000    0.000    0.000 flow.py:422(__hash__)
      207    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
      133    0.000    0.000    0.000    0.000 optimize.py:112(__getattr__)
      133    0.000    0.000    0.000    0.000 numeric.py:380(count_nonzero)
      133    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.count_nonzero}
      133    0.000    0.000    0.000    0.000 {built-in method builtins.abs}
       46    0.000    0.000    0.000    0.000 core.py:3562(get_fill_value)
      133    0.000    0.000    0.000    0.000 {method 'lower' of 'str' objects}
      162    0.000    0.000    0.000    0.000 flow.py:488(__hash__)
       46    0.000    0.000    0.000    0.000 {method 'indices' of 'slice' objects}
      133    0.000    0.000    0.000    0.000 optimize.py:137(_check_unknown_options)
        1    0.000    0.000  300.000  300.000 toboggan.py:77(find_opt_size)
        2    0.000    0.000    0.000    0.000 flow.py:211(has_bad_bounds)
        4    0.000    0.000    0.000    0.000 twodim_base.py:139(eye)
        1    0.000    0.000    0.000    0.000 flow.py:60(_compute_max_weight_bounds)
        2    0.000    0.000    0.000    0.000 _linprog.py:327(<listcomp>)
       46    0.000    0.000    0.000    0.000 index_tricks.py:650(__getitem__)
        1    0.000    0.000    0.000    0.000 flow.py:81(_compute_weight_bounds)
        4    0.000    0.000    0.000    0.000 {built-in method builtins.print}
        2    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.arange}
        2    0.000    0.000    0.000    0.000 signal.py:35(_enum_to_int)
        4    0.000    0.000    0.000    0.000 {method 'format' of 'str' objects}
        1    0.000    0.000    0.000    0.000 signal.py:45(signal)
        1    0.000    0.000    0.000    0.000 toboggan.py:39(__enter__)
        1    0.000    0.000    0.000    0.000 flow.py:198(try_larger_k)
       14    0.000    0.000    0.000    0.000 guess_weight.py:74(<genexpr>)
        1    0.000    0.000    0.000    0.000 enum.py:215(__call__)
        1    0.000    0.000    0.000    0.000 toboggan.py:36(handle_timeout)
        1    0.000    0.000    0.000    0.000 getlimits.py:96(__new__)
        1    0.000    0.000    0.000    0.000 {built-in method builtins.sorted}
        2    0.000    0.000    0.000    0.000 {built-in method _signal.alarm}
        1    0.000    0.000    0.000    0.000 signal.py:25(_int_to_enum)
        1    0.000    0.000    0.000    0.000 toboggan.py:44(__exit__)
        1    0.000    0.000    0.000    0.000 {built-in method _signal.signal}
        1    0.000    0.000    0.000    0.000 enum.py:459(__new__)
        1    0.000    0.000    0.000    0.000 flow.py:72(<dictcomp>)
        1    0.000    0.000    0.000    0.000 flow.py:97(<listcomp>)
       12    0.000    0.000    0.000    0.000 guess_weight.py:82(<lambda>)
        6    0.000    0.000    0.000    0.000 guess_weight.py:78(<genexpr>)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 flow.py:101(<listcomp>)
        1    0.000    0.000    0.000    0.000 toboggan.py:32(__init__)


# All_info	n_in	m_in	n_red	m_red	k_gtrue	k_cut	k_impro	k_opt	time_w	time_p
All_info	22	31	6	15	8	5	5	None	300	0
weights	
Finished instance.

# Timeout is set to 300
# Recovering paths
# Running on instances 8894
# Ground-truth available in file ../../research/instances/rnaseq/zebrafish/28.truth

File 28.graph instance 8893 name ENSDARG00000044062 with n = 31, m = 49, and truth = 9:
[(0, 17, 17), (0, 6, 1), (0, 4, 4), (0, 4, 1036), (0, 4, 2), (0, 4, 1), (0, 17, 668), (0, 17, 272), (4, 6, 286), (4, 17, 757), (6, 17, 5), (6, 17, 282), (17, 30, 17), (17, 22, 757), (17, 22, 2), (17, 27, 668), (17, 22, 4), (17, 30, 1), (17, 27, 280), (17, 27, 272), (22, 30, 756), (22, 30, 7), (27, 30, 272), (27, 30, 280), (27, 30, 668)]
# Preprocessing
#	Graph has an edge cut of size 8.
#	Investigating cutsets yields bound 8.
#	User supplied k value of 1.
#	Continuing using k = 8
# Reduced instance has n = 7, m = 25, and lower_bound = 8:
Searching for minimum-sized set of weights, timeout set at 300
# 	Call guess_weight with k = 8
# 	Call guess_weight with k = 9
Number of 1s is 2
# Weights computation took 132.32 seconds
# Solution: {SolvedConstr (1, 1, 2, 4, 17, 272, 280, 668, 756)}
         61482292 function calls (61481645 primitive calls) in 132.323 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
  8709262   63.906    0.000  104.374    0.000 flow.py:553(push)
  8709248   24.777    0.000   30.659    0.000 flow.py:505(copy)
        5   23.091    4.618  132.318   26.464 dp.py:14(solve)
  8709262    9.806    0.000    9.809    0.000 flow.py:584(distribute)
  9213632    4.843    0.000    4.843    0.000 flow.py:464(add_constraint)
  8709258    4.537    0.000    4.537    0.000 flow.py:495(__init__)
 17418562    1.345    0.000    1.345    0.000 {method 'items' of 'dict' objects}
      573    0.003    0.000    0.003    0.000 guess_weight.py:43(is_feasible)
       90    0.002    0.000    0.002    0.000 {built-in method numpy.linalg.lapack_lite.dgelsd}
       45    0.001    0.000    0.006    0.000 linalg.py:1830(lstsq)
      276    0.001    0.000    0.002    0.000 partition.py:17(visit)
        2    0.001    0.001  132.323   66.161 guess_weight.py:62(solve)
      541    0.001    0.000    0.001    0.000 {built-in method numpy.core.multiarray.array}
       45    0.001    0.000    0.010    0.000 flow.py:343(add_constraint)
       40    0.001    0.000    0.001    0.000 function_base.py:4740(insert)
  876/290    0.000    0.000    0.002    0.000 partition.py:23(f)
       45    0.000    0.000    0.001    0.000 flow.py:239(__init__)
      227    0.000    0.000    0.000    0.000 defmatrix.py:314(__getitem__)
       45    0.000    0.000    0.006    0.000 flow.py:296(_test_row)
  283/230    0.000    0.000    0.000    0.000 defmatrix.py:292(__array_finalize__)
       45    0.000    0.000    0.000    0.000 {method 'reduce' of 'numpy.ufunc' objects}
     1099    0.000    0.000    0.000    0.000 {built-in method builtins.sum}
     2377    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
      228    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.zeros}
      276    0.000    0.000    0.000    0.000 partition.py:18(<listcomp>)
      100    0.000    0.000    0.000    0.000 {method 'astype' of 'numpy.ndarray' objects}
       48    0.000    0.000    0.000    0.000 {method 'dot' of 'numpy.ndarray' objects}
       90    0.000    0.000    0.000    0.000 {method 'copy' of 'numpy.ndarray' objects}
      791    0.000    0.000    0.000    0.000 {built-in method builtins.isinstance}
       90    0.000    0.000    0.000    0.000 fromnumeric.py:1364(ravel)
        5    0.000    0.000    0.000    0.000 linalg.py:296(solve)
       45    0.000    0.000    0.000    0.000 fromnumeric.py:1710(sum)
       45    0.000    0.000    0.000    0.000 linalg.py:180(_fastCopyAndTranspose)
     1721    0.000    0.000    0.000    0.000 {built-in method builtins.len}
      140    0.000    0.000    0.000    0.000 numeric.py:463(asarray)
       90    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray._fastCopyAndTranspose}
       90    0.000    0.000    0.000    0.000 {method 'ravel' of 'numpy.ndarray' objects}
       45    0.000    0.000    0.001    0.000 defmatrix.py:246(__new__)
      100    0.000    0.000    0.000    0.000 linalg.py:106(_makearray)
      256    0.000    0.000    0.000    0.000 {built-in method builtins.min}
       50    0.000    0.000    0.000    0.000 linalg.py:139(_commonType)
       45    0.000    0.000    0.000    0.000 linalg.py:168(_to_native_byte_order)
       90    0.000    0.000    0.000    0.000 numeric.py:534(asanyarray)
       90    0.000    0.000    0.000    0.000 {method 'transpose' of 'numpy.ndarray' objects}
       45    0.000    0.000    0.000    0.000 {method 'view' of 'numpy.ndarray' objects}
       14    0.000    0.000    0.000    0.000 partition.py:15(algorithm_u)
       40    0.000    0.000    0.000    0.000 numeric.py:1490(rollaxis)
       45    0.000    0.000    0.000    0.000 linalg.py:192(_assertRank2)
      172    0.000    0.000    0.000    0.000 {built-in method builtins.max}
       40    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.empty}
      176    0.000    0.000    0.000    0.000 {built-in method builtins.hash}
       14    0.000    0.000    0.000    0.000 graphs.py:67(labeled_neighborhood)
       40    0.000    0.000    0.000    0.000 {method '__array_wrap__' of 'numpy.ndarray' objects}
       36    0.000    0.000    0.000    0.000 flow.py:550(__hash__)
       12    0.000    0.000    0.000    0.000 flow.py:441(is_redundant)
       95    0.000    0.000    0.000    0.000 linalg.py:111(isComplexType)
      195    0.000    0.000    0.000    0.000 {built-in method builtins.issubclass}
        1    0.000    0.000    0.000    0.000 flow.py:60(_compute_max_weight_bounds)
    48/40    0.000    0.000    0.000    0.000 partition.py:55(b)
      108    0.000    0.000    0.000    0.000 flow.py:444(<genexpr>)
       45    0.000    0.000    0.000    0.000 linalg.py:124(_realType)
        1    0.000    0.000  132.323  132.323 toboggan.py:77(find_opt_size)
       45    0.000    0.000    0.000    0.000 {built-in method math.log}
       13    0.000    0.000    0.000    0.000 numeric.py:2160(isscalar)
       42    0.000    0.000    0.000    0.000 graphs.py:126(out_degree)
        6    0.000    0.000    0.000    0.000 graphs.py:61(sink)
       45    0.000    0.000    0.000    0.000 _methods.py:31(_sum)
        6    0.000    0.000    0.000    0.000 {built-in method builtins.print}
       49    0.000    0.000    0.000    0.000 graphs.py:78(neighborhood)
      100    0.000    0.000    0.000    0.000 {built-in method builtins.getattr}
       95    0.000    0.000    0.000    0.000 {method '__array_prepare__' of 'numpy.ndarray' objects}
       85    0.000    0.000    0.000    0.000 {method 'tobytes' of 'memoryview' objects}
        2    0.000    0.000    0.000    0.000 flow.py:211(has_bad_bounds)
        1    0.000    0.000    0.000    0.000 flow.py:81(_compute_weight_bounds)
       40    0.000    0.000    0.000    0.000 {method 'item' of 'numpy.ndarray' objects}
        5    0.000    0.000    0.000    0.000 flow.py:431(__init__)
       12    0.000    0.000    0.000    0.000 {built-in method builtins.all}
        2    0.000    0.000    0.000    0.000 twodim_base.py:139(eye)
       42    0.000    0.000    0.000    0.000 graphs.py:84(out_neighborhood)
        5    0.000    0.000    0.000    0.000 {method 'format' of 'str' objects}
       13    0.000    0.000    0.000    0.000 graphs.py:52(__iter__)
        6    0.000    0.000    0.000    0.000 graphs.py:55(source)
        5    0.000    0.000    0.000    0.000 linalg.py:209(_assertNdSquareness)
        5    0.000    0.000    0.000    0.000 fromnumeric.py:1143(squeeze)
        3    0.000    0.000    0.000    0.000 flow.py:533(__eq__)
       45    0.000    0.000    0.000    0.000 {method 'get' of 'dict' objects}
        5    0.000    0.000    0.000    0.000 linalg.py:101(get_linalg_error_extobj)
        1    0.000    0.000    0.000    0.000 flow.py:198(try_larger_k)
       12    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
        5    0.000    0.000    0.000    0.000 {method 'tolist' of 'numpy.ndarray' objects}
        6    0.000    0.000    0.000    0.000 graphs.py:129(in_degree)
        1    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.arange}
       13    0.000    0.000    0.000    0.000 guess_weight.py:99(<genexpr>)
        1    0.000    0.000    0.000    0.000 signal.py:45(signal)
        5    0.000    0.000    0.000    0.000 {method 'squeeze' of 'numpy.ndarray' objects}
        2    0.000    0.000    0.000    0.000 signal.py:35(_enum_to_int)
       17    0.000    0.000    0.000    0.000 flow.py:488(__hash__)
        2    0.000    0.000    0.000    0.000 {built-in method _signal.alarm}
        5    0.000    0.000    0.000    0.000 linalg.py:198(_assertRankAtLeast2)
        1    0.000    0.000    0.000    0.000 flow.py:438(__repr__)
        1    0.000    0.000    0.000    0.000 toboggan.py:39(__enter__)
        1    0.000    0.000    0.000    0.000 enum.py:215(__call__)
        8    0.000    0.000    0.000    0.000 guess_weight.py:74(<genexpr>)
        1    0.000    0.000    0.000    0.000 signal.py:25(_int_to_enum)
       14    0.000    0.000    0.000    0.000 guess_weight.py:82(<lambda>)
        1    0.000    0.000    0.000    0.000 {built-in method _signal.signal}
       13    0.000    0.000    0.000    0.000 {built-in method builtins.iter}
       45    0.000    0.000    0.000    0.000 linalg.py:130(_linalgRealType)
        1    0.000    0.000    0.000    0.000 enum.py:459(__new__)
        1    0.000    0.000    0.000    0.000 toboggan.py:44(__exit__)
        6    0.000    0.000    0.000    0.000 graphs.py:87(in_neighborhood)
        1    0.000    0.000    0.000    0.000 toboggan.py:32(__init__)
        1    0.000    0.000    0.000    0.000 {built-in method time.time}
        1    0.000    0.000    0.000    0.000 flow.py:72(<dictcomp>)
        1    0.000    0.000    0.000    0.000 flow.py:97(<listcomp>)
       45    0.000    0.000    0.000    0.000 {method 'is_integer' of 'float' objects}
        1    0.000    0.000    0.000    0.000 flow.py:101(<listcomp>)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 guess_weight.py:101(<listcomp>)


#	Now recovering the 9 paths in the solution (1, 1, 2, 4, 17, 272, 280, 668, 756)
# Recovery took 35.22 seconds
# Paths, weights pass test: flow decomposition confirmed.
# Solutions:
# 	Path with weight = 1
# 	[0, 1, 2, 3, 4, 8, 9, 10, 11, 12, 14, 15, 16, 17, 22, 30]
# 	Path with weight = 1
# 	[0, 6, 8, 9, 10, 11, 12, 14, 15, 16, 17, 24, 30]
# 	Path with weight = 2
# 	[0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 19, 21, 22, 30]
# 	Path with weight = 4
# 	[0, 4, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 17, 19, 20, 21, 22, 30]
# 	Path with weight = 17
# 	[0, 11, 12, 14, 15, 16, 17, 18, 30]
# 	Path with weight = 272
# 	[0, 13, 14, 15, 16, 17, 24, 25, 26, 27, 30]
# 	Path with weight = 280
# 	[0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 24, 25, 27, 28, 29, 30]
# 	Path with weight = 668
# 	[0, 15, 16, 17, 27, 28, 30]
# 	Path with weight = 756
# 	[0, 3, 4, 8, 9, 10, 11, 12, 14, 15, 16, 17, 22, 23, 30]
# All_info	n_in	m_in	n_red	m_red	k_gtrue	k_cut	k_impro	k_opt	time_w	time_p
All_info	31	49	7	25	9	8	8	9	132.32473874092102	35.21851086616516
weights	 1 1 2 4 17 272 280 668 756
Finished instance.

# Timeout is set to 300
# Recovering paths
# Running on instances 10247
# Ground-truth available in file ../../research/instances/rnaseq/zebrafish/28.truth

File 28.graph instance 10246 name ENSDARG00000056322 with n = 40, m = 62, and truth = 12:
[(0, 3, 821), (0, 3, 273), (0, 11, 24), (0, 3, 123), (0, 11, 1044), (0, 11, 65), (3, 11, 273), (3, 11, 821), (3, 11, 123), (11, 16, 352), (11, 23, 254), (11, 39, 273), (11, 23, 141), (11, 23, 1), (11, 16, 1117), (11, 23, 24), (11, 16, 188), (16, 39, 821), (16, 39, 65), (16, 39, 123), (16, 39, 648), (23, 25, 297), (23, 25, 123), (25, 27, 297), (25, 27, 123), (27, 35, 2), (27, 39, 1), (27, 35, 417), (35, 37, 2), (35, 37, 417), (37, 39, 24), (37, 39, 395)]
# Preprocessing
#	Graph has an edge cut of size 8.
#	Investigating cutsets yields bound 10.
#	User supplied k value of 1.
#	Continuing using k = 10
# Reduced instance has n = 10, m = 32, and lower_bound = 10:
Searching for minimum-sized set of weights, timeout set at 300
# 	Call guess_weight with k = 10
Number of 1s is 1
Timed out after 300 seconds
         86999264 function calls (86994000 primitive calls) in 300.000 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
   639376   82.412    0.000   95.898    0.000 linalg.py:296(solve)
  1278772   41.986    0.000   41.986    0.000 {built-in method numpy.linalg.lapack_lite.dgelsd}
   639386   30.154    0.000  127.392    0.000 linalg.py:1830(lstsq)
   639386   18.724    0.000  266.348    0.000 flow.py:296(_test_row)
  7033253   16.893    0.000   16.893    0.000 {built-in method numpy.core.multiarray.array}
   639378   10.541    0.000   18.107    0.000 flow.py:553(push)
  1278807    8.744    0.000   12.797    0.000 defmatrix.py:314(__getitem__)
  2557524    7.135    0.000    7.135    0.000 {method 'astype' of 'numpy.ndarray' objects}
        1    5.982    5.982  299.983  299.983 dp.py:14(solve)
   639386    5.128    0.000  274.921    0.000 flow.py:343(add_constraint)
   639386    4.805    0.000    4.805    0.000 {method 'reduce' of 'numpy.ufunc' objects}
  3196933    4.781    0.000    4.781    0.000 {built-in method numpy.core.multiarray.zeros}
   639377    4.555    0.000    5.620    0.000 flow.py:505(copy)
  2557524    3.345    0.000   10.870    0.000 linalg.py:106(_makearray)
2557560/2557549    3.316    0.000    3.972    0.000 defmatrix.py:292(__array_finalize__)
  1278772    3.095    0.000    7.924    0.000 fromnumeric.py:1364(ravel)
  2557533    2.920    0.000    6.728    0.000 numeric.py:463(asarray)
  1278772    2.826    0.000    2.826    0.000 {built-in method numpy.core.multiarray._fastCopyAndTranspose}
  1278762    2.777    0.000    3.343    0.000 linalg.py:139(_commonType)
   639386    2.737    0.000    8.287    0.000 fromnumeric.py:1710(sum)
   639386    2.579    0.000    6.846    0.000 linalg.py:180(_fastCopyAndTranspose)
  1278772    2.273    0.000    2.273    0.000 {method 'ravel' of 'numpy.ndarray' objects}
   639376    2.191    0.000    2.597    0.000 flow.py:431(__init__)
  3836307    1.970    0.000    1.970    0.000 {built-in method builtins.min}
  6393931    1.942    0.000    1.942    0.000 {built-in method builtins.isinstance}
   639378    1.930    0.000    1.946    0.000 flow.py:584(distribute)
   639386    1.753    0.000    2.210    0.000 linalg.py:168(_to_native_byte_order)
  1278772    1.629    0.000    1.977    0.000 numeric.py:534(asanyarray)
  1278772    1.523    0.000    2.741    0.000 {method 'transpose' of 'numpy.ndarray' objects}
   639396    1.404    0.000    1.404    0.000 {method 'copy' of 'numpy.ndarray' objects}
   639376    1.282    0.000    1.986    0.000 linalg.py:209(_assertNdSquareness)
  1918150    1.182    0.000    1.182    0.000 {built-in method builtins.max}
   639376    1.091    0.000    1.091    0.000 {method 'squeeze' of 'numpy.ndarray' objects}
  4475672    1.045    0.000    1.045    0.000 {built-in method builtins.issubclass}
  1918148    1.030    0.000    1.510    0.000 linalg.py:111(isComplexType)
   639376    1.020    0.000    2.111    0.000 fromnumeric.py:1143(squeeze)
   639386    1.007    0.000    1.127    0.000 linalg.py:192(_assertRank2)
   653992    0.973    0.000    0.973    0.000 flow.py:464(add_constraint)
   639376    0.920    0.000    0.920    0.000 linalg.py:101(get_linalg_error_extobj)
   639376    0.843    0.000    0.949    0.000 linalg.py:198(_assertRankAtLeast2)
  5119454    0.803    0.000    0.803    0.000 {built-in method builtins.len}
   639378    0.801    0.000    0.801    0.000 flow.py:495(__init__)
  2557524    0.798    0.000    0.798    0.000 {built-in method builtins.getattr}
  6393760    0.777    0.000    0.777    0.000 {method 'is_integer' of 'float' objects}
   639377    0.709    0.000    0.899    0.000 numeric.py:2160(isscalar)
   639376    0.632    0.000    0.632    0.000 {method 'tolist' of 'numpy.ndarray' objects}
   639386    0.482    0.000    5.287    0.000 _methods.py:31(_sum)
   639386    0.443    0.000    0.443    0.000 {built-in method math.log}
  1278782    0.406    0.000    0.406    0.000 {built-in method builtins.hash}
   639386    0.396    0.000    0.606    0.000 linalg.py:124(_realType)
  1287668    0.366    0.000    0.366    0.000 {method 'append' of 'list' objects}
  1918148    0.328    0.000    0.328    0.000 {method '__array_prepare__' of 'numpy.ndarray' objects}
  1278756    0.263    0.000    0.263    0.000 {method 'items' of 'dict' objects}
   639386    0.210    0.000    0.210    0.000 {method 'get' of 'dict' objects}
   639386    0.108    0.000    0.108    0.000 linalg.py:130(_linalgRealType)
     2169    0.012    0.000    0.013    0.000 guess_weight.py:43(is_feasible)
      889    0.008    0.000    0.011    0.000 partition.py:17(visit)
        1    0.004    0.004  300.000  300.000 guess_weight.py:62(solve)
 5001/890    0.003    0.000    0.016    0.000 partition.py:23(f)
 1909/767    0.002    0.000    0.012    0.000 partition.py:55(b)
      889    0.001    0.000    0.001    0.000 partition.py:18(<listcomp>)
     4091    0.001    0.000    0.001    0.000 {built-in method builtins.sum}
        9    0.000    0.000    0.000    0.000 function_base.py:4740(insert)
       10    0.000    0.000    0.000    0.000 flow.py:239(__init__)
       10    0.000    0.000    0.000    0.000 {method 'dot' of 'numpy.ndarray' objects}
        1    0.000    0.000  300.000  300.000 toboggan.py:77(find_opt_size)
       10    0.000    0.000    0.000    0.000 defmatrix.py:246(__new__)
        1    0.000    0.000    0.000    0.000 flow.py:211(has_bad_bounds)
        9    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.empty}
        2    0.000    0.000    0.000    0.000 twodim_base.py:139(eye)
       10    0.000    0.000    0.000    0.000 {method 'view' of 'numpy.ndarray' objects}
        9    0.000    0.000    0.000    0.000 numeric.py:1490(rollaxis)
        9    0.000    0.000    0.000    0.000 {method '__array_wrap__' of 'numpy.ndarray' objects}
        4    0.000    0.000    0.000    0.000 {built-in method builtins.print}
        4    0.000    0.000    0.000    0.000 {method 'format' of 'str' objects}
        2    0.000    0.000    0.000    0.000 signal.py:35(_enum_to_int)
        1    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.arange}
       15    0.000    0.000    0.000    0.000 guess_weight.py:99(<genexpr>)
        1    0.000    0.000    0.000    0.000 partition.py:15(algorithm_u)
        1    0.000    0.000    0.000    0.000 signal.py:45(signal)
        2    0.000    0.000    0.000    0.000 {built-in method _signal.alarm}
        1    0.000    0.000    0.000    0.000 graphs.py:67(labeled_neighborhood)
        1    0.000    0.000    0.000    0.000 enum.py:215(__call__)
        1    0.000    0.000    0.000    0.000 toboggan.py:39(__enter__)
       11    0.000    0.000    0.000    0.000 guess_weight.py:74(<genexpr>)
        1    0.000    0.000    0.000    0.000 flow.py:550(__hash__)
        1    0.000    0.000    0.000    0.000 toboggan.py:36(handle_timeout)
        1    0.000    0.000    0.000    0.000 toboggan.py:44(__exit__)
        9    0.000    0.000    0.000    0.000 {method 'item' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 graphs.py:52(__iter__)
       17    0.000    0.000    0.000    0.000 guess_weight.py:82(<lambda>)
       19    0.000    0.000    0.000    0.000 {method 'tobytes' of 'memoryview' objects}
        1    0.000    0.000    0.000    0.000 enum.py:459(__new__)
        1    0.000    0.000    0.000    0.000 {built-in method builtins.iter}
        1    0.000    0.000    0.000    0.000 graphs.py:129(in_degree)
        1    0.000    0.000    0.000    0.000 {built-in method _signal.signal}
        1    0.000    0.000    0.000    0.000 guess_weight.py:101(<listcomp>)
        1    0.000    0.000    0.000    0.000 signal.py:25(_int_to_enum)
        1    0.000    0.000    0.000    0.000 toboggan.py:32(__init__)
        1    0.000    0.000    0.000    0.000 graphs.py:87(in_neighborhood)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 graphs.py:55(source)
        1    0.000    0.000    0.000    0.000 flow.py:422(__hash__)


# All_info	n_in	m_in	n_red	m_red	k_gtrue	k_cut	k_impro	k_opt	time_w	time_p
All_info	40	62	10	32	12	8	10	None	300	0
weights	
Finished instance.

# Timeout is set to 300
# Recovering paths
# Running on instances 11524
# Ground-truth available in file ../../research/instances/rnaseq/zebrafish/28.truth

File 28.graph instance 11523 name ENSDARG00000004415 with n = 23, m = 30, and truth = 7:
[(0, 2, 9), (0, 15, 7), (0, 2, 517), (2, 10, 66), (2, 10, 35), (2, 10, 425), (10, 15, 81), (10, 15, 445), (15, 20, 432), (15, 20, 94), (15, 22, 7), (20, 22, 517), (20, 22, 9)]
# Preprocessing
#	Graph has an edge cut of size 4.
#	Investigating cutsets yields bound 4.
#	User supplied k value of 1.
#	Continuing using k = 4
# Reduced instance has n = 6, m = 13, and lower_bound = 4:
Searching for minimum-sized set of weights, timeout set at 300
# 	Call guess_weight with k = 4
# 	Call guess_weight with k = 5
# 	Call guess_weight with k = 6
# Weights computation took 236.55 seconds
# Solution: {SolvedConstr (7, 9, 35, 37, 57, 388)}
         145050644 function calls (143968873 primitive calls) in 236.552 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
  1152936   18.274    0.000   18.274    0.000 {built-in method numpy.linalg.lapack_lite.dgelsd}
   576468   17.165    0.000   65.702    0.000 linalg.py:1830(lstsq)
    14374   16.030    0.001  111.898    0.008 _linprog.py:212(_solve_simplex)
  9950041   13.691    0.000   13.691    0.000 {built-in method numpy.core.multiarray.array}
  3041220   12.657    0.000   12.657    0.000 {method 'reduce' of 'numpy.ufunc' objects}
  1306225   11.392    0.000   28.537    0.000 core.py:2913(__array_finalize__)
   576468    8.169    0.000  112.533    0.000 flow.py:343(add_constraint)
  1467667    7.607    0.000   15.146    0.000 core.py:2887(_update_from)
 15090544    6.789    0.000    6.789    0.000 {built-in method builtins.getattr}
   339133    5.181    0.000    8.728    0.000 function_base.py:4740(insert)
   161442    4.602    0.000   17.781    0.000 core.py:1157(__call__)
   576468    4.480    0.000   80.815    0.000 flow.py:296(_test_row)
  1475785    4.093    0.000    5.738    0.000 defmatrix.py:314(__getitem__)
3517534/3022444    3.738    0.000    4.246    0.000 defmatrix.py:292(__array_finalize__)
2789526/2290826    3.726    0.000    8.295    0.000 core.py:3320(__setattr__)
  3614025    3.638    0.000    3.638    0.000 {built-in method numpy.core.multiarray.zeros}
   968967    3.367    0.000   16.643    0.000 core.py:3639(filled)
   202703    3.256    0.000    5.712    0.000 linalg.py:296(solve)
 16830070    3.116    0.000    3.116    0.000 {built-in method builtins.isinstance}
    14059    3.109    0.000  118.135    0.008 _linprog.py:391(_linprog_simplex)
   161442    2.952    0.000   60.939    0.000 _linprog.py:173(_pivot_row)
  1144153    2.704    0.000    2.704    0.000 {built-in method numpy.core.multiarray.copyto}
  1884751    2.660    0.000    2.913    0.000 {method 'copy' of 'numpy.ndarray' objects}
   339631    2.490    0.000    7.005    0.000 flow.py:239(__init__)
   498700    2.376    0.000    5.081    0.000 core.py:3351(__setmask__)
  1322752    2.185    0.000    2.185    0.000 {method 'astype' of 'numpy.ndarray' objects}
   968967    2.083    0.000    4.616    0.000 core.py:440(_check_fill_value)
   494592    1.914    0.000    2.600    0.000 {method 'dot' of 'numpy.ndarray' objects}
   322884    1.844    0.000   15.271    0.000 core.py:3893(__eq__)
   175816    1.826    0.000   34.833    0.000 _linprog.py:137(_pivot_col)
  1322657    1.683    0.000   24.338    0.000 {method 'view' of 'numpy.ndarray' objects}
  1181054    1.670    0.000    4.425    0.000 fromnumeric.py:1364(ravel)
      498    1.668    0.003  236.536    0.475 dp.py:14(solve)
   498700    1.664    0.000   25.132    0.000 core.py:1810(masked_where)
  7176893    1.644    0.000    1.644    0.000 {method 'update' of 'dict' objects}
  2290969    1.626    0.000    3.754    0.000 numeric.py:463(asarray)
   161442    1.618    0.000    3.639    0.000 core.py:848(__call__)
  1629109    1.617    0.000    1.617    0.000 core.py:3540(_get_data)
   576468    1.575    0.000    4.975    0.000 fromnumeric.py:1710(sum)
   337258    1.552    0.000    4.154    0.000 core.py:4289(count)
   322884    1.490    0.000   21.567    0.000 core.py:5460(min)
   246710    1.380    0.000    3.546    0.000 flow.py:553(push)
   997400    1.358    0.000    1.887    0.000 core.py:1308(make_mask_descr)
  1643483    1.354    0.000    1.354    0.000 {built-in method builtins.hasattr}
   576468    1.319    0.000    3.244    0.000 linalg.py:180(_fastCopyAndTranspose)
  1152936    1.284    0.000    1.284    0.000 {built-in method numpy.core.multiarray._fastCopyAndTranspose}
  1181054    1.283    0.000    1.283    0.000 {method 'ravel' of 'numpy.ndarray' objects}
  1558342    1.233    0.000    3.986    0.000 linalg.py:106(_makearray)
   645768    1.179    0.000    2.834    0.000 numeric.py:2686(seterr)
   322884    1.117    0.000    8.292    0.000 {method 'view' of 'numpy.generic' objects}
  1519221    1.116    0.000    1.377    0.000 numeric.py:534(asanyarray)
   645768    1.108    0.000    1.167    0.000 numeric.py:2786(geterr)
   779171    1.044    0.000    1.262    0.000 linalg.py:139(_commonType)
  3559749    1.011    0.000    1.011    0.000 {built-in method builtins.issubclass}
   498700    1.002    0.000    5.582    0.000 core.py:1531(make_mask)
   245768    0.965    0.000    1.235    0.000 flow.py:505(copy)
  3085071    0.960    0.000    0.960    0.000 {built-in method builtins.min}
  1481726    0.880    0.000    6.886    0.000 {method 'any' of 'numpy.ndarray' objects}
   576468    0.850    0.000    1.106    0.000 linalg.py:168(_to_native_byte_order)
  1152936    0.762    0.000    1.380    0.000 {method 'transpose' of 'numpy.ndarray' objects}
   322884    0.703    0.000    1.267    0.000 numerictypes.py:603(obj2sctype)
   324108    0.630    0.000    1.007    0.000 shape_base.py:61(atleast_2d)
   246710    0.597    0.000    0.931    0.000 flow.py:584(distribute)
  6429708    0.596    0.000    0.596    0.000 {built-in method builtins.len}
   821584    0.592    0.000    6.771    0.000 core.py:599(filled)
   324108    0.590    0.000    0.590    0.000 {built-in method numpy.core.multiarray.concatenate}
  1481726    0.588    0.000    6.006    0.000 _methods.py:37(_any)
   339631    0.587    0.000    3.308    0.000 defmatrix.py:246(__new__)
   161442    0.552    0.000    0.806    0.000 core.py:645(get_masked_subclass)
  1384454    0.542    0.000    0.543    0.000 {built-in method builtins.max}
   576468    0.535    0.000    0.597    0.000 linalg.py:192(_assertRank2)
   498700    0.534    0.000    2.024    0.000 core.py:1626(make_mask_none)
   322884    0.516    0.000    6.660    0.000 core.py:6951(where)
   339133    0.508    0.000    0.508    0.000 numeric.py:1490(rollaxis)
  1355639    0.471    0.000    0.688    0.000 linalg.py:111(isComplexType)
   913726    0.443    0.000    5.109    0.000 _methods.py:31(_sum)
   322884    0.435    0.000    2.051    0.000 core.py:242(_recursive_extremum_fill_value)
   372221    0.386    0.000    0.449    0.000 numeric.py:2160(isscalar)
   353507    0.381    0.000    0.381    0.000 {built-in method numpy.core.multiarray.empty}
   322884    0.372    0.000    1.665    0.000 numeric.py:3088(__exit__)
   339133    0.365    0.000    0.761    0.000 {method '__array_wrap__' of 'numpy.ndarray' objects}
   645768    0.350    0.000    0.350    0.000 {built-in method numpy.core.umath.seterrobj}
   322884    0.349    0.000    1.999    0.000 core.py:1798(_check_mask_axis)
   322884    0.348    0.000    1.616    0.000 numerictypes.py:774(__getitem__)
   997400    0.333    0.000    0.333    0.000 core.py:1287(_recursive_make_descr)
   161442    0.332    0.000   18.210    0.000 core.py:4023(__truediv__)
   337258    0.328    0.000    2.175    0.000 {method 'sum' of 'numpy.ndarray' objects}
   322884    0.327    0.000    1.868    0.000 numeric.py:3083(__enter__)
   322884    0.319    0.000    0.319    0.000 {method 'nonzero' of 'numpy.ndarray' objects}
   576468    0.303    0.000    0.303    0.000 {built-in method math.log}
   322884    0.271    0.000    1.700    0.000 {method 'min' of 'numpy.ndarray' objects}
   322884    0.270    0.000    0.336    0.000 numeric.py:3079(__init__)
  1718678    0.270    0.000    0.270    0.000 {method 'append' of 'list' objects}
  1062532    0.269    0.000    0.269    0.000 {built-in method builtins.hash}
   322884    0.264    0.000    2.411    0.000 core.py:253(minimum_fill_value)
   161442    0.248    0.000    0.248    0.000 {built-in method numpy.core.multiarray.can_cast}
   202703    0.244    0.000    0.380    0.000 linalg.py:209(_assertNdSquareness)
   576468    0.238    0.000    0.367    0.000 linalg.py:124(_realType)
   322884    0.223    0.000    1.650    0.000 {method 'all' of 'numpy.ndarray' objects}
   202703    0.222    0.000    0.222    0.000 {method 'squeeze' of 'numpy.ndarray' objects}
   202703    0.217    0.000    0.438    0.000 fromnumeric.py:1143(squeeze)
   246764    0.211    0.000    0.211    0.000 flow.py:495(__init__)
  1291536    0.197    0.000    0.197    0.000 {built-in method numpy.core.umath.geterrobj}
    42022    0.185    0.000    0.232    0.000 partition.py:17(visit)
   202703    0.185    0.000    0.185    0.000 linalg.py:101(get_linalg_error_extobj)
    17395    0.184    0.000  118.673    0.007 flow.py:261(is_redundant)
   162054    0.182    0.000    1.699    0.000 shape_base.py:180(vstack)
   202703    0.171    0.000    0.190    0.000 linalg.py:198(_assertRankAtLeast2)
   737911    0.166    0.000    0.166    0.000 {method 'get' of 'dict' objects}
   322884    0.165    0.000    0.418    0.000 core.py:672(getdata)
   161442    0.163    0.000    0.163    0.000 core.py:659(<listcomp>)
   162054    0.150    0.000    1.157    0.000 shape_base.py:234(<listcomp>)
   322884    0.143    0.000    1.429    0.000 _methods.py:28(_amin)
   322884    0.140    0.000    1.427    0.000 _methods.py:40(_all)
   678764    0.137    0.000    0.137    0.000 {method 'tobytes' of 'memoryview' objects}
   117795    0.133    0.000    0.133    0.000 linalg.py:89(_raise_linalgerror_singular)
  1237844    0.128    0.000    0.128    0.000 {method '__array_prepare__' of 'numpy.ndarray' objects}
   322884    0.112    0.000    0.174    0.000 core.py:1344(getmask)
   339133    0.073    0.000    0.073    0.000 {method 'item' of 'numpy.ndarray' objects}
   161442    0.072    0.000    0.097    0.000 core.py:3883(_delegate_binop)
    14059    0.068    0.000  118.207    0.008 _linprog.py:824(linprog)
113839/42964    0.067    0.000    0.331    0.000 partition.py:23(f)
   322884    0.066    0.000    0.066    0.000 {method 'pop' of 'dict' objects}
   576468    0.061    0.000    0.061    0.000 linalg.py:130(_linalgRealType)
   496735    0.061    0.000    0.061    0.000 {method 'items' of 'dict' objects}
    90087    0.059    0.000    0.059    0.000 flow.py:464(add_constraint)
   322884    0.053    0.000    0.053    0.000 {method 'count' of 'tuple' objects}
    14059    0.053    0.000    0.053    0.000 index_tricks.py:665(fill_diagonal)
    84908    0.051    0.000    0.051    0.000 {method 'tolist' of 'numpy.ndarray' objects}
    20714    0.047    0.000    0.055    0.000 flow.py:431(__init__)
42607/25501    0.032    0.000    0.161    0.000 partition.py:55(b)
   279708    0.030    0.000    0.030    0.000 {method 'is_integer' of 'float' objects}
    42022    0.026    0.000    0.026    0.000 partition.py:18(<listcomp>)
    14059    0.025    0.000    0.127    0.000 fromnumeric.py:1866(any)
    22176    0.018    0.000    0.040    0.000 {built-in method builtins.all}
    14059    0.018    0.000    0.079    0.000 numeric.py:150(ones)
     4781    0.017    0.000    0.028    0.000 flow.py:441(is_redundant)
    46509    0.017    0.000    0.017    0.000 flow.py:265(<genexpr>)
    17395    0.014    0.000    0.014    0.000 flow.py:264(<listcomp>)
    14059    0.013    0.000    0.013    0.000 optimize.py:112(__getattr__)
    14059    0.010    0.000    0.019    0.000 numeric.py:380(count_nonzero)
     1815    0.010    0.000    0.011    0.000 guess_weight.py:43(is_feasible)
    14059    0.009    0.000    0.009    0.000 {built-in method numpy.core.multiarray.count_nonzero}
    17141    0.008    0.000    0.008    0.000 flow.py:444(<genexpr>)
        3    0.005    0.002  236.552   78.851 guess_weight.py:62(solve)
    14059    0.005    0.000    0.005    0.000 {built-in method builtins.abs}
      315    0.004    0.000    0.006    0.000 function_base.py:4538(delete)
     2709    0.004    0.000    0.005    0.000 flow.py:550(__hash__)
    14059    0.004    0.000    0.004    0.000 {method 'lower' of 'str' objects}
    14059    0.004    0.000    0.004    0.000 optimize.py:137(_check_unknown_options)
      942    0.003    0.000    0.003    0.000 partition.py:15(algorithm_u)
      315    0.003    0.000    0.014    0.000 core.py:2753(__new__)
      315    0.003    0.000    0.003    0.000 _linprog.py:325(<listcomp>)
      942    0.002    0.000    0.002    0.000 graphs.py:67(labeled_neighborhood)
     3000    0.001    0.000    0.003    0.000 graphs.py:126(out_degree)
      500    0.001    0.000    0.005    0.000 graphs.py:61(sink)
      315    0.001    0.000    0.015    0.000 core.py:6155(array)
     3000    0.001    0.000    0.002    0.000 graphs.py:84(out_neighborhood)
     3012    0.001    0.000    0.001    0.000 graphs.py:78(neighborhood)
     2913    0.001    0.000    0.001    0.000 {built-in method builtins.sum}
      295    0.001    0.000    0.001    0.000 flow.py:533(__eq__)
      500    0.001    0.000    0.002    0.000 graphs.py:55(source)
       60    0.001    0.000    0.001    0.000 _linprog.py:327(<listcomp>)
     1002    0.000    0.000    0.001    0.000 graphs.py:52(__iter__)
      771    0.000    0.000    0.001    0.000 {method 'add' of 'set' objects}
      500    0.000    0.000    0.001    0.000 graphs.py:129(in_degree)
      315    0.000    0.000    0.000    0.000 core.py:3562(get_fill_value)
     1002    0.000    0.000    0.000    0.000 {built-in method builtins.iter}
      813    0.000    0.000    0.000    0.000 flow.py:422(__hash__)
      500    0.000    0.000    0.000    0.000 graphs.py:87(in_neighborhood)
      315    0.000    0.000    0.000    0.000 {method 'indices' of 'slice' objects}
      315    0.000    0.000    0.000    0.000 index_tricks.py:650(__getitem__)
      456    0.000    0.000    0.000    0.000 flow.py:488(__hash__)
        2    0.000    0.000    0.000    0.000 flow.py:60(_compute_max_weight_bounds)
        1    0.000    0.000  236.552  236.552 toboggan.py:77(find_opt_size)
        3    0.000    0.000    0.000    0.000 flow.py:211(has_bad_bounds)
        2    0.000    0.000    0.000    0.000 flow.py:81(_compute_weight_bounds)
        4    0.000    0.000    0.000    0.000 twodim_base.py:139(eye)
        6    0.000    0.000    0.000    0.000 {built-in method builtins.print}
        5    0.000    0.000    0.000    0.000 {method 'format' of 'str' objects}
        2    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.arange}
        6    0.000    0.000    0.000    0.000 flow.py:474(__eq__)
        2    0.000    0.000    0.000    0.000 flow.py:198(try_larger_k)
       14    0.000    0.000    0.000    0.000 guess_weight.py:74(<genexpr>)
        2    0.000    0.000    0.000    0.000 signal.py:35(_enum_to_int)
        1    0.000    0.000    0.000    0.000 toboggan.py:39(__enter__)
        1    0.000    0.000    0.000    0.000 flow.py:438(__repr__)
        1    0.000    0.000    0.000    0.000 signal.py:45(signal)
        2    0.000    0.000    0.000    0.000 {built-in method _signal.alarm}
        1    0.000    0.000    0.000    0.000 enum.py:215(__call__)
        2    0.000    0.000    0.000    0.000 flow.py:72(<dictcomp>)
        1    0.000    0.000    0.000    0.000 signal.py:25(_int_to_enum)
        1    0.000    0.000    0.000    0.000 getlimits.py:96(__new__)
        1    0.000    0.000    0.000    0.000 enum.py:459(__new__)
       20    0.000    0.000    0.000    0.000 guess_weight.py:82(<lambda>)
        2    0.000    0.000    0.000    0.000 flow.py:97(<listcomp>)
        1    0.000    0.000    0.000    0.000 {built-in method _signal.signal}
        1    0.000    0.000    0.000    0.000 toboggan.py:44(__exit__)
        1    0.000    0.000    0.000    0.000 {built-in method time.time}
        1    0.000    0.000    0.000    0.000 toboggan.py:32(__init__)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        2    0.000    0.000    0.000    0.000 flow.py:101(<listcomp>)


#	Now recovering the 6 paths in the solution (7, 9, 35, 37, 57, 388)
# Recovery took 0.01 seconds
# Paths, weights pass test: flow decomposition confirmed.
# Solutions:
# 	Path with weight = 7
# 	[0, 12, 13, 14, 15, 16, 22]
# 	Path with weight = 9
# 	[0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 18, 19, 20, 21, 22]
# 	Path with weight = 35
# 	[0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 18, 19, 20, 22]
# 	Path with weight = 37
# 	[0, 2, 3, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 17, 18, 19, 20, 22]
# 	Path with weight = 57
# 	[0, 2, 5, 6, 7, 8, 9, 10, 13, 14, 15, 17, 18, 19, 20, 22]
# 	Path with weight = 388
# 	[0, 2, 3, 5, 6, 7, 8, 9, 10, 13, 14, 15, 18, 19, 20, 22]
# All_info	n_in	m_in	n_red	m_red	k_gtrue	k_cut	k_impro	k_opt	time_w	time_p
All_info	23	30	6	13	7	4	4	6	236.55329537391663	0.01263427734375
weights	 7 9 35 37 57 388
Finished instance.

# Timeout is set to 300
# Recovering paths
# Running on instances 128
# Ground-truth available in file ../../research/instances/rnaseq/zebrafish/12.truth

File 12.graph instance 127 name ENSDARG00000045822 with n = 35, m = 51, and truth = 9:
[(0, 7, 34), (0, 7, 74), (0, 7, 372), (0, 7, 51), (0, 7, 1), (0, 7, 162), (7, 26, 1), (7, 26, 50), (7, 26, 103), (7, 26, 34), (7, 26, 74), (7, 26, 431), (7, 26, 1), (26, 30, 423), (26, 34, 34), (26, 30, 236), (26, 34, 1), (30, 34, 74), (30, 34, 372), (30, 34, 1), (30, 34, 212)]
# Preprocessing
#	Graph has an edge cut of size 7.
#	Investigating cutsets yields bound 7.
#	User supplied k value of 1.
#	Continuing using k = 7
# Reduced instance has n = 5, m = 21, and lower_bound = 7:
Searching for minimum-sized set of weights, timeout set at 300
# 	Call guess_weight with k = 7
# 	Call guess_weight with k = 8
Number of 1s is 2
Timed out after 300 seconds
         185996167 function calls (185990335 primitive calls) in 300.000 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
  2759279   48.003    0.000   48.003    0.000 {built-in method numpy.linalg.lapack_lite.dgelsd}
  1379640   41.594    0.000  163.122    0.000 linalg.py:1830(lstsq)
 15176097   23.440    0.000   23.440    0.000 {built-in method numpy.core.multiarray.array}
  1379640   21.734    0.000  255.297    0.000 flow.py:296(_test_row)
  1379583   21.200    0.000   38.528    0.000 linalg.py:296(solve)
  1520713   13.462    0.000   23.469    0.000 flow.py:553(push)
  2759444   11.313    0.000   16.600    0.000 defmatrix.py:314(__getitem__)
  5518445    8.736    0.000    8.736    0.000 {method 'astype' of 'numpy.ndarray' objects}
        8    8.651    1.081  299.996   37.500 dp.py:14(solve)
  1379639    7.217    0.000    7.217    0.000 {method 'reduce' of 'numpy.ufunc' objects}
  1379640    6.514    0.000  266.511    0.000 flow.py:343(add_constraint)
  6898202    6.052    0.000    6.052    0.000 {built-in method numpy.core.multiarray.zeros}
  1520704    5.679    0.000    7.137    0.000 flow.py:505(copy)
  5518446    4.406    0.000   13.758    0.000 linalg.py:106(_makearray)
5518697/5518623    4.258    0.000    5.114    0.000 defmatrix.py:292(__array_finalize__)
  2759278    4.024    0.000   10.504    0.000 fromnumeric.py:1364(ravel)
  1379639    3.772    0.000   11.984    0.000 fromnumeric.py:1710(sum)
  2759223    3.686    0.000    4.465    0.000 linalg.py:139(_commonType)
  5518502    3.573    0.000    8.339    0.000 numeric.py:463(asarray)
  1379640    3.313    0.000    7.907    0.000 linalg.py:180(_fastCopyAndTranspose)
  2759280    3.042    0.000    3.042    0.000 {built-in method numpy.core.multiarray._fastCopyAndTranspose}
  2759278    2.997    0.000    2.997    0.000 {method 'ravel' of 'numpy.ndarray' objects}
  1379583    2.980    0.000    3.494    0.000 flow.py:431(__init__)
  1520713    2.853    0.000    2.870    0.000 flow.py:584(distribute)
 13796841    2.646    0.000    2.646    0.000 {built-in method builtins.isinstance}
  8277804    2.573    0.000    2.573    0.000 {built-in method builtins.min}
  2759278    2.117    0.000    2.594    0.000 numeric.py:534(asanyarray)
  1379704    2.079    0.000    2.079    0.000 {method 'copy' of 'numpy.ndarray' objects}
  1379640    2.052    0.000    2.713    0.000 linalg.py:168(_to_native_byte_order)
  2759280    1.984    0.000    3.590    0.000 {method 'transpose' of 'numpy.ndarray' objects}
  4138915    1.559    0.000    1.559    0.000 {built-in method builtins.max}
  1379583    1.546    0.000    2.458    0.000 linalg.py:209(_assertNdSquareness)
  1379583    1.459    0.000    1.459    0.000 {method 'squeeze' of 'numpy.ndarray' objects}
  1379583    1.445    0.000    2.904    0.000 fromnumeric.py:1143(squeeze)
  9657308    1.418    0.000    1.418    0.000 {built-in method builtins.issubclass}
  4138862    1.372    0.000    2.010    0.000 linalg.py:111(isComplexType)
  1626669    1.364    0.000    1.364    0.000 flow.py:464(add_constraint)
  1379583    1.321    0.000    1.321    0.000 linalg.py:101(get_linalg_error_extobj)
  1379640    1.200    0.000    1.354    0.000 linalg.py:192(_assertRank2)
  1379583    1.156    0.000    1.300    0.000 linalg.py:198(_assertRankAtLeast2)
  1520719    1.115    0.000    1.115    0.000 flow.py:495(__init__)
 11038319    1.059    0.000    1.059    0.000 {built-in method builtins.len}
  1379593    1.019    0.000    1.264    0.000 numeric.py:2160(isscalar)
  5518446    1.013    0.000    1.013    0.000 {built-in method builtins.getattr}
  1379583    0.838    0.000    0.838    0.000 {method 'tolist' of 'numpy.ndarray' objects}
 11036664    0.830    0.000    0.830    0.000 {method 'is_integer' of 'float' objects}
  1379640    0.726    0.000    0.726    0.000 {built-in method math.log}
  1379639    0.655    0.000    7.871    0.000 _methods.py:31(_sum)
  1379640    0.606    0.000    0.889    0.000 linalg.py:124(_realType)
  2774903    0.536    0.000    0.536    0.000 {method 'append' of 'list' objects}
  2759377    0.514    0.000    0.514    0.000 {built-in method builtins.hash}
  4138861    0.459    0.000    0.459    0.000 {method '__array_prepare__' of 'numpy.ndarray' objects}
  3041464    0.343    0.000    0.343    0.000 {method 'items' of 'dict' objects}
  1379640    0.283    0.000    0.283    0.000 {method 'get' of 'dict' objects}
  1379640    0.193    0.000    0.193    0.000 linalg.py:130(_linalgRealType)
     1945    0.010    0.000    0.013    0.000 partition.py:17(visit)
6377/1954    0.003    0.000    0.018    0.000 partition.py:23(f)
      497    0.002    0.000    0.003    0.000 guess_weight.py:43(is_feasible)
     1945    0.002    0.000    0.002    0.000 partition.py:18(<listcomp>)
 2330/995    0.002    0.000    0.008    0.000 partition.py:55(b)
        2    0.001    0.000  300.000  150.000 guess_weight.py:62(solve)
       56    0.001    0.000    0.002    0.000 function_base.py:4740(insert)
       64    0.001    0.000    0.001    0.000 flow.py:239(__init__)
       66    0.000    0.000    0.000    0.000 {method 'dot' of 'numpy.ndarray' objects}
      747    0.000    0.000    0.000    0.000 {built-in method builtins.sum}
       64    0.000    0.000    0.001    0.000 defmatrix.py:246(__new__)
       56    0.000    0.000    0.000    0.000 numeric.py:1490(rollaxis)
       64    0.000    0.000    0.000    0.000 {method 'view' of 'numpy.ndarray' objects}
       56    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.empty}
       56    0.000    0.000    0.000    0.000 {method '__array_wrap__' of 'numpy.ndarray' objects}
        9    0.000    0.000    0.000    0.000 graphs.py:67(labeled_neighborhood)
        9    0.000    0.000    0.000    0.000 partition.py:15(algorithm_u)
      120    0.000    0.000    0.000    0.000 {method 'tobytes' of 'memoryview' objects}
       27    0.000    0.000    0.000    0.000 flow.py:550(__hash__)
       40    0.000    0.000    0.000    0.000 graphs.py:126(out_degree)
        1    0.000    0.000    0.000    0.000 flow.py:60(_compute_max_weight_bounds)
        1    0.000    0.000  300.000  300.000 toboggan.py:77(find_opt_size)
        8    0.000    0.000    0.000    0.000 graphs.py:61(sink)
        2    0.000    0.000    0.000    0.000 twodim_base.py:139(eye)
       56    0.000    0.000    0.000    0.000 {method 'item' of 'numpy.ndarray' objects}
        4    0.000    0.000    0.000    0.000 flow.py:441(is_redundant)
        1    0.000    0.000    0.000    0.000 flow.py:81(_compute_weight_bounds)
       45    0.000    0.000    0.000    0.000 graphs.py:78(neighborhood)
        2    0.000    0.000    0.000    0.000 flow.py:211(has_bad_bounds)
       18    0.000    0.000    0.000    0.000 graphs.py:52(__iter__)
        9    0.000    0.000    0.000    0.000 graphs.py:55(source)
       40    0.000    0.000    0.000    0.000 graphs.py:84(out_neighborhood)
        9    0.000    0.000    0.000    0.000 graphs.py:129(in_degree)
        1    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.arange}
        5    0.000    0.000    0.000    0.000 {built-in method builtins.print}
       32    0.000    0.000    0.000    0.000 flow.py:444(<genexpr>)
        4    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
        2    0.000    0.000    0.000    0.000 signal.py:35(_enum_to_int)
        5    0.000    0.000    0.000    0.000 {method 'format' of 'str' objects}
       18    0.000    0.000    0.000    0.000 {built-in method builtins.iter}
        3    0.000    0.000    0.000    0.000 flow.py:533(__eq__)
        1    0.000    0.000    0.000    0.000 flow.py:198(try_larger_k)
       11    0.000    0.000    0.000    0.000 guess_weight.py:99(<genexpr>)
        4    0.000    0.000    0.000    0.000 {built-in method builtins.all}
        1    0.000    0.000    0.000    0.000 toboggan.py:39(__enter__)
        8    0.000    0.000    0.000    0.000 flow.py:422(__hash__)
        9    0.000    0.000    0.000    0.000 graphs.py:87(in_neighborhood)
        1    0.000    0.000    0.000    0.000 signal.py:45(signal)
        2    0.000    0.000    0.000    0.000 {built-in method _signal.alarm}
        1    0.000    0.000    0.000    0.000 toboggan.py:36(handle_timeout)
        6    0.000    0.000    0.000    0.000 guess_weight.py:74(<genexpr>)
        1    0.000    0.000    0.000    0.000 enum.py:215(__call__)
        1    0.000    0.000    0.000    0.000 {built-in method _signal.signal}
        1    0.000    0.000    0.000    0.000 enum.py:459(__new__)
        1    0.000    0.000    0.000    0.000 toboggan.py:44(__exit__)
        1    0.000    0.000    0.000    0.000 signal.py:25(_int_to_enum)
        1    0.000    0.000    0.000    0.000 flow.py:97(<listcomp>)
       12    0.000    0.000    0.000    0.000 guess_weight.py:82(<lambda>)
        1    0.000    0.000    0.000    0.000 flow.py:72(<dictcomp>)
        3    0.000    0.000    0.000    0.000 flow.py:474(__eq__)
        4    0.000    0.000    0.000    0.000 flow.py:488(__hash__)
        1    0.000    0.000    0.000    0.000 toboggan.py:32(__init__)
        1    0.000    0.000    0.000    0.000 flow.py:101(<listcomp>)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 guess_weight.py:101(<listcomp>)


# All_info	n_in	m_in	n_red	m_red	k_gtrue	k_cut	k_impro	k_opt	time_w	time_p
All_info	35	51	5	21	9	7	7	None	300	0
weights	
Finished instance.

# Timeout is set to 300
# Recovering paths
# Running on instances 8917
# Ground-truth available in file ../../research/instances/rnaseq/zebrafish/12.truth

File 12.graph instance 8916 name ENSDARG00000044062 with n = 31, m = 50, and truth = 10:
[(0, 4, 3), (0, 4, 363), (0, 16, 1), (0, 16, 15), (0, 6, 626), (0, 4, 15), (0, 4, 5), (4, 6, 58), (4, 16, 328), (6, 16, 646), (6, 16, 38), (16, 18, 35), (16, 18, 598), (16, 25, 1), (16, 30, 326), (16, 25, 1), (16, 25, 37), (16, 25, 15), (16, 25, 15), (18, 30, 2), (18, 30, 631), (25, 30, 37), (25, 30, 15), (25, 30, 15), (25, 30, 1), (25, 30, 1)]
# Preprocessing
#	Graph has an edge cut of size 8.
#	Investigating cutsets yields bound 8.
#	User supplied k value of 1.
#	Continuing using k = 8
# Reduced instance has n = 7, m = 26, and lower_bound = 8:
Searching for minimum-sized set of weights, timeout set at 300
# 	Call guess_weight with k = 8
# 	Call guess_weight with k = 9
Number of 1s is 2
Timed out after 300 seconds
         176066335 function calls (176062300 primitive calls) in 300.000 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
  5715301   41.042    0.000   70.178    0.000 flow.py:553(push)
  2116726   38.316    0.000   38.316    0.000 {built-in method numpy.linalg.lapack_lite.dgelsd}
  1058364   31.922    0.000  126.293    0.000 linalg.py:1830(lstsq)
        3   19.046    6.349  299.986   99.995 dp.py:14(solve)
 11642024   17.893    0.000   17.893    0.000 {built-in method numpy.core.multiarray.array}
  5715298   17.579    0.000   21.956    0.000 flow.py:505(copy)
  1058364   17.230    0.000  198.475    0.000 flow.py:296(_test_row)
  1058339   16.825    0.000   30.173    0.000 linalg.py:296(solve)
  2116807    8.879    0.000   12.937    0.000 defmatrix.py:314(__getitem__)
  5715301    7.169    0.000    7.179    0.000 flow.py:584(distribute)
  4233404    6.721    0.000    6.721    0.000 {method 'astype' of 'numpy.ndarray' objects}
  1058363    5.627    0.000    5.627    0.000 {method 'reduce' of 'numpy.ufunc' objects}
  1058364    4.813    0.000  206.895    0.000 flow.py:343(add_constraint)
  5291818    4.511    0.000    4.511    0.000 {built-in method numpy.core.multiarray.zeros}
  6277137    3.867    0.000    3.867    0.000 flow.py:464(add_constraint)
  4233406    3.464    0.000   10.634    0.000 linalg.py:106(_makearray)
  5715303    3.416    0.000    3.416    0.000 flow.py:495(__init__)
4233522/4233489    3.314    0.000    3.988    0.000 defmatrix.py:292(__array_finalize__)
  2116726    3.032    0.000    7.914    0.000 fromnumeric.py:1364(ravel)
  1058363    2.939    0.000    9.311    0.000 fromnumeric.py:1710(sum)
  2116702    2.803    0.000    3.396    0.000 linalg.py:139(_commonType)
  4233430    2.798    0.000    6.442    0.000 numeric.py:463(asarray)
  1058363    2.518    0.000    6.077    0.000 linalg.py:180(_fastCopyAndTranspose)
  2116726    2.355    0.000    2.355    0.000 {built-in method numpy.core.multiarray._fastCopyAndTranspose}
  1058339    2.296    0.000    2.699    0.000 flow.py:431(__init__)
  2116726    2.217    0.000    2.217    0.000 {method 'ravel' of 'numpy.ndarray' objects}
 10583841    2.044    0.000    2.044    0.000 {built-in method builtins.isinstance}
  6350181    1.918    0.000    1.918    0.000 {built-in method builtins.min}
  1058390    1.610    0.000    1.610    0.000 {method 'copy' of 'numpy.ndarray' objects}
  2116726    1.603    0.000    1.981    0.000 numeric.py:534(asanyarray)
  1058363    1.575    0.000    2.076    0.000 linalg.py:168(_to_native_byte_order)
  2116728    1.512    0.000    2.758    0.000 {method 'transpose' of 'numpy.ndarray' objects}
  3175141    1.187    0.000    1.187    0.000 {built-in method builtins.max}
  1058339    1.175    0.000    1.873    0.000 linalg.py:209(_assertNdSquareness)
  1058339    1.120    0.000    1.120    0.000 {method 'squeeze' of 'numpy.ndarray' objects}
  1058339    1.117    0.000    2.237    0.000 fromnumeric.py:1143(squeeze)
  3175065    1.093    0.000    1.569    0.000 linalg.py:111(isComplexType)
  7408469    1.069    0.000    1.069    0.000 {built-in method builtins.issubclass}
  1058339    1.010    0.000    1.010    0.000 linalg.py:101(get_linalg_error_extobj)
 11430616    0.961    0.000    0.961    0.000 {method 'items' of 'dict' objects}
  1058363    0.948    0.000    1.063    0.000 linalg.py:192(_assertRank2)
  1058339    0.875    0.000    0.978    0.000 linalg.py:198(_assertRankAtLeast2)
  8470667    0.793    0.000    0.793    0.000 {built-in method builtins.len}
  1058345    0.746    0.000    0.929    0.000 numeric.py:2160(isscalar)
  4233406    0.728    0.000    0.728    0.000 {built-in method builtins.getattr}
  1058339    0.683    0.000    0.683    0.000 {method 'tolist' of 'numpy.ndarray' objects}
  9525051    0.679    0.000    0.679    0.000 {method 'is_integer' of 'float' objects}
  1058363    0.550    0.000    0.550    0.000 {built-in method math.log}
  1058363    0.486    0.000    6.113    0.000 _methods.py:31(_sum)
  1058363    0.407    0.000    0.643    0.000 linalg.py:124(_realType)
  2126962    0.407    0.000    0.407    0.000 {method 'append' of 'list' objects}
  2116763    0.403    0.000    0.403    0.000 {built-in method builtins.hash}
  3175065    0.346    0.000    0.346    0.000 {method '__array_prepare__' of 'numpy.ndarray' objects}
  1058363    0.236    0.000    0.236    0.000 {method 'get' of 'dict' objects}
  1058363    0.104    0.000    0.104    0.000 linalg.py:130(_linalgRealType)
     1832    0.009    0.000    0.010    0.000 guess_weight.py:43(is_feasible)
     1134    0.005    0.000    0.007    0.000 partition.py:17(visit)
        2    0.003    0.002  300.000  150.000 guess_weight.py:62(solve)
4235/1137    0.002    0.000    0.010    0.000 partition.py:23(f)
     1134    0.001    0.000    0.001    0.000 partition.py:18(<listcomp>)
 1483/579    0.001    0.000    0.004    0.000 partition.py:55(b)
     2829    0.001    0.000    0.001    0.000 {built-in method builtins.sum}
       24    0.000    0.000    0.001    0.000 function_base.py:4740(insert)
       27    0.000    0.000    0.001    0.000 flow.py:239(__init__)
       30    0.000    0.000    0.000    0.000 {method 'dot' of 'numpy.ndarray' objects}
       27    0.000    0.000    0.000    0.000 defmatrix.py:246(__new__)
        1    0.000    0.000    0.000    0.000 flow.py:60(_compute_max_weight_bounds)
       24    0.000    0.000    0.000    0.000 numeric.py:1490(rollaxis)
       24    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.empty}
       27    0.000    0.000    0.000    0.000 {method 'view' of 'numpy.ndarray' objects}
       24    0.000    0.000    0.000    0.000 {method '__array_wrap__' of 'numpy.ndarray' objects}
        1    0.000    0.000  300.000  300.000 toboggan.py:77(find_opt_size)
        3    0.000    0.000    0.000    0.000 graphs.py:67(labeled_neighborhood)
        2    0.000    0.000    0.000    0.000 flow.py:211(has_bad_bounds)
        1    0.000    0.000    0.000    0.000 flow.py:81(_compute_weight_bounds)
        5    0.000    0.000    0.000    0.000 {built-in method builtins.print}
        7    0.000    0.000    0.000    0.000 flow.py:550(__hash__)
        3    0.000    0.000    0.000    0.000 partition.py:15(algorithm_u)
        2    0.000    0.000    0.000    0.000 twodim_base.py:139(eye)
       28    0.000    0.000    0.000    0.000 graphs.py:78(neighborhood)
       51    0.000    0.000    0.000    0.000 {method 'tobytes' of 'memoryview' objects}
        3    0.000    0.000    0.000    0.000 graphs.py:61(sink)
       21    0.000    0.000    0.000    0.000 graphs.py:126(out_degree)
        5    0.000    0.000    0.000    0.000 {method 'format' of 'str' objects}
        1    0.000    0.000    0.000    0.000 flow.py:198(try_larger_k)
        8    0.000    0.000    0.000    0.000 graphs.py:52(__iter__)
        4    0.000    0.000    0.000    0.000 graphs.py:55(source)
        1    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.arange}
        2    0.000    0.000    0.000    0.000 signal.py:35(_enum_to_int)
        1    0.000    0.000    0.000    0.000 signal.py:45(signal)
        4    0.000    0.000    0.000    0.000 graphs.py:129(in_degree)
       24    0.000    0.000    0.000    0.000 {method 'item' of 'numpy.ndarray' objects}
        8    0.000    0.000    0.000    0.000 guess_weight.py:74(<genexpr>)
        1    0.000    0.000    0.000    0.000 toboggan.py:39(__enter__)
        1    0.000    0.000    0.000    0.000 toboggan.py:44(__exit__)
        8    0.000    0.000    0.000    0.000 {built-in method builtins.iter}
       16    0.000    0.000    0.000    0.000 guess_weight.py:99(<genexpr>)
       21    0.000    0.000    0.000    0.000 graphs.py:84(out_neighborhood)
        1    0.000    0.000    0.000    0.000 enum.py:215(__call__)
        2    0.000    0.000    0.000    0.000 {built-in method _signal.alarm}
        1    0.000    0.000    0.000    0.000 toboggan.py:36(handle_timeout)
        1    0.000    0.000    0.000    0.000 signal.py:25(_int_to_enum)
        1    0.000    0.000    0.000    0.000 enum.py:459(__new__)
        4    0.000    0.000    0.000    0.000 graphs.py:87(in_neighborhood)
        1    0.000    0.000    0.000    0.000 {built-in method _signal.signal}
        2    0.000    0.000    0.000    0.000 flow.py:488(__hash__)
        1    0.000    0.000    0.000    0.000 toboggan.py:32(__init__)
        1    0.000    0.000    0.000    0.000 guess_weight.py:101(<listcomp>)
        1    0.000    0.000    0.000    0.000 flow.py:72(<dictcomp>)
        1    0.000    0.000    0.000    0.000 flow.py:97(<listcomp>)
        1    0.000    0.000    0.000    0.000 flow.py:101(<listcomp>)
       16    0.000    0.000    0.000    0.000 guess_weight.py:82(<lambda>)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 flow.py:422(__hash__)


# All_info	n_in	m_in	n_red	m_red	k_gtrue	k_cut	k_impro	k_opt	time_w	time_p
All_info	31	50	7	26	10	8	8	None	300	0
weights	
Finished instance.

# Timeout is set to 300
# Recovering paths
# Running on instances 10233
# Ground-truth available in file ../../research/instances/rnaseq/zebrafish/12.truth

File 12.graph instance 10232 name ENSDARG00000056322 with n = 41, m = 65, and truth = 13:
[(0, 3, 1161), (0, 3, 1), (0, 11, 1775), (0, 11, 524), (0, 11, 169), (0, 11, 13), (0, 3, 3), (3, 11, 1164), (3, 11, 1), (11, 16, 105), (11, 25, 291), (11, 40, 1), (11, 25, 2), (11, 25, 839), (11, 25, 345), (11, 16, 1174), (11, 25, 193), (11, 16, 696), (16, 40, 1161), (16, 40, 524), (16, 40, 3), (16, 40, 13), (16, 40, 105), (16, 40, 169), (25, 27, 1668), (25, 27, 2), (27, 29, 1668), (27, 29, 2), (29, 37, 1), (29, 37, 1324), (29, 40, 345), (37, 40, 1324), (37, 40, 1)]
# Preprocessing
#	Graph has an edge cut of size 10.
#	Investigating cutsets yields bound 11.
#	User supplied k value of 1.
#	Continuing using k = 11
# Reduced instance has n = 9, m = 33, and lower_bound = 11:
Searching for minimum-sized set of weights, timeout set at 300
# 	Call guess_weight with k = 11
Number of 1s is 2
Timed out after 300 seconds
         134911914 function calls (134887249 primitive calls) in 300.000 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
 18826669  143.963    0.000  235.880    0.000 flow.py:553(push)
 18826669   57.814    0.000   71.094    0.000 flow.py:505(copy)
        1   52.029   52.029  299.996  299.996 dp.py:14(solve)
 18826670   20.787    0.000   20.824    0.000 flow.py:584(distribute)
 21867828   12.083    0.000   12.083    0.000 flow.py:464(add_constraint)
 18826670   10.314    0.000   10.314    0.000 flow.py:495(__init__)
 37653338    2.966    0.000    2.966    0.000 {method 'items' of 'dict' objects}
     3736    0.019    0.000    0.025    0.000 partition.py:17(visit)
22450/3737    0.007    0.000    0.036    0.000 partition.py:23(f)
9186/3247    0.004    0.000    0.028    0.000 partition.py:55(b)
    41125    0.003    0.000    0.003    0.000 {method 'append' of 'list' objects}
     3736    0.003    0.000    0.003    0.000 partition.py:18(<listcomp>)
      475    0.003    0.000    0.003    0.000 guess_weight.py:43(is_feasible)
        1    0.001    0.001  300.000  300.000 guess_weight.py:62(solve)
       22    0.000    0.000    0.000    0.000 {built-in method numpy.linalg.lapack_lite.dgelsd}
       11    0.000    0.000    0.002    0.000 linalg.py:1830(lstsq)
        1    0.000    0.000    0.000    0.000 linalg.py:296(solve)
      132    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.array}
      916    0.000    0.000    0.000    0.000 {built-in method builtins.sum}
       11    0.000    0.000    0.003    0.000 flow.py:343(add_constraint)
       10    0.000    0.000    0.000    0.000 function_base.py:4740(insert)
       11    0.000    0.000    0.000    0.000 flow.py:239(__init__)
       11    0.000    0.000    0.002    0.000 flow.py:296(_test_row)
       66    0.000    0.000    0.000    0.000 defmatrix.py:314(__getitem__)
    69/56    0.000    0.000    0.000    0.000 defmatrix.py:292(__array_finalize__)
       11    0.000    0.000    0.000    0.000 {method 'reduce' of 'numpy.ufunc' objects}
       58    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.zeros}
       11    0.000    0.000    0.000    0.000 linalg.py:180(_fastCopyAndTranspose)
     1068    0.000    0.000    0.000    0.000 {built-in method builtins.len}
       24    0.000    0.000    0.000    0.000 {method 'astype' of 'numpy.ndarray' objects}
       12    0.000    0.000    0.000    0.000 {method 'dot' of 'numpy.ndarray' objects}
      203    0.000    0.000    0.000    0.000 {built-in method builtins.isinstance}
       22    0.000    0.000    0.000    0.000 {method 'copy' of 'numpy.ndarray' objects}
       22    0.000    0.000    0.000    0.000 fromnumeric.py:1364(ravel)
       11    0.000    0.000    0.000    0.000 fromnumeric.py:1710(sum)
       11    0.000    0.000    0.000    0.000 defmatrix.py:246(__new__)
       22    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray._fastCopyAndTranspose}
       34    0.000    0.000    0.000    0.000 numeric.py:463(asarray)
       24    0.000    0.000    0.000    0.000 linalg.py:106(_makearray)
       23    0.000    0.000    0.000    0.000 linalg.py:111(isComplexType)
       22    0.000    0.000    0.000    0.000 {method 'ravel' of 'numpy.ndarray' objects}
       12    0.000    0.000    0.000    0.000 linalg.py:139(_commonType)
        2    0.000    0.000    0.000    0.000 twodim_base.py:139(eye)
       22    0.000    0.000    0.000    0.000 numeric.py:534(asanyarray)
       11    0.000    0.000    0.000    0.000 linalg.py:168(_to_native_byte_order)
        1    0.000    0.000  300.000  300.000 toboggan.py:77(find_opt_size)
       10    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.empty}
        1    0.000    0.000    0.000    0.000 flow.py:211(has_bad_bounds)
       11    0.000    0.000    0.000    0.000 {method 'view' of 'numpy.ndarray' objects}
       57    0.000    0.000    0.000    0.000 {built-in method builtins.min}
       22    0.000    0.000    0.000    0.000 {method 'transpose' of 'numpy.ndarray' objects}
       10    0.000    0.000    0.000    0.000 numeric.py:1490(rollaxis)
       10    0.000    0.000    0.000    0.000 {method '__array_wrap__' of 'numpy.ndarray' objects}
       35    0.000    0.000    0.000    0.000 {built-in method builtins.hash}
       11    0.000    0.000    0.000    0.000 linalg.py:192(_assertRank2)
       25    0.000    0.000    0.000    0.000 {built-in method builtins.max}
       11    0.000    0.000    0.000    0.000 _methods.py:31(_sum)
       11    0.000    0.000    0.000    0.000 linalg.py:124(_realType)
        4    0.000    0.000    0.000    0.000 {built-in method builtins.print}
        1    0.000    0.000    0.000    0.000 graphs.py:67(labeled_neighborhood)
        1    0.000    0.000    0.000    0.000 partition.py:15(algorithm_u)
       20    0.000    0.000    0.000    0.000 guess_weight.py:99(<genexpr>)
        1    0.000    0.000    0.000    0.000 flow.py:550(__hash__)
       10    0.000    0.000    0.000    0.000 {method 'item' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.arange}
        4    0.000    0.000    0.000    0.000 {method 'format' of 'str' objects}
       11    0.000    0.000    0.000    0.000 {built-in method math.log}
        2    0.000    0.000    0.000    0.000 signal.py:35(_enum_to_int)
       23    0.000    0.000    0.000    0.000 {method '__array_prepare__' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 toboggan.py:39(__enter__)
        1    0.000    0.000    0.000    0.000 flow.py:431(__init__)
        3    0.000    0.000    0.000    0.000 numeric.py:2160(isscalar)
        1    0.000    0.000    0.000    0.000 signal.py:45(signal)
       21    0.000    0.000    0.000    0.000 {method 'tobytes' of 'memoryview' objects}
       47    0.000    0.000    0.000    0.000 {built-in method builtins.issubclass}
        1    0.000    0.000    0.000    0.000 graphs.py:55(source)
       11    0.000    0.000    0.000    0.000 {method 'is_integer' of 'float' objects}
        1    0.000    0.000    0.000    0.000 toboggan.py:36(handle_timeout)
        1    0.000    0.000    0.000    0.000 fromnumeric.py:1143(squeeze)
        1    0.000    0.000    0.000    0.000 toboggan.py:44(__exit__)
        1    0.000    0.000    0.000    0.000 signal.py:25(_int_to_enum)
        2    0.000    0.000    0.000    0.000 {built-in method _signal.alarm}
        1    0.000    0.000    0.000    0.000 graphs.py:52(__iter__)
       10    0.000    0.000    0.000    0.000 guess_weight.py:74(<genexpr>)
        1    0.000    0.000    0.000    0.000 enum.py:215(__call__)
        1    0.000    0.000    0.000    0.000 linalg.py:209(_assertNdSquareness)
        1    0.000    0.000    0.000    0.000 enum.py:459(__new__)
       24    0.000    0.000    0.000    0.000 {built-in method builtins.getattr}
       18    0.000    0.000    0.000    0.000 guess_weight.py:82(<lambda>)
       11    0.000    0.000    0.000    0.000 linalg.py:130(_linalgRealType)
        1    0.000    0.000    0.000    0.000 {built-in method builtins.iter}
        1    0.000    0.000    0.000    0.000 graphs.py:129(in_degree)
        1    0.000    0.000    0.000    0.000 {method 'tolist' of 'numpy.ndarray' objects}
       11    0.000    0.000    0.000    0.000 {method 'get' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 {method 'squeeze' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 linalg.py:198(_assertRankAtLeast2)
        1    0.000    0.000    0.000    0.000 guess_weight.py:101(<listcomp>)
        1    0.000    0.000    0.000    0.000 toboggan.py:32(__init__)
        1    0.000    0.000    0.000    0.000 linalg.py:101(get_linalg_error_extobj)
        1    0.000    0.000    0.000    0.000 graphs.py:87(in_neighborhood)
        1    0.000    0.000    0.000    0.000 {built-in method _signal.signal}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 flow.py:488(__hash__)


# All_info	n_in	m_in	n_red	m_red	k_gtrue	k_cut	k_impro	k_opt	time_w	time_p
All_info	41	65	9	33	13	10	11	None	300	0
weights	
Finished instance.

# Timeout is set to 300
# Recovering paths
# Running on instances 13101
# Ground-truth available in file ../../research/instances/rnaseq/zebrafish/12.truth

File 12.graph instance 13100 name ENSDARG00000058693 with n = 56, m = 82, and truth = 12:
[(0, 9, 14), (0, 9, 1), (0, 33, 29), (0, 33, 3), (0, 22, 3), (0, 36, 715), (0, 33, 12), (0, 22, 2), (0, 33, 422), (0, 33, 55), (0, 33, 909), (9, 22, 14), (9, 22, 1), (22, 33, 7), (22, 33, 13), (33, 36, 3), (33, 36, 1447), (36, 38, 1640), (36, 38, 525), (38, 42, 422), (38, 42, 63), (38, 42, 771), (38, 42, 909), (42, 55, 3), (42, 55, 55), (42, 55, 29), (42, 55, 422), (42, 55, 3), (42, 55, 715), (42, 55, 12), (42, 55, 909), (42, 55, 2), (42, 55, 1), (42, 55, 14)]
# Preprocessing
#	Graph has an edge cut of size 11.
#	Investigating cutsets yields bound 11.
#	User supplied k value of 1.
#	Continuing using k = 11
# Reduced instance has n = 8, m = 34, and lower_bound = 11:
Searching for minimum-sized set of weights, timeout set at 300
# 	Call guess_weight with k = 11
Timed out after 300 seconds
         115553426 function calls (115553396 primitive calls) in 300.000 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
 16507416  161.384    0.000  244.969    0.000 flow.py:553(push)
 16507415   51.520    0.000   63.667    0.000 flow.py:505(copy)
        1   46.456   46.456  300.000  300.000 dp.py:14(solve)
 16507416   19.917    0.000   19.917    0.000 flow.py:584(distribute)
 16507416    9.481    0.000    9.481    0.000 flow.py:495(__init__)
 16507415    8.573    0.000    8.573    0.000 flow.py:464(add_constraint)
 33014832    2.666    0.000    2.666    0.000 {method 'items' of 'dict' objects}
       22    0.000    0.000    0.000    0.000 {built-in method numpy.linalg.lapack_lite.dgelsd}
       11    0.000    0.000    0.002    0.000 linalg.py:1830(lstsq)
      132    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.array}
       11    0.000    0.000    0.003    0.000 flow.py:343(add_constraint)
       10    0.000    0.000    0.000    0.000 function_base.py:4740(insert)
       11    0.000    0.000    0.000    0.000 flow.py:239(__init__)
       11    0.000    0.000    0.002    0.000 flow.py:296(_test_row)
       67    0.000    0.000    0.000    0.000 defmatrix.py:314(__getitem__)
        1    0.000    0.000    0.000    0.000 linalg.py:296(solve)
    63/51    0.000    0.000    0.000    0.000 defmatrix.py:292(__array_finalize__)
       12    0.000    0.000    0.000    0.000 linalg.py:139(_commonType)
       11    0.000    0.000    0.000    0.000 {method 'reduce' of 'numpy.ufunc' objects}
       58    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.zeros}
       11    0.000    0.000    0.000    0.000 {method 'dot' of 'numpy.ndarray' objects}
       24    0.000    0.000    0.000    0.000 {method 'astype' of 'numpy.ndarray' objects}
       11    0.000    0.000    0.000    0.000 linalg.py:180(_fastCopyAndTranspose)
      197    0.000    0.000    0.000    0.000 {built-in method builtins.isinstance}
       34    0.000    0.000    0.000    0.000 numeric.py:463(asarray)
       22    0.000    0.000    0.000    0.000 fromnumeric.py:1364(ravel)
       22    0.000    0.000    0.000    0.000 {method 'copy' of 'numpy.ndarray' objects}
       11    0.000    0.000    0.000    0.000 fromnumeric.py:1710(sum)
       22    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray._fastCopyAndTranspose}
       11    0.000    0.000    0.000    0.000 defmatrix.py:246(__new__)
       22    0.000    0.000    0.000    0.000 {method 'ravel' of 'numpy.ndarray' objects}
       24    0.000    0.000    0.000    0.000 linalg.py:106(_makearray)
        1    0.000    0.000  300.000  300.000 toboggan.py:77(find_opt_size)
       10    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.empty}
        1    0.000    0.000    0.000    0.000 flow.py:211(has_bad_bounds)
     20/2    0.000    0.000    0.000    0.000 partition.py:23(f)
       11    0.000    0.000    0.000    0.000 linalg.py:168(_to_native_byte_order)
       22    0.000    0.000    0.000    0.000 numeric.py:534(asanyarray)
       56    0.000    0.000    0.000    0.000 {built-in method builtins.min}
       11    0.000    0.000    0.000    0.000 {method 'view' of 'numpy.ndarray' objects}
      115    0.000    0.000    0.000    0.000 {built-in method builtins.len}
       25    0.000    0.000    0.000    0.000 {built-in method builtins.max}
       22    0.000    0.000    0.000    0.000 {method 'transpose' of 'numpy.ndarray' objects}
       10    0.000    0.000    0.000    0.000 numeric.py:1490(rollaxis)
       11    0.000    0.000    0.000    0.000 linalg.py:192(_assertRank2)
       10    0.000    0.000    0.000    0.000 {method '__array_wrap__' of 'numpy.ndarray' objects}
        2    0.000    0.000    0.000    0.000 twodim_base.py:139(eye)
        1    0.000    0.000  300.000  300.000 guess_weight.py:62(solve)
       35    0.000    0.000    0.000    0.000 {built-in method builtins.hash}
        1    0.000    0.000    0.000    0.000 graphs.py:67(labeled_neighborhood)
        1    0.000    0.000    0.000    0.000 partition.py:17(visit)
       11    0.000    0.000    0.000    0.000 _methods.py:31(_sum)
       11    0.000    0.000    0.000    0.000 {built-in method math.log}
        1    0.000    0.000    0.000    0.000 partition.py:15(algorithm_u)
        3    0.000    0.000    0.000    0.000 {built-in method builtins.print}
       23    0.000    0.000    0.000    0.000 linalg.py:111(isComplexType)
       24    0.000    0.000    0.000    0.000 {built-in method builtins.getattr}
        1    0.000    0.000    0.000    0.000 flow.py:550(__hash__)
        1    0.000    0.000    0.000    0.000 flow.py:431(__init__)
       44    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
        1    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.arange}
       11    0.000    0.000    0.000    0.000 linalg.py:124(_realType)
        3    0.000    0.000    0.000    0.000 {method 'format' of 'str' objects}
        2    0.000    0.000    0.000    0.000 signal.py:35(_enum_to_int)
       47    0.000    0.000    0.000    0.000 {built-in method builtins.issubclass}
        2    0.000    0.000    0.000    0.000 numeric.py:2160(isscalar)
        1    0.000    0.000    0.000    0.000 signal.py:45(signal)
        1    0.000    0.000    0.000    0.000 toboggan.py:39(__enter__)
        1    0.000    0.000    0.000    0.000 {built-in method builtins.sorted}
        1    0.000    0.000    0.000    0.000 toboggan.py:44(__exit__)
        1    0.000    0.000    0.000    0.000 signal.py:25(_int_to_enum)
        2    0.000    0.000    0.000    0.000 {built-in method _signal.alarm}
       11    0.000    0.000    0.000    0.000 {method 'get' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 graphs.py:52(__iter__)
        1    0.000    0.000    0.000    0.000 enum.py:215(__call__)
        1    0.000    0.000    0.000    0.000 graphs.py:55(source)
        9    0.000    0.000    0.000    0.000 guess_weight.py:74(<genexpr>)
        1    0.000    0.000    0.000    0.000 fromnumeric.py:1143(squeeze)
        1    0.000    0.000    0.000    0.000 toboggan.py:36(handle_timeout)
        1    0.000    0.000    0.000    0.000 enum.py:459(__new__)
       11    0.000    0.000    0.000    0.000 {method 'is_integer' of 'float' objects}
        1    0.000    0.000    0.000    0.000 {built-in method _signal.signal}
        1    0.000    0.000    0.000    0.000 partition.py:18(<listcomp>)
        1    0.000    0.000    0.000    0.000 linalg.py:209(_assertNdSquareness)
       12    0.000    0.000    0.000    0.000 guess_weight.py:78(<genexpr>)
        1    0.000    0.000    0.000    0.000 {method 'squeeze' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 linalg.py:101(get_linalg_error_extobj)
       10    0.000    0.000    0.000    0.000 {method 'item' of 'numpy.ndarray' objects}
       23    0.000    0.000    0.000    0.000 {method '__array_prepare__' of 'numpy.ndarray' objects}
       21    0.000    0.000    0.000    0.000 {method 'tobytes' of 'memoryview' objects}
        1    0.000    0.000    0.000    0.000 {method 'tolist' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 toboggan.py:32(__init__)
       11    0.000    0.000    0.000    0.000 linalg.py:130(_linalgRealType)
        1    0.000    0.000    0.000    0.000 graphs.py:87(in_neighborhood)
        1    0.000    0.000    0.000    0.000 flow.py:488(__hash__)
        1    0.000    0.000    0.000    0.000 linalg.py:198(_assertRankAtLeast2)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 graphs.py:129(in_degree)
        1    0.000    0.000    0.000    0.000 {built-in method builtins.iter}


# All_info	n_in	m_in	n_red	m_red	k_gtrue	k_cut	k_impro	k_opt	time_w	time_p
All_info	56	82	8	34	12	11	11	None	300	0
weights	
Finished instance.

# Timeout is set to 300
# Recovering paths
# Running on instances 12619
# Ground-truth available in file ../../research/instances/rnaseq/zebrafish/34.truth

File 34.graph instance 12618 name ENSDARG00000041689 with n = 25, m = 37, and truth = 7:
[(0, 4, 24), (0, 4, 28), (0, 14, 249), (0, 4, 2), (0, 4, 384), (4, 7, 24), (4, 7, 414), (7, 9, 413), (7, 9, 25), (9, 14, 411), (9, 14, 27), (14, 17, 436), (14, 17, 251), (17, 24, 3), (17, 20, 295), (17, 24, 384), (17, 20, 5), (20, 24, 22), (20, 24, 29), (20, 24, 249)]
# Preprocessing
#	Graph has an edge cut of size 5.
#	Investigating cutsets yields bound 6.
#	User supplied k value of 1.
#	Continuing using k = 6
# Reduced instance has n = 8, m = 20, and lower_bound = 6:
Searching for minimum-sized set of weights, timeout set at 300
# 	Call guess_weight with k = 6
Timed out after 300 seconds
         179318807 function calls (178440169 primitive calls) in 300.000 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
  2965914   47.389    0.000   47.389    0.000 {built-in method numpy.linalg.lapack_lite.dgelsd}
  1482958   43.847    0.000  168.579    0.000 linalg.py:1830(lstsq)
 16983363   26.992    0.000   26.992    0.000 {built-in method numpy.core.multiarray.array}
  1482958   17.129    0.000  283.258    0.000 flow.py:343(add_constraint)
  1482958   12.871    0.000  218.176    0.000 flow.py:296(_test_row)
   730011   11.519    0.000   20.243    0.000 linalg.py:296(solve)
   731656   11.015    0.000   18.535    0.000 function_base.py:4740(insert)
  3899582   10.307    0.000   14.241    0.000 defmatrix.py:314(__getitem__)
7406306/6540000    7.703    0.000    8.790    0.000 defmatrix.py:292(__array_finalize__)
  1484973    7.689    0.000    7.689    0.000 {method 'reduce' of 'numpy.ufunc' objects}
  7415342    6.318    0.000    6.318    0.000 {built-in method numpy.core.multiarray.zeros}
  3530001    5.794    0.000    5.794    0.000 {method 'astype' of 'numpy.ndarray' objects}
      411    5.393    0.013  299.961    0.730 dp.py:14(solve)
   732067    5.319    0.000   15.313    0.000 flow.py:239(__init__)
   754313    5.280    0.000   10.992    0.000 flow.py:553(push)
  2965930    4.253    0.000   10.990    0.000 fromnumeric.py:1364(ravel)
  1482957    4.096    0.000   12.854    0.000 fromnumeric.py:1710(sum)
 18821995    3.737    0.000    3.737    0.000 {built-in method builtins.isinstance}
  5157902    3.509    0.000    8.710    0.000 numeric.py:463(asarray)
  2215817    3.502    0.000    4.070    0.000 {method 'copy' of 'numpy.ndarray' objects}
  1482958    3.418    0.000    8.312    0.000 linalg.py:180(_fastCopyAndTranspose)
  4425938    3.394    0.000   10.931    0.000 linalg.py:106(_makearray)
  2965916    3.276    0.000    3.276    0.000 {built-in method numpy.core.multiarray._fastCopyAndTranspose}
  2965930    3.105    0.000    3.105    0.000 {method 'ravel' of 'numpy.ndarray' objects}
   865895    3.064    0.000    3.663    0.000 {method 'dot' of 'numpy.ndarray' objects}
   753821    3.031    0.000    3.864    0.000 flow.py:505(copy)
  2212969    2.981    0.000    3.600    0.000 linalg.py:139(_commonType)
  8144799    2.503    0.000    2.503    0.000 {built-in method builtins.min}
  1482958    2.213    0.000    2.882    0.000 linalg.py:168(_to_native_byte_order)
  2966130    2.195    0.000    2.715    0.000 numeric.py:534(asanyarray)
  2965916    2.044    0.000    3.605    0.000 {method 'transpose' of 'numpy.ndarray' objects}
   754313    1.786    0.000    1.847    0.000 flow.py:584(distribute)
  1482958    1.355    0.000    1.518    0.000 linalg.py:192(_assertRank2)
  3695952    1.322    0.000    1.322    0.000 {built-in method builtins.max}
   732067    1.317    0.000    7.410    0.000 defmatrix.py:246(__new__)
  3695925    1.283    0.000    1.879    0.000 linalg.py:111(isComplexType)
  8122391    1.216    0.000    1.216    0.000 {built-in method builtins.issubclass}
 12722492    1.191    0.000    1.191    0.000 {built-in method builtins.len}
   731656    1.084    0.000    1.084    0.000 numeric.py:1490(rollaxis)
   730011    0.860    0.000    1.339    0.000 linalg.py:209(_assertNdSquareness)
   732871    0.849    0.000    3.839    0.000 {method 'view' of 'numpy.ndarray' objects}
   730011    0.788    0.000    0.788    0.000 {method 'squeeze' of 'numpy.ndarray' objects}
   731668    0.783    0.000    0.783    0.000 {built-in method numpy.core.multiarray.empty}
  4437042    0.778    0.000    0.778    0.000 {built-in method builtins.getattr}
   731656    0.773    0.000    1.599    0.000 {method '__array_wrap__' of 'numpy.ndarray' objects}
   730011    0.763    0.000    1.551    0.000 fromnumeric.py:1143(squeeze)
   864258    0.756    0.000    0.903    0.000 numeric.py:2160(isscalar)
  1482958    0.748    0.000    0.748    0.000 {built-in method math.log}
  1483233    0.713    0.000    8.395    0.000 _methods.py:31(_sum)
   730011    0.697    0.000    0.697    0.000 linalg.py:101(get_linalg_error_extobj)
   754642    0.647    0.000    0.647    0.000 flow.py:495(__init__)
  2581139    0.637    0.000    0.637    0.000 {built-in method builtins.hash}
   730011    0.599    0.000    0.667    0.000 linalg.py:198(_assertRankAtLeast2)
  1482958    0.550    0.000    0.881    0.000 linalg.py:124(_realType)
  3014772    0.537    0.000    0.537    0.000 {method 'append' of 'list' objects}
   447968    0.512    0.000    0.512    0.000 linalg.py:89(_raise_linalgerror_singular)
   191961    0.428    0.000    0.498    0.000 flow.py:431(__init__)
  3247957    0.339    0.000    0.339    0.000 {method '__array_prepare__' of 'numpy.ndarray' objects}
  1483091    0.331    0.000    0.331    0.000 {method 'get' of 'dict' objects}
  1463723    0.298    0.000    0.298    0.000 {method 'tobytes' of 'memoryview' objects}
   238337    0.197    0.000    0.197    0.000 flow.py:464(add_constraint)
  1511940    0.189    0.000    0.189    0.000 {method 'items' of 'dict' objects}
   282043    0.169    0.000    0.169    0.000 {method 'tolist' of 'numpy.ndarray' objects}
  1482958    0.160    0.000    0.160    0.000 linalg.py:130(_linalgRealType)
   731656    0.159    0.000    0.159    0.000 {method 'item' of 'numpy.ndarray' objects}
  1287564    0.118    0.000    0.118    0.000 {method 'is_integer' of 'float' objects}
     7901    0.035    0.000    0.046    0.000 partition.py:17(visit)
     5840    0.027    0.000    0.030    0.000 guess_weight.py:43(is_feasible)
       12    0.014    0.001    0.093    0.008 _linprog.py:212(_solve_simplex)
19689/8393    0.013    0.000    0.060    0.000 partition.py:23(f)
        1    0.010    0.010  300.000  300.000 guess_weight.py:62(solve)
     1072    0.009    0.000    0.023    0.000 core.py:2913(__array_finalize__)
     7901    0.007    0.000    0.007    0.000 partition.py:18(<listcomp>)
     1204    0.006    0.000    0.013    0.000 core.py:2887(_update_from)
      132    0.004    0.000    0.015    0.000 core.py:1157(__call__)
2304/1896    0.003    0.000    0.007    0.000 core.py:3320(__setattr__)
      796    0.003    0.000    0.014    0.000 core.py:3639(filled)
      132    0.002    0.000    0.050    0.000 _linprog.py:173(_pivot_row)
    10330    0.002    0.000    0.002    0.000 {built-in method builtins.sum}
      932    0.002    0.000    0.002    0.000 {built-in method numpy.core.multiarray.copyto}
      408    0.002    0.000    0.004    0.000 core.py:3351(__setmask__)
        8    0.002    0.000    0.097    0.012 _linprog.py:391(_linprog_simplex)
     1427    0.002    0.000    0.002    0.000 flow.py:550(__hash__)
      796    0.002    0.000    0.004    0.000 core.py:440(_check_fill_value)
      492    0.002    0.000    0.002    0.000 partition.py:15(algorithm_u)
      144    0.002    0.000    0.029    0.000 _linprog.py:137(_pivot_col)
      264    0.001    0.000    0.013    0.000 core.py:3893(__eq__)
     5888    0.001    0.000    0.001    0.000 {method 'update' of 'dict' objects}
     3280    0.001    0.000    0.003    0.000 graphs.py:126(out_degree)
      492    0.001    0.000    0.002    0.000 graphs.py:67(labeled_neighborhood)
      132    0.001    0.000    0.003    0.000 core.py:848(__call__)
      408    0.001    0.000    0.021    0.000 core.py:1810(masked_where)
     1336    0.001    0.000    0.001    0.000 core.py:3540(_get_data)
      410    0.001    0.000    0.005    0.000 graphs.py:61(sink)
      276    0.001    0.000    0.003    0.000 core.py:4289(count)
      264    0.001    0.000    0.018    0.000 core.py:5460(min)
     1348    0.001    0.000    0.001    0.000 {built-in method builtins.hasattr}
      816    0.001    0.000    0.002    0.000 core.py:1308(make_mask_descr)
1896/1268    0.001    0.000    0.006    0.000 partition.py:55(b)
      528    0.001    0.000    0.002    0.000 numeric.py:2686(seterr)
      528    0.001    0.000    0.001    0.000 numeric.py:2786(geterr)
     3280    0.001    0.000    0.002    0.000 graphs.py:84(out_neighborhood)
      264    0.001    0.000    0.007    0.000 {method 'view' of 'numpy.generic' objects}
     3280    0.001    0.000    0.001    0.000 graphs.py:78(neighborhood)
      408    0.001    0.000    0.005    0.000 core.py:1531(make_mask)
     1212    0.001    0.000    0.006    0.000 {method 'any' of 'numpy.ndarray' objects}
      221    0.001    0.000    0.001    0.000 flow.py:441(is_redundant)
      264    0.001    0.000    0.001    0.000 numerictypes.py:603(obj2sctype)
     1212    0.001    0.000    0.005    0.000 _methods.py:37(_any)
      411    0.001    0.000    0.001    0.000 graphs.py:55(source)
      672    0.000    0.000    0.006    0.000 core.py:599(filled)
      132    0.000    0.000    0.001    0.000 core.py:645(get_masked_subclass)
      408    0.000    0.000    0.002    0.000 core.py:1626(make_mask_none)
      264    0.000    0.000    0.005    0.000 core.py:6951(where)
      192    0.000    0.000    0.001    0.000 shape_base.py:61(atleast_2d)
      264    0.000    0.000    0.002    0.000 core.py:242(_recursive_extremum_fill_value)
      821    0.000    0.000    0.001    0.000 graphs.py:52(__iter__)
      192    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.concatenate}
      960    0.000    0.000    0.000    0.000 flow.py:444(<genexpr>)
      264    0.000    0.000    0.001    0.000 numeric.py:3088(__exit__)
      264    0.000    0.000    0.002    0.000 numeric.py:3083(__enter__)
      264    0.000    0.000    0.002    0.000 core.py:1798(_check_mask_axis)
      528    0.000    0.000    0.000    0.000 {built-in method numpy.core.umath.seterrobj}
      264    0.000    0.000    0.001    0.000 numerictypes.py:774(__getitem__)
      276    0.000    0.000    0.002    0.000 {method 'sum' of 'numpy.ndarray' objects}
      411    0.000    0.000    0.000    0.000 graphs.py:129(in_degree)
      264    0.000    0.000    0.000    0.000 {method 'nonzero' of 'numpy.ndarray' objects}
      816    0.000    0.000    0.000    0.000 core.py:1287(_recursive_make_descr)
      264    0.000    0.000    0.000    0.000 numeric.py:3079(__init__)
      132    0.000    0.000    0.015    0.000 core.py:4023(__truediv__)
      264    0.000    0.000    0.001    0.000 {method 'min' of 'numpy.ndarray' objects}
      132    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.can_cast}
      264    0.000    0.000    0.002    0.000 core.py:253(minimum_fill_value)
      229    0.000    0.000    0.000    0.000 {built-in method builtins.all}
      264    0.000    0.000    0.001    0.000 {method 'all' of 'numpy.ndarray' objects}
      821    0.000    0.000    0.000    0.000 {built-in method builtins.iter}
      411    0.000    0.000    0.000    0.000 graphs.py:87(in_neighborhood)
     1056    0.000    0.000    0.000    0.000 {built-in method numpy.core.umath.geterrobj}
      132    0.000    0.000    0.000    0.000 core.py:659(<listcomp>)
      410    0.000    0.000    0.000    0.000 flow.py:422(__hash__)
      264    0.000    0.000    0.000    0.000 core.py:672(getdata)
      264    0.000    0.000    0.001    0.000 _methods.py:28(_amin)
       96    0.000    0.000    0.001    0.000 shape_base.py:180(vstack)
      264    0.000    0.000    0.001    0.000 _methods.py:40(_all)
        8    0.000    0.000    0.097    0.012 flow.py:261(is_redundant)
      264    0.000    0.000    0.000    0.000 core.py:1344(getmask)
       31    0.000    0.000    0.000    0.000 flow.py:533(__eq__)
       96    0.000    0.000    0.001    0.000 shape_base.py:234(<listcomp>)
      132    0.000    0.000    0.000    0.000 core.py:3883(_delegate_binop)
        8    0.000    0.000    0.097    0.012 _linprog.py:824(linprog)
      115    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
      264    0.000    0.000    0.000    0.000 {method 'count' of 'tuple' objects}
        4    0.000    0.000    0.000    0.000 function_base.py:4538(delete)
      264    0.000    0.000    0.000    0.000 {method 'pop' of 'dict' objects}
        4    0.000    0.000    0.000    0.000 core.py:2753(__new__)
        4    0.000    0.000    0.000    0.000 _linprog.py:325(<listcomp>)
        8    0.000    0.000    0.000    0.000 index_tricks.py:665(fill_diagonal)
      116    0.000    0.000    0.000    0.000 flow.py:488(__hash__)
        1    0.000    0.000  300.000  300.000 toboggan.py:77(find_opt_size)
        2    0.000    0.000    0.000    0.000 _linprog.py:327(<listcomp>)
        4    0.000    0.000    0.000    0.000 core.py:6155(array)
        8    0.000    0.000    0.000    0.000 fromnumeric.py:1866(any)
        8    0.000    0.000    0.000    0.000 numeric.py:150(ones)
        1    0.000    0.000    0.000    0.000 flow.py:211(has_bad_bounds)
        2    0.000    0.000    0.000    0.000 twodim_base.py:139(eye)
        1    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.arange}
        8    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.count_nonzero}
        8    0.000    0.000    0.000    0.000 optimize.py:112(__getattr__)
        3    0.000    0.000    0.000    0.000 {built-in method builtins.print}
       32    0.000    0.000    0.000    0.000 flow.py:265(<genexpr>)
        8    0.000    0.000    0.000    0.000 numeric.py:380(count_nonzero)
        8    0.000    0.000    0.000    0.000 flow.py:264(<listcomp>)
        4    0.000    0.000    0.000    0.000 core.py:3562(get_fill_value)
        8    0.000    0.000    0.000    0.000 optimize.py:137(_check_unknown_options)
        1    0.000    0.000    0.000    0.000 signal.py:45(signal)
        5    0.000    0.000    0.000    0.000 flow.py:474(__eq__)
        1    0.000    0.000    0.000    0.000 toboggan.py:39(__enter__)
        2    0.000    0.000    0.000    0.000 signal.py:35(_enum_to_int)
        9    0.000    0.000    0.000    0.000 guess_weight.py:74(<genexpr>)
        8    0.000    0.000    0.000    0.000 {built-in method builtins.abs}
        3    0.000    0.000    0.000    0.000 {method 'format' of 'str' objects}
        4    0.000    0.000    0.000    0.000 {method 'indices' of 'slice' objects}
        2    0.000    0.000    0.000    0.000 {built-in method _signal.alarm}
        1    0.000    0.000    0.000    0.000 enum.py:215(__call__)
        1    0.000    0.000    0.000    0.000 signal.py:25(_int_to_enum)
        1    0.000    0.000    0.000    0.000 {built-in method _signal.signal}
        1    0.000    0.000    0.000    0.000 toboggan.py:44(__exit__)
        1    0.000    0.000    0.000    0.000 toboggan.py:36(handle_timeout)
        1    0.000    0.000    0.000    0.000 enum.py:459(__new__)
        1    0.000    0.000    0.000    0.000 getlimits.py:96(__new__)
        8    0.000    0.000    0.000    0.000 {method 'lower' of 'str' objects}
        1    0.000    0.000    0.000    0.000 toboggan.py:32(__init__)
        4    0.000    0.000    0.000    0.000 index_tricks.py:650(__getitem__)
       17    0.000    0.000    0.000    0.000 guess_weight.py:82(<lambda>)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}


# All_info	n_in	m_in	n_red	m_red	k_gtrue	k_cut	k_impro	k_opt	time_w	time_p
All_info	25	37	8	20	7	5	6	None	300	0
weights	
Finished instance.

# Timeout is set to 300
# Recovering paths
# Running on instances 13116
# Ground-truth available in file ../../research/instances/rnaseq/zebrafish/34.truth

File 34.graph instance 13115 name ENSDARG00000058693 with n = 57, m = 84, and truth = 11:
[(0, 38, 344), (0, 36, 16), (0, 36, 55), (0, 36, 466), (0, 36, 2), (0, 36, 269), (0, 25, 56), (0, 25, 303), (0, 4, 16), (0, 4, 253), (0, 4, 17), (4, 10, 17), (4, 10, 269), (10, 56, 17), (10, 25, 253), (10, 25, 16), (25, 36, 16), (25, 36, 612), (36, 38, 56), (36, 38, 1380), (38, 40, 1115), (38, 40, 665), (40, 44, 810), (40, 44, 375), (40, 44, 2), (40, 44, 593), (44, 56, 55), (44, 56, 269), (44, 56, 466), (44, 56, 56), (44, 56, 2), (44, 56, 253), (44, 56, 16), (44, 56, 16), (44, 56, 344), (44, 56, 303)]
# Preprocessing
#	Graph has an edge cut of size 11.
#	Investigating cutsets yields bound 11.
#	User supplied k value of 1.
#	Continuing using k = 11
# Reduced instance has n = 9, m = 36, and lower_bound = 11:
Searching for minimum-sized set of weights, timeout set at 300
# 	Call guess_weight with k = 11
Timed out after 300 seconds
         119953486 function calls (119953456 primitive calls) in 300.000 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
 17135995  161.103    0.000  244.592    0.000 flow.py:553(push)
 17135995   51.707    0.000   64.107    0.000 flow.py:505(copy)
        1   46.507   46.507  300.000  300.000 dp.py:14(solve)
 17135996   19.382    0.000   19.382    0.000 flow.py:584(distribute)
 17135996    9.518    0.000    9.518    0.000 flow.py:495(__init__)
 17135994    8.898    0.000    8.898    0.000 flow.py:464(add_constraint)
 34271992    2.882    0.000    2.882    0.000 {method 'items' of 'dict' objects}
       22    0.000    0.000    0.000    0.000 {built-in method numpy.linalg.lapack_lite.dgelsd}
       11    0.000    0.000    0.002    0.000 linalg.py:1830(lstsq)
      132    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.array}
       11    0.000    0.000    0.003    0.000 flow.py:343(add_constraint)
       10    0.000    0.000    0.000    0.000 function_base.py:4740(insert)
       11    0.000    0.000    0.000    0.000 flow.py:239(__init__)
       11    0.000    0.000    0.002    0.000 flow.py:296(_test_row)
        1    0.000    0.000    0.000    0.000 linalg.py:296(solve)
       67    0.000    0.000    0.000    0.000 defmatrix.py:314(__getitem__)
    63/51    0.000    0.000    0.000    0.000 defmatrix.py:292(__array_finalize__)
       11    0.000    0.000    0.000    0.000 {method 'reduce' of 'numpy.ufunc' objects}
       58    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.zeros}
      197    0.000    0.000    0.000    0.000 {built-in method builtins.isinstance}
       24    0.000    0.000    0.000    0.000 {method 'astype' of 'numpy.ndarray' objects}
       11    0.000    0.000    0.000    0.000 {method 'dot' of 'numpy.ndarray' objects}
       11    0.000    0.000    0.000    0.000 linalg.py:180(_fastCopyAndTranspose)
       22    0.000    0.000    0.000    0.000 {method 'copy' of 'numpy.ndarray' objects}
       34    0.000    0.000    0.000    0.000 numeric.py:463(asarray)
       22    0.000    0.000    0.000    0.000 fromnumeric.py:1364(ravel)
       22    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray._fastCopyAndTranspose}
       11    0.000    0.000    0.000    0.000 fromnumeric.py:1710(sum)
       22    0.000    0.000    0.000    0.000 {method 'ravel' of 'numpy.ndarray' objects}
        1    0.000    0.000  300.000  300.000 toboggan.py:77(find_opt_size)
       10    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.empty}
       11    0.000    0.000    0.000    0.000 defmatrix.py:246(__new__)
       56    0.000    0.000    0.000    0.000 {built-in method builtins.min}
        1    0.000    0.000  300.000  300.000 guess_weight.py:62(solve)
       11    0.000    0.000    0.000    0.000 linalg.py:168(_to_native_byte_order)
       24    0.000    0.000    0.000    0.000 linalg.py:106(_makearray)
        1    0.000    0.000    0.000    0.000 flow.py:211(has_bad_bounds)
       12    0.000    0.000    0.000    0.000 linalg.py:139(_commonType)
     20/2    0.000    0.000    0.000    0.000 partition.py:23(f)
       22    0.000    0.000    0.000    0.000 numeric.py:534(asanyarray)
       25    0.000    0.000    0.000    0.000 {built-in method builtins.max}
        1    0.000    0.000    0.000    0.000 graphs.py:67(labeled_neighborhood)
       22    0.000    0.000    0.000    0.000 {method 'transpose' of 'numpy.ndarray' objects}
       10    0.000    0.000    0.000    0.000 numeric.py:1490(rollaxis)
       11    0.000    0.000    0.000    0.000 {method 'view' of 'numpy.ndarray' objects}
        2    0.000    0.000    0.000    0.000 twodim_base.py:139(eye)
       23    0.000    0.000    0.000    0.000 linalg.py:111(isComplexType)
       35    0.000    0.000    0.000    0.000 {built-in method builtins.hash}
       10    0.000    0.000    0.000    0.000 {method '__array_wrap__' of 'numpy.ndarray' objects}
      116    0.000    0.000    0.000    0.000 {built-in method builtins.len}
        3    0.000    0.000    0.000    0.000 {built-in method builtins.print}
       11    0.000    0.000    0.000    0.000 linalg.py:192(_assertRank2)
        1    0.000    0.000    0.000    0.000 partition.py:17(visit)
       11    0.000    0.000    0.000    0.000 _methods.py:31(_sum)
       24    0.000    0.000    0.000    0.000 {built-in method builtins.getattr}
       11    0.000    0.000    0.000    0.000 linalg.py:124(_realType)
       11    0.000    0.000    0.000    0.000 {built-in method math.log}
        1    0.000    0.000    0.000    0.000 partition.py:15(algorithm_u)
        1    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.arange}
       10    0.000    0.000    0.000    0.000 guess_weight.py:74(<genexpr>)
       44    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
        3    0.000    0.000    0.000    0.000 {method 'format' of 'str' objects}
        1    0.000    0.000    0.000    0.000 flow.py:431(__init__)
        1    0.000    0.000    0.000    0.000 enum.py:215(__call__)
       47    0.000    0.000    0.000    0.000 {built-in method builtins.issubclass}
        2    0.000    0.000    0.000    0.000 signal.py:35(_enum_to_int)
        1    0.000    0.000    0.000    0.000 signal.py:45(signal)
        2    0.000    0.000    0.000    0.000 numeric.py:2160(isscalar)
        1    0.000    0.000    0.000    0.000 toboggan.py:39(__enter__)
       10    0.000    0.000    0.000    0.000 {method 'item' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 graphs.py:52(__iter__)
        2    0.000    0.000    0.000    0.000 {built-in method _signal.alarm}
        1    0.000    0.000    0.000    0.000 fromnumeric.py:1143(squeeze)
        1    0.000    0.000    0.000    0.000 flow.py:550(__hash__)
        1    0.000    0.000    0.000    0.000 toboggan.py:36(handle_timeout)
        1    0.000    0.000    0.000    0.000 {built-in method builtins.sorted}
        1    0.000    0.000    0.000    0.000 toboggan.py:44(__exit__)
        1    0.000    0.000    0.000    0.000 graphs.py:55(source)
       11    0.000    0.000    0.000    0.000 {method 'get' of 'dict' objects}
       23    0.000    0.000    0.000    0.000 {method '__array_prepare__' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 signal.py:25(_int_to_enum)
       12    0.000    0.000    0.000    0.000 guess_weight.py:78(<genexpr>)
        1    0.000    0.000    0.000    0.000 {built-in method _signal.signal}
       21    0.000    0.000    0.000    0.000 {method 'tobytes' of 'memoryview' objects}
        1    0.000    0.000    0.000    0.000 {method 'tolist' of 'numpy.ndarray' objects}
       11    0.000    0.000    0.000    0.000 linalg.py:130(_linalgRealType)
        1    0.000    0.000    0.000    0.000 graphs.py:129(in_degree)
        1    0.000    0.000    0.000    0.000 {method 'squeeze' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 partition.py:18(<listcomp>)
        1    0.000    0.000    0.000    0.000 linalg.py:101(get_linalg_error_extobj)
        1    0.000    0.000    0.000    0.000 graphs.py:87(in_neighborhood)
        1    0.000    0.000    0.000    0.000 toboggan.py:32(__init__)
        1    0.000    0.000    0.000    0.000 enum.py:459(__new__)
        1    0.000    0.000    0.000    0.000 linalg.py:198(_assertRankAtLeast2)
       11    0.000    0.000    0.000    0.000 {method 'is_integer' of 'float' objects}
        1    0.000    0.000    0.000    0.000 linalg.py:209(_assertNdSquareness)
        1    0.000    0.000    0.000    0.000 flow.py:488(__hash__)
        1    0.000    0.000    0.000    0.000 {built-in method builtins.iter}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}


# All_info	n_in	m_in	n_red	m_red	k_gtrue	k_cut	k_impro	k_opt	time_w	time_p
All_info	57	84	9	36	11	11	11	None	300	0
weights	
Finished instance.

# Timeout is set to 300
# Recovering paths
# Running on instances 8910
# Ground-truth available in file ../../research/instances/rnaseq/zebrafish/95.truth

File 95.graph instance 8909 name ENSDARG00000044062 with n = 31, m = 47, and truth = 9:
[(0, 5, 1), (0, 5, 62), (0, 5, 164), (0, 5, 5), (0, 5, 2), (0, 17, 26), (0, 17, 586), (0, 7, 964), (5, 17, 67), (5, 7, 167), (7, 17, 1129), (7, 17, 2), (17, 21, 966), (17, 30, 586), (17, 21, 2), (17, 21, 167), (17, 30, 62), (17, 28, 26), (17, 28, 1), (21, 30, 5), (21, 30, 1130), (28, 30, 26), (28, 30, 1)]
# Preprocessing
#	Graph has an edge cut of size 8.
#	Investigating cutsets yields bound 8.
#	User supplied k value of 1.
#	Continuing using k = 8
# Reduced instance has n = 7, m = 23, and lower_bound = 8:
Searching for minimum-sized set of weights, timeout set at 300
# 	Call guess_weight with k = 8
# 	Call guess_weight with k = 9
Number of 1s is 1
Timed out after 300 seconds
         185111223 function calls (185110986 primitive calls) in 300.000 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
  2695278   48.575    0.000   48.575    0.000 {built-in method numpy.linalg.lapack_lite.dgelsd}
  1347639   40.319    0.000  160.414    0.000 linalg.py:1830(lstsq)
 15020616   23.220    0.000   23.220    0.000 {built-in method numpy.core.multiarray.array}
  1347639   21.610    0.000  251.423    0.000 flow.py:296(_test_row)
  1347616   20.881    0.000   37.611    0.000 linalg.py:296(solve)
  1725665   15.061    0.000   26.285    0.000 flow.py:553(push)
  2695355   11.153    0.000   16.512    0.000 defmatrix.py:314(__getitem__)
        3    9.407    3.136  299.999  100.000 dp.py:14(solve)
  5390508    8.676    0.000    8.676    0.000 {method 'astype' of 'numpy.ndarray' objects}
  1347639    7.078    0.000    7.078    0.000 {method 'reduce' of 'numpy.ufunc' objects}
  1725659    6.449    0.000    8.051    0.000 flow.py:505(copy)
  1544199    6.449    0.000  262.991    0.000 flow.py:343(add_constraint)
  6738201    5.810    0.000    5.810    0.000 {built-in method numpy.core.multiarray.zeros}
5390600/5390572    4.236    0.000    5.101    0.000 defmatrix.py:292(__array_finalize__)
  5390510    4.154    0.000   13.161    0.000 linalg.py:106(_makearray)
  2695278    4.107    0.000   10.325    0.000 fromnumeric.py:1364(ravel)
  1347639    3.771    0.000   11.855    0.000 fromnumeric.py:1710(sum)
  2695254    3.535    0.000    4.254    0.000 linalg.py:139(_commonType)
  5390533    3.462    0.000    8.033    0.000 numeric.py:463(asarray)
  1347615    3.237    0.000    3.767    0.000 flow.py:431(__init__)
  1347639    3.174    0.000    7.660    0.000 linalg.py:180(_fastCopyAndTranspose)
  1725665    3.172    0.000    3.173    0.000 flow.py:584(distribute)
  2695278    2.909    0.000    2.909    0.000 {built-in method numpy.core.multiarray._fastCopyAndTranspose}
  2695278    2.870    0.000    2.870    0.000 {method 'ravel' of 'numpy.ndarray' objects}
 13476569    2.623    0.000    2.623    0.000 {built-in method builtins.isinstance}
  8085835    2.463    0.000    2.463    0.000 {built-in method builtins.min}
  2695278    2.046    0.000    2.493    0.000 numeric.py:534(asanyarray)
  1347665    2.024    0.000    2.024    0.000 {method 'copy' of 'numpy.ndarray' objects}
  1347639    1.978    0.000    2.622    0.000 linalg.py:168(_to_native_byte_order)
  2695278    1.938    0.000    3.501    0.000 {method 'transpose' of 'numpy.ndarray' objects}
  4042966    1.512    0.000    1.512    0.000 {built-in method builtins.max}
  1347616    1.492    0.000    2.381    0.000 linalg.py:209(_assertNdSquareness)
  1347616    1.434    0.000    1.434    0.000 {method 'squeeze' of 'numpy.ndarray' objects}
  4042893    1.397    0.000    2.017    0.000 linalg.py:111(isComplexType)
  9433401    1.339    0.000    1.339    0.000 {built-in method builtins.issubclass}
  1667782    1.315    0.000    1.315    0.000 flow.py:464(add_constraint)
  1347616    1.290    0.000    2.724    0.000 fromnumeric.py:1143(squeeze)
  1347615    1.257    0.000    1.257    0.000 linalg.py:101(get_linalg_error_extobj)
  1725664    1.206    0.000    1.206    0.000 flow.py:495(__init__)
  1347639    1.197    0.000    1.346    0.000 linalg.py:192(_assertRank2)
  1347616    1.139    0.000    1.263    0.000 linalg.py:198(_assertRankAtLeast2)
  1347618    1.077    0.000    1.311    0.000 numeric.py:2160(isscalar)
 10977921    1.038    0.000    1.038    0.000 {built-in method builtins.len}
  5390509    0.975    0.000    0.975    0.000 {built-in method builtins.getattr}
  1347615    0.864    0.000    0.864    0.000 {method 'tolist' of 'numpy.ndarray' objects}
 12128534    0.856    0.000    0.856    0.000 {method 'is_integer' of 'float' objects}
  1347639    0.675    0.000    0.675    0.000 {built-in method math.log}
  1347639    0.653    0.000    7.731    0.000 _methods.py:31(_sum)
  1347639    0.553    0.000    0.851    0.000 linalg.py:124(_realType)
  2695322    0.530    0.000    0.530    0.000 {built-in method builtins.hash}
  2696008    0.526    0.000    0.526    0.000 {method 'append' of 'list' objects}
  4042893    0.459    0.000    0.459    0.000 {method '__array_prepare__' of 'numpy.ndarray' objects}
  3451348    0.396    0.000    0.396    0.000 {method 'items' of 'dict' objects}
  1347639    0.298    0.000    0.298    0.000 {method 'get' of 'dict' objects}
  1347639    0.133    0.000    0.133    0.000 linalg.py:130(_linalgRealType)
       90    0.000    0.000    0.001    0.000 partition.py:17(visit)
       23    0.000    0.000    0.001    0.000 function_base.py:4740(insert)
       65    0.000    0.000    0.000    0.000 guess_weight.py:43(is_feasible)
       26    0.000    0.000    0.001    0.000 flow.py:239(__init__)
        2    0.000    0.000  300.000  150.000 guess_weight.py:62(solve)
   301/96    0.000    0.000    0.001    0.000 partition.py:23(f)
       25    0.000    0.000    0.000    0.000 {method 'dot' of 'numpy.ndarray' objects}
       90    0.000    0.000    0.000    0.000 partition.py:18(<listcomp>)
       26    0.000    0.000    0.000    0.000 defmatrix.py:246(__new__)
      129    0.000    0.000    0.000    0.000 {built-in method builtins.sum}
       23    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.empty}
       23    0.000    0.000    0.000    0.000 numeric.py:1490(rollaxis)
       26    0.000    0.000    0.000    0.000 {method 'view' of 'numpy.ndarray' objects}
        2    0.000    0.000    0.000    0.000 flow.py:211(has_bad_bounds)
       23    0.000    0.000    0.000    0.000 {method '__array_wrap__' of 'numpy.ndarray' objects}
        1    0.000    0.000  300.000  300.000 toboggan.py:77(find_opt_size)
       17    0.000    0.000    0.000    0.000 flow.py:550(__hash__)
        6    0.000    0.000    0.000    0.000 partition.py:15(algorithm_u)
        1    0.000    0.000    0.000    0.000 flow.py:60(_compute_max_weight_bounds)
        4    0.000    0.000    0.000    0.000 twodim_base.py:139(eye)
        6    0.000    0.000    0.000    0.000 graphs.py:67(labeled_neighborhood)
        6    0.000    0.000    0.000    0.000 flow.py:441(is_redundant)
        1    0.000    0.000    0.000    0.000 flow.py:81(_compute_weight_bounds)
       51    0.000    0.000    0.000    0.000 flow.py:444(<genexpr>)
        3    0.000    0.000    0.000    0.000 graphs.py:61(sink)
    20/16    0.000    0.000    0.000    0.000 partition.py:55(b)
        5    0.000    0.000    0.000    0.000 {built-in method builtins.print}
       21    0.000    0.000    0.000    0.000 graphs.py:126(out_degree)
       21    0.000    0.000    0.000    0.000 graphs.py:84(out_neighborhood)
        2    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.arange}
        6    0.000    0.000    0.000    0.000 {built-in method builtins.all}
       28    0.000    0.000    0.000    0.000 graphs.py:78(neighborhood)
        2    0.000    0.000    0.000    0.000 flow.py:533(__eq__)
        8    0.000    0.000    0.000    0.000 graphs.py:52(__iter__)
        5    0.000    0.000    0.000    0.000 {method 'format' of 'str' objects}
        1    0.000    0.000    0.000    0.000 toboggan.py:39(__enter__)
       49    0.000    0.000    0.000    0.000 {method 'tobytes' of 'memoryview' objects}
        2    0.000    0.000    0.000    0.000 signal.py:35(_enum_to_int)
        4    0.000    0.000    0.000    0.000 graphs.py:55(source)
        4    0.000    0.000    0.000    0.000 graphs.py:129(in_degree)
       16    0.000    0.000    0.000    0.000 guess_weight.py:74(<genexpr>)
        1    0.000    0.000    0.000    0.000 flow.py:198(try_larger_k)
        2    0.000    0.000    0.000    0.000 flow.py:474(__eq__)
        1    0.000    0.000    0.000    0.000 enum.py:215(__call__)
        2    0.000    0.000    0.000    0.000 {built-in method _signal.alarm}
        1    0.000    0.000    0.000    0.000 signal.py:45(signal)
        6    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
        1    0.000    0.000    0.000    0.000 {built-in method builtins.sorted}
       13    0.000    0.000    0.000    0.000 guess_weight.py:82(<lambda>)
       11    0.000    0.000    0.000    0.000 guess_weight.py:99(<genexpr>)
        1    0.000    0.000    0.000    0.000 toboggan.py:36(handle_timeout)
        1    0.000    0.000    0.000    0.000 enum.py:459(__new__)
        1    0.000    0.000    0.000    0.000 {built-in method _signal.signal}
        7    0.000    0.000    0.000    0.000 flow.py:488(__hash__)
       23    0.000    0.000    0.000    0.000 {method 'item' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 signal.py:25(_int_to_enum)
        1    0.000    0.000    0.000    0.000 toboggan.py:44(__exit__)
        1    0.000    0.000    0.000    0.000 flow.py:97(<listcomp>)
        9    0.000    0.000    0.000    0.000 guess_weight.py:78(<genexpr>)
        1    0.000    0.000    0.000    0.000 toboggan.py:32(__init__)
        2    0.000    0.000    0.000    0.000 flow.py:422(__hash__)
        1    0.000    0.000    0.000    0.000 flow.py:72(<dictcomp>)
        4    0.000    0.000    0.000    0.000 graphs.py:87(in_neighborhood)
        8    0.000    0.000    0.000    0.000 {built-in method builtins.iter}
        1    0.000    0.000    0.000    0.000 flow.py:101(<listcomp>)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 guess_weight.py:101(<listcomp>)


# All_info	n_in	m_in	n_red	m_red	k_gtrue	k_cut	k_impro	k_opt	time_w	time_p
All_info	31	47	7	23	9	8	8	None	300	0
weights	
Finished instance.

# Timeout is set to 300
# Recovering paths
# Running on instances 10241
# Ground-truth available in file ../../research/instances/rnaseq/zebrafish/95.truth

File 95.graph instance 10240 name ENSDARG00000056322 with n = 35, m = 59, and truth = 12:
[(0, 12, 1414), (0, 12, 374), (0, 12, 9), (0, 12, 26), (0, 12, 138), (0, 12, 2), (0, 2, 7), (0, 2, 368), (2, 12, 7), (2, 12, 368), (12, 34, 368), (12, 25, 283), (12, 18, 33), (12, 25, 138), (12, 25, 170), (12, 18, 9), (12, 18, 2), (12, 25, 1), (12, 25, 927), (12, 18, 381), (12, 25, 26), (18, 34, 7), (18, 34, 9), (18, 34, 2), (18, 34, 33), (18, 34, 374), (25, 34, 170), (25, 34, 1348), (25, 34, 26), (25, 34, 1)]
# Preprocessing
#	Graph has an edge cut of size 12.
#	Investigating cutsets yields bound 12.
#	User supplied k value of 1.
#	Continuing using k = 12
# Reduced instance has n = 6, m = 30, and lower_bound = 12:
Searching for minimum-sized set of weights, timeout set at 300
# 	Call guess_weight with k = 12
Timed out after 300 seconds
         122068556 function calls (122065061 primitive calls) in 300.000 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
 17436658  151.850    0.000  242.043    0.000 flow.py:553(push)
 17436658   57.848    0.000   70.295    0.000 flow.py:505(copy)
        1   47.776   47.776  300.000  300.000 dp.py:14(solve)
 17436659   19.893    0.000   19.897    0.000 flow.py:584(distribute)
 17436657   10.178    0.000   10.178    0.000 flow.py:464(add_constraint)
 17436659    9.761    0.000    9.761    0.000 flow.py:495(__init__)
 34873318    2.687    0.000    2.687    0.000 {method 'items' of 'dict' objects}
      433    0.002    0.000    0.003    0.000 partition.py:17(visit)
 3403/434    0.001    0.000    0.005    0.000 partition.py:23(f)
       24    0.001    0.000    0.001    0.000 {built-in method numpy.linalg.lapack_lite.dgelsd}
  886/372    0.000    0.000    0.003    0.000 partition.py:55(b)
     5228    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
       12    0.000    0.000    0.002    0.000 linalg.py:1830(lstsq)
      433    0.000    0.000    0.000    0.000 partition.py:18(<listcomp>)
      144    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.array}
       12    0.000    0.000    0.003    0.000 flow.py:343(add_constraint)
       11    0.000    0.000    0.000    0.000 function_base.py:4740(insert)
       12    0.000    0.000    0.000    0.000 flow.py:239(__init__)
        1    0.000    0.000    0.000    0.000 linalg.py:296(solve)
       12    0.000    0.000    0.002    0.000 flow.py:296(_test_row)
       79    0.000    0.000    0.000    0.000 defmatrix.py:314(__getitem__)
    62/50    0.000    0.000    0.000    0.000 defmatrix.py:292(__array_finalize__)
       12    0.000    0.000    0.000    0.000 {method 'reduce' of 'numpy.ufunc' objects}
       63    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.zeros}
       26    0.000    0.000    0.000    0.000 {method 'astype' of 'numpy.ndarray' objects}
      213    0.000    0.000    0.000    0.000 {built-in method builtins.isinstance}
       12    0.000    0.000    0.000    0.000 linalg.py:180(_fastCopyAndTranspose)
       11    0.000    0.000    0.000    0.000 {method 'dot' of 'numpy.ndarray' objects}
       24    0.000    0.000    0.000    0.000 {method 'copy' of 'numpy.ndarray' objects}
       24    0.000    0.000    0.000    0.000 fromnumeric.py:1364(ravel)
       12    0.000    0.000    0.000    0.000 fromnumeric.py:1710(sum)
       37    0.000    0.000    0.000    0.000 numeric.py:463(asarray)
       24    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray._fastCopyAndTranspose}
       12    0.000    0.000    0.000    0.000 defmatrix.py:246(__new__)
       24    0.000    0.000    0.000    0.000 {method 'ravel' of 'numpy.ndarray' objects}
       13    0.000    0.000    0.000    0.000 linalg.py:139(_commonType)
       11    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.empty}
       61    0.000    0.000    0.000    0.000 {built-in method builtins.min}
        1    0.000    0.000  300.000  300.000 toboggan.py:77(find_opt_size)
        1    0.000    0.000    0.000    0.000 flow.py:211(has_bad_bounds)
       12    0.000    0.000    0.000    0.000 linalg.py:168(_to_native_byte_order)
       24    0.000    0.000    0.000    0.000 {method 'transpose' of 'numpy.ndarray' objects}
       26    0.000    0.000    0.000    0.000 linalg.py:106(_makearray)
       27    0.000    0.000    0.000    0.000 {built-in method builtins.max}
       24    0.000    0.000    0.000    0.000 numeric.py:534(asanyarray)
       12    0.000    0.000    0.000    0.000 {method 'view' of 'numpy.ndarray' objects}
       11    0.000    0.000    0.000    0.000 numeric.py:1490(rollaxis)
       11    0.000    0.000    0.000    0.000 {method '__array_wrap__' of 'numpy.ndarray' objects}
      121    0.000    0.000    0.000    0.000 {built-in method builtins.len}
        2    0.000    0.000    0.000    0.000 twodim_base.py:139(eye)
       12    0.000    0.000    0.000    0.000 linalg.py:192(_assertRank2)
        1    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.arange}
       38    0.000    0.000    0.000    0.000 {built-in method builtins.hash}
        1    0.000    0.000  300.000  300.000 guess_weight.py:62(solve)
       12    0.000    0.000    0.000    0.000 linalg.py:124(_realType)
       25    0.000    0.000    0.000    0.000 linalg.py:111(isComplexType)
       26    0.000    0.000    0.000    0.000 {built-in method builtins.getattr}
        2    0.000    0.000    0.000    0.000 signal.py:35(_enum_to_int)
       51    0.000    0.000    0.000    0.000 {built-in method builtins.issubclass}
        3    0.000    0.000    0.000    0.000 {built-in method builtins.print}
        1    0.000    0.000    0.000    0.000 graphs.py:67(labeled_neighborhood)
        1    0.000    0.000    0.000    0.000 flow.py:550(__hash__)
       12    0.000    0.000    0.000    0.000 {built-in method math.log}
        1    0.000    0.000    0.000    0.000 flow.py:431(__init__)
       12    0.000    0.000    0.000    0.000 _methods.py:31(_sum)
       23    0.000    0.000    0.000    0.000 {method 'tobytes' of 'memoryview' objects}
        1    0.000    0.000    0.000    0.000 partition.py:15(algorithm_u)
        3    0.000    0.000    0.000    0.000 {method 'format' of 'str' objects}
       12    0.000    0.000    0.000    0.000 {method 'is_integer' of 'float' objects}
        1    0.000    0.000    0.000    0.000 graphs.py:52(__iter__)
        1    0.000    0.000    0.000    0.000 enum.py:215(__call__)
        1    0.000    0.000    0.000    0.000 toboggan.py:39(__enter__)
        1    0.000    0.000    0.000    0.000 {built-in method builtins.sorted}
        1    0.000    0.000    0.000    0.000 fromnumeric.py:1143(squeeze)
       11    0.000    0.000    0.000    0.000 {method 'item' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 signal.py:45(signal)
        2    0.000    0.000    0.000    0.000 {built-in method _signal.alarm}
        1    0.000    0.000    0.000    0.000 graphs.py:55(source)
        1    0.000    0.000    0.000    0.000 toboggan.py:36(handle_timeout)
        7    0.000    0.000    0.000    0.000 guess_weight.py:74(<genexpr>)
        1    0.000    0.000    0.000    0.000 toboggan.py:44(__exit__)
       25    0.000    0.000    0.000    0.000 {method '__array_prepare__' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 graphs.py:129(in_degree)
        1    0.000    0.000    0.000    0.000 {built-in method _signal.signal}
        1    0.000    0.000    0.000    0.000 signal.py:25(_int_to_enum)
       12    0.000    0.000    0.000    0.000 linalg.py:130(_linalgRealType)
        1    0.000    0.000    0.000    0.000 {method 'tolist' of 'numpy.ndarray' objects}
       13    0.000    0.000    0.000    0.000 guess_weight.py:78(<genexpr>)
        1    0.000    0.000    0.000    0.000 flow.py:488(__hash__)
        1    0.000    0.000    0.000    0.000 linalg.py:101(get_linalg_error_extobj)
        1    0.000    0.000    0.000    0.000 linalg.py:198(_assertRankAtLeast2)
        1    0.000    0.000    0.000    0.000 toboggan.py:32(__init__)
        1    0.000    0.000    0.000    0.000 {method 'squeeze' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 enum.py:459(__new__)
        1    0.000    0.000    0.000    0.000 numeric.py:2160(isscalar)
        1    0.000    0.000    0.000    0.000 linalg.py:209(_assertNdSquareness)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 graphs.py:87(in_neighborhood)
       12    0.000    0.000    0.000    0.000 {method 'get' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 {built-in method builtins.iter}


# All_info	n_in	m_in	n_red	m_red	k_gtrue	k_cut	k_impro	k_opt	time_w	time_p
All_info	35	59	6	30	12	12	12	None	300	0
weights	
Finished instance.

# Timeout is set to 300
# Recovering paths
# Running on instances 10343
# Ground-truth available in file ../../research/instances/rnaseq/zebrafish/95.truth

File 95.graph instance 10342 name ENSDARG00000028148 with n = 23, m = 34, and truth = 7:
[(0, 9, 511), (0, 9, 131), (0, 3, 151), (0, 3, 4), (0, 3, 736), (3, 9, 151), (3, 9, 740), (9, 12, 667), (9, 12, 866), (12, 15, 515), (12, 15, 1018), (15, 17, 129), (15, 17, 1404), (17, 22, 131), (17, 22, 511), (17, 22, 151), (17, 22, 4), (17, 22, 736)]
# Preprocessing
#	Graph has an edge cut of size 5.
#	Investigating cutsets yields bound 5.
#	User supplied k value of 1.
#	Continuing using k = 5
# Reduced instance has n = 7, m = 18, and lower_bound = 5:
Searching for minimum-sized set of weights, timeout set at 300
# 	Call guess_weight with k = 5
# 	Call guess_weight with k = 6
Timed out after 300 seconds
         174949330 function calls (173801875 primitive calls) in 300.000 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
  2872756   45.997    0.000   45.997    0.000 {built-in method numpy.linalg.lapack_lite.dgelsd}
  1436378   43.389    0.000  166.214    0.000 linalg.py:1830(lstsq)
 16432462   26.802    0.000   26.802    0.000 {built-in method numpy.core.multiarray.array}
  1436378   20.533    0.000  284.324    0.000 flow.py:343(add_constraint)
   820654   12.614    0.000   21.248    0.000 function_base.py:4740(insert)
  1436378   11.393    0.000  205.889    0.000 flow.py:296(_test_row)
  4547092   10.932    0.000   14.996    0.000 defmatrix.py:314(__getitem__)
8122997/7000720    8.984    0.000   10.256    0.000 defmatrix.py:292(__array_finalize__)
   531517    8.623    0.000   15.244    0.000 linalg.py:296(solve)
  1485152    7.756    0.000    7.756    0.000 {method 'reduce' of 'numpy.ufunc' objects}
  7195294    6.322    0.000    6.322    0.000 {built-in method numpy.core.multiarray.zeros}
   820950    6.043    0.000   17.335    0.000 flow.py:239(__init__)
  3230496    5.376    0.000    5.376    0.000 {method 'astype' of 'numpy.ndarray' objects}
      296    4.622    0.016  299.987    1.013 dp.py:14(solve)
  1121981    4.305    0.000    5.707    0.000 {method 'dot' of 'numpy.ndarray' objects}
 20447776    4.222    0.000    4.222    0.000 {built-in method builtins.isinstance}
  2873156    4.206    0.000   10.938    0.000 fromnumeric.py:1364(ravel)
   538965    4.012    0.000    8.509    0.000 flow.py:553(push)
  1436378    3.942    0.000   12.575    0.000 fromnumeric.py:1710(sum)
  2276516    3.668    0.000    4.327    0.000 {method 'copy' of 'numpy.ndarray' objects}
  4763908    3.510    0.000    8.628    0.000 numeric.py:463(asarray)
  1436378    3.459    0.000    8.295    0.000 linalg.py:180(_fastCopyAndTranspose)
  3935790    3.249    0.000   10.317    0.000 linalg.py:106(_makearray)
  2872756    3.234    0.000    3.234    0.000 {built-in method numpy.core.multiarray._fastCopyAndTranspose}
  2873156    3.091    0.000    3.091    0.000 {method 'ravel' of 'numpy.ndarray' objects}
  1967895    2.821    0.000    3.404    0.000 linalg.py:139(_commonType)
  7713426    2.495    0.000    2.495    0.000 {built-in method builtins.min}
   538432    2.328    0.000    3.088    0.000 flow.py:505(copy)
  1436378    2.219    0.000    2.886    0.000 linalg.py:168(_to_native_byte_order)
  2878156    2.177    0.000    2.706    0.000 numeric.py:534(asanyarray)
  2872756    1.994    0.000    3.590    0.000 {method 'transpose' of 'numpy.ndarray' objects}
   820950    1.459    0.000    8.340    0.000 defmatrix.py:246(__new__)
  1436378    1.394    0.000    1.576    0.000 linalg.py:192(_assertRank2)
   538965    1.341    0.000    1.409    0.000 flow.py:584(distribute)
 12557594    1.295    0.000    1.295    0.000 {built-in method builtins.len}
  3404854    1.247    0.000    1.247    0.000 {built-in method builtins.max}
   820654    1.193    0.000    1.193    0.000 numeric.py:1490(rollaxis)
  3404273    1.151    0.000    1.696    0.000 linalg.py:111(isComplexType)
  7352855    1.139    0.000    1.139    0.000 {built-in method builtins.issubclass}
   840406    0.992    0.000    4.756    0.000 {method 'view' of 'numpy.ndarray' objects}
   820654    0.889    0.000    1.852    0.000 {method '__array_wrap__' of 'numpy.ndarray' objects}
  4204316    0.881    0.000    0.881    0.000 {built-in method builtins.getattr}
   820922    0.873    0.000    0.873    0.000 {built-in method numpy.core.multiarray.empty}
   833044    0.830    0.000    0.986    0.000 numeric.py:2160(isscalar)
  1436378    0.752    0.000    0.752    0.000 {built-in method math.log}
  1443042    0.714    0.000    8.309    0.000 _methods.py:31(_sum)
  2618439    0.670    0.000    0.670    0.000 {built-in method builtins.hash}
   531517    0.650    0.000    1.014    0.000 linalg.py:209(_assertNdSquareness)
   539023    0.614    0.000    0.614    0.000 flow.py:495(__init__)
  1436378    0.595    0.000    0.894    0.000 linalg.py:124(_realType)
   531517    0.591    0.000    0.591    0.000 {method 'squeeze' of 'numpy.ndarray' objects}
   531517    0.573    0.000    1.164    0.000 fromnumeric.py:1143(squeeze)
  2931666    0.542    0.000    0.542    0.000 {method 'append' of 'list' objects}
   531517    0.523    0.000    0.523    0.000 linalg.py:101(get_linalg_error_extobj)
   531517    0.460    0.000    0.518    0.000 linalg.py:198(_assertRankAtLeast2)
   352647    0.418    0.000    0.418    0.000 linalg.py:89(_raise_linalgerror_singular)
      268    0.339    0.001    2.308    0.009 _linprog.py:212(_solve_simplex)
  1641604    0.335    0.000    0.335    0.000 {method 'tobytes' of 'memoryview' objects}
  3051626    0.320    0.000    0.320    0.000 {method '__array_prepare__' of 'numpy.ndarray' objects}
  1439577    0.300    0.000    0.300    0.000 {method 'get' of 'dict' objects}
    25920    0.233    0.000    0.590    0.000 core.py:2913(__array_finalize__)
   820654    0.186    0.000    0.186    0.000 {method 'item' of 'numpy.ndarray' objects}
    77206    0.179    0.000    0.209    0.000 flow.py:431(__init__)
  1436378    0.176    0.000    0.176    0.000 linalg.py:130(_linalgRealType)
    29118    0.160    0.000    0.318    0.000 core.py:2887(_update_from)
  1080108    0.148    0.000    0.148    0.000 {method 'items' of 'dict' objects}
   178870    0.111    0.000    0.111    0.000 {method 'tolist' of 'numpy.ndarray' objects}
     3198    0.095    0.000    0.367    0.000 core.py:1157(__call__)
    97125    0.085    0.000    0.085    0.000 flow.py:464(add_constraint)
55578/45716    0.075    0.000    0.170    0.000 core.py:3320(__setattr__)
   637508    0.074    0.000    0.074    0.000 {method 'is_integer' of 'float' objects}
    19256    0.069    0.000    0.340    0.000 core.py:3639(filled)
     3198    0.060    0.000    1.253    0.000 _linprog.py:173(_pivot_row)
    22586    0.055    0.000    0.055    0.000 {built-in method numpy.core.multiarray.copyto}
     9862    0.049    0.000    0.105    0.000 core.py:3351(__setmask__)
      200    0.049    0.000    2.410    0.012 _linprog.py:391(_linprog_simplex)
    19256    0.043    0.000    0.095    0.000 core.py:440(_check_fill_value)
     8911    0.038    0.000    0.049    0.000 partition.py:17(visit)
     3466    0.038    0.000    0.713    0.000 _linprog.py:137(_pivot_col)
     6396    0.037    0.000    0.313    0.000 core.py:3893(__eq__)
   142392    0.034    0.000    0.034    0.000 {method 'update' of 'dict' objects}
     3198    0.034    0.000    0.075    0.000 core.py:848(__call__)
     9862    0.034    0.000    0.518    0.000 core.py:1810(masked_where)
    32316    0.033    0.000    0.033    0.000 core.py:3540(_get_data)
     6664    0.032    0.000    0.084    0.000 core.py:4289(count)
     6396    0.030    0.000    0.440    0.000 core.py:5460(min)
    19724    0.029    0.000    0.040    0.000 core.py:1308(make_mask_descr)
    32584    0.028    0.000    0.028    0.000 {built-in method builtins.hasattr}
    12792    0.024    0.000    0.058    0.000 numeric.py:2686(seterr)
     6396    0.023    0.000    0.170    0.000 {method 'view' of 'numpy.generic' objects}
    12792    0.022    0.000    0.024    0.000 numeric.py:2786(geterr)
     9862    0.020    0.000    0.115    0.000 core.py:1531(make_mask)
    29318    0.018    0.000    0.140    0.000 {method 'any' of 'numpy.ndarray' objects}
     6396    0.014    0.000    0.025    0.000 numerictypes.py:603(obj2sctype)
22236/9444    0.013    0.000    0.066    0.000 partition.py:23(f)
    16258    0.012    0.000    0.139    0.000 core.py:599(filled)
    29318    0.012    0.000    0.122    0.000 _methods.py:37(_any)
     3198    0.011    0.000    0.016    0.000 core.py:645(get_masked_subclass)
     6396    0.011    0.000    0.137    0.000 core.py:6951(where)
     9862    0.011    0.000    0.042    0.000 core.py:1626(make_mask_none)
     4800    0.010    0.000    0.016    0.000 shape_base.py:61(atleast_2d)
     4800    0.009    0.000    0.009    0.000 {built-in method numpy.core.multiarray.concatenate}
     6396    0.009    0.000    0.041    0.000 core.py:242(_recursive_extremum_fill_value)
     1605    0.008    0.000    0.009    0.000 guess_weight.py:43(is_feasible)
     6396    0.008    0.000    0.034    0.000 numeric.py:3088(__exit__)
    12792    0.007    0.000    0.007    0.000 {built-in method numpy.core.umath.seterrobj}
     6396    0.007    0.000    0.041    0.000 core.py:1798(_check_mask_axis)
     3198    0.007    0.000    0.376    0.000 core.py:4023(__truediv__)
     6396    0.007    0.000    0.032    0.000 numerictypes.py:774(__getitem__)
    19724    0.007    0.000    0.007    0.000 core.py:1287(_recursive_make_descr)
     6396    0.007    0.000    0.038    0.000 numeric.py:3083(__enter__)
     1878    0.007    0.000    0.011    0.000 flow.py:441(is_redundant)
     6396    0.007    0.000    0.007    0.000 {method 'nonzero' of 'numpy.ndarray' objects}
     6664    0.006    0.000    0.044    0.000 {method 'sum' of 'numpy.ndarray' objects}
     8911    0.006    0.000    0.006    0.000 partition.py:18(<listcomp>)
     6396    0.006    0.000    0.007    0.000 numeric.py:3079(__init__)
     6396    0.006    0.000    0.035    0.000 {method 'min' of 'numpy.ndarray' objects}
     6396    0.006    0.000    0.049    0.000 core.py:253(minimum_fill_value)
     3198    0.005    0.000    0.005    0.000 {built-in method numpy.core.multiarray.can_cast}
     6396    0.005    0.000    0.034    0.000 {method 'all' of 'numpy.ndarray' objects}
    25584    0.004    0.000    0.004    0.000 {built-in method numpy.core.umath.geterrobj}
        2    0.004    0.002  300.000  150.000 guess_weight.py:62(solve)
6312/3788    0.004    0.000    0.020    0.000 partition.py:55(b)
     6396    0.003    0.000    0.008    0.000 core.py:672(getdata)
     3198    0.003    0.000    0.003    0.000 core.py:659(<listcomp>)
     6396    0.003    0.000    0.029    0.000 _methods.py:28(_amin)
     6407    0.003    0.000    0.003    0.000 flow.py:444(<genexpr>)
     6396    0.003    0.000    0.029    0.000 _methods.py:40(_all)
     2400    0.003    0.000    0.027    0.000 shape_base.py:180(vstack)
      253    0.003    0.000    2.418    0.010 flow.py:261(is_redundant)
     2400    0.002    0.000    0.018    0.000 shape_base.py:234(<listcomp>)
     6396    0.002    0.000    0.004    0.000 core.py:1344(getmask)
     1473    0.002    0.000    0.003    0.000 flow.py:550(__hash__)
      533    0.002    0.000    0.002    0.000 partition.py:15(algorithm_u)
     2131    0.002    0.000    0.004    0.000 {built-in method builtins.all}
     6396    0.002    0.000    0.002    0.000 {method 'pop' of 'dict' objects}
     3198    0.001    0.000    0.002    0.000 core.py:3883(_delegate_binop)
      533    0.001    0.000    0.002    0.000 graphs.py:67(labeled_neighborhood)
     6396    0.001    0.000    0.001    0.000 {method 'count' of 'tuple' objects}
      200    0.001    0.000    2.412    0.012 _linprog.py:824(linprog)
       68    0.001    0.000    0.001    0.000 function_base.py:4538(delete)
     2072    0.001    0.000    0.002    0.000 graphs.py:126(out_degree)
      296    0.001    0.000    0.003    0.000 graphs.py:61(sink)
      200    0.001    0.000    0.001    0.000 index_tricks.py:665(fill_diagonal)
     2072    0.001    0.000    0.001    0.000 graphs.py:84(out_neighborhood)
       68    0.001    0.000    0.003    0.000 core.py:2753(__new__)
       68    0.001    0.000    0.001    0.000 _linprog.py:325(<listcomp>)
     2225    0.001    0.000    0.001    0.000 {built-in method builtins.sum}
     2079    0.001    0.000    0.001    0.000 graphs.py:78(neighborhood)
      200    0.000    0.000    0.002    0.000 fromnumeric.py:1866(any)
      297    0.000    0.000    0.001    0.000 graphs.py:55(source)
      818    0.000    0.000    0.000    0.000 flow.py:265(<genexpr>)
      594    0.000    0.000    0.000    0.000 graphs.py:52(__iter__)
       68    0.000    0.000    0.003    0.000 core.py:6155(array)
      200    0.000    0.000    0.001    0.000 numeric.py:150(ones)
      253    0.000    0.000    0.000    0.000 flow.py:264(<listcomp>)
       96    0.000    0.000    0.000    0.000 flow.py:533(__eq__)
      350    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
      297    0.000    0.000    0.000    0.000 graphs.py:129(in_degree)
      200    0.000    0.000    0.000    0.000 optimize.py:112(__getattr__)
      200    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.count_nonzero}
      297    0.000    0.000    0.000    0.000 graphs.py:87(in_neighborhood)
      594    0.000    0.000    0.000    0.000 {built-in method builtins.iter}
      200    0.000    0.000    0.000    0.000 numeric.py:380(count_nonzero)
      363    0.000    0.000    0.000    0.000 flow.py:422(__hash__)
       68    0.000    0.000    0.000    0.000 core.py:3562(get_fill_value)
      200    0.000    0.000    0.000    0.000 {built-in method builtins.abs}
      200    0.000    0.000    0.000    0.000 {method 'lower' of 'str' objects}
      283    0.000    0.000    0.000    0.000 flow.py:488(__hash__)
      200    0.000    0.000    0.000    0.000 optimize.py:137(_check_unknown_options)
       68    0.000    0.000    0.000    0.000 {method 'indices' of 'slice' objects}
       68    0.000    0.000    0.000    0.000 index_tricks.py:650(__getitem__)
        1    0.000    0.000  300.000  300.000 toboggan.py:77(find_opt_size)
        2    0.000    0.000    0.000    0.000 flow.py:211(has_bad_bounds)
        1    0.000    0.000    0.000    0.000 flow.py:60(_compute_max_weight_bounds)
       10    0.000    0.000    0.000    0.000 flow.py:474(__eq__)
        4    0.000    0.000    0.000    0.000 twodim_base.py:139(eye)
        2    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.arange}
        1    0.000    0.000    0.000    0.000 flow.py:81(_compute_weight_bounds)
        4    0.000    0.000    0.000    0.000 {built-in method builtins.print}
        4    0.000    0.000    0.000    0.000 {method 'format' of 'str' objects}
       16    0.000    0.000    0.000    0.000 guess_weight.py:74(<genexpr>)
        1    0.000    0.000    0.000    0.000 enum.py:215(__call__)
        1    0.000    0.000    0.000    0.000 flow.py:198(try_larger_k)
        2    0.000    0.000    0.000    0.000 signal.py:35(_enum_to_int)
        1    0.000    0.000    0.000    0.000 toboggan.py:39(__enter__)
        1    0.000    0.000    0.000    0.000 signal.py:45(signal)
        2    0.000    0.000    0.000    0.000 {built-in method _signal.alarm}
        1    0.000    0.000    0.000    0.000 {built-in method builtins.sorted}
        1    0.000    0.000    0.000    0.000 signal.py:25(_int_to_enum)
        1    0.000    0.000    0.000    0.000 getlimits.py:96(__new__)
        1    0.000    0.000    0.000    0.000 {built-in method _signal.signal}
        1    0.000    0.000    0.000    0.000 toboggan.py:36(handle_timeout)
       12    0.000    0.000    0.000    0.000 guess_weight.py:82(<lambda>)
        6    0.000    0.000    0.000    0.000 guess_weight.py:78(<genexpr>)
        1    0.000    0.000    0.000    0.000 toboggan.py:44(__exit__)
        1    0.000    0.000    0.000    0.000 toboggan.py:32(__init__)
        1    0.000    0.000    0.000    0.000 enum.py:459(__new__)
        1    0.000    0.000    0.000    0.000 flow.py:101(<listcomp>)
        1    0.000    0.000    0.000    0.000 flow.py:72(<dictcomp>)
        1    0.000    0.000    0.000    0.000 flow.py:97(<listcomp>)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}


# All_info	n_in	m_in	n_red	m_red	k_gtrue	k_cut	k_impro	k_opt	time_w	time_p
All_info	23	34	7	18	7	5	5	None	300	0
weights	
Finished instance.

# Timeout is set to 300
# Recovering paths
# Running on instances 13154
# Ground-truth available in file ../../research/instances/rnaseq/zebrafish/95.truth

File 95.graph instance 13153 name ENSDARG00000058693 with n = 52, m = 76, and truth = 11:
[(0, 33, 195), (0, 33, 151), (0, 33, 9), (0, 33, 146), (0, 33, 1), (0, 33, 197), (0, 3, 5), (0, 33, 31), (0, 33, 400), (0, 33, 62), (0, 3, 10), (3, 9, 5), (3, 9, 10), (9, 33, 5), (9, 51, 10), (33, 35, 386), (33, 35, 811), (35, 39, 600), (35, 39, 10), (35, 39, 556), (35, 39, 31), (39, 51, 62), (39, 51, 197), (39, 51, 400), (39, 51, 1), (39, 51, 151), (39, 51, 31), (39, 51, 5), (39, 51, 146), (39, 51, 9), (39, 51, 195)]
# Preprocessing
#	Graph has an edge cut of size 11.
#	Investigating cutsets yields bound 11.
#	User supplied k value of 1.
#	Continuing using k = 11
# Reduced instance has n = 7, m = 31, and lower_bound = 11:
Searching for minimum-sized set of weights, timeout set at 300
# 	Call guess_weight with k = 11
Timed out after 300 seconds
         111006899 function calls (111006870 primitive calls) in 300.000 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
 15857914  170.512    0.000  248.134    0.000 flow.py:553(push)
 15857914   48.244    0.000   59.774    0.000 flow.py:505(copy)
        1   43.187   43.187  300.000  300.000 dp.py:14(solve)
 15857915   17.847    0.000   17.847    0.000 flow.py:584(distribute)
 15857915    9.109    0.000    9.109    0.000 flow.py:495(__init__)
 15857913    8.677    0.000    8.677    0.000 flow.py:464(add_constraint)
 31715830    2.421    0.000    2.421    0.000 {method 'items' of 'dict' objects}
       22    0.000    0.000    0.000    0.000 {built-in method numpy.linalg.lapack_lite.dgelsd}
       11    0.000    0.000    0.001    0.000 linalg.py:1830(lstsq)
      132    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.array}
       11    0.000    0.000    0.003    0.000 flow.py:343(add_constraint)
       10    0.000    0.000    0.000    0.000 function_base.py:4740(insert)
       11    0.000    0.000    0.000    0.000 flow.py:239(__init__)
        1    0.000    0.000    0.000    0.000 linalg.py:296(solve)
       11    0.000    0.000    0.002    0.000 flow.py:296(_test_row)
       67    0.000    0.000    0.000    0.000 defmatrix.py:314(__getitem__)
     20/2    0.000    0.000    0.000    0.000 partition.py:23(f)
    57/46    0.000    0.000    0.000    0.000 defmatrix.py:292(__array_finalize__)
       11    0.000    0.000    0.000    0.000 {method 'reduce' of 'numpy.ufunc' objects}
       58    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.zeros}
       24    0.000    0.000    0.000    0.000 {method 'astype' of 'numpy.ndarray' objects}
       11    0.000    0.000    0.000    0.000 linalg.py:180(_fastCopyAndTranspose)
       10    0.000    0.000    0.000    0.000 {method 'dot' of 'numpy.ndarray' objects}
       22    0.000    0.000    0.000    0.000 {method 'copy' of 'numpy.ndarray' objects}
       22    0.000    0.000    0.000    0.000 fromnumeric.py:1364(ravel)
      190    0.000    0.000    0.000    0.000 {built-in method builtins.isinstance}
       11    0.000    0.000    0.000    0.000 fromnumeric.py:1710(sum)
       22    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray._fastCopyAndTranspose}
       34    0.000    0.000    0.000    0.000 numeric.py:463(asarray)
       11    0.000    0.000    0.000    0.000 defmatrix.py:246(__new__)
       22    0.000    0.000    0.000    0.000 {method 'ravel' of 'numpy.ndarray' objects}
       11    0.000    0.000    0.000    0.000 linalg.py:168(_to_native_byte_order)
       12    0.000    0.000    0.000    0.000 linalg.py:139(_commonType)
       24    0.000    0.000    0.000    0.000 linalg.py:106(_makearray)
       10    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.empty}
       56    0.000    0.000    0.000    0.000 {built-in method builtins.min}
        1    0.000    0.000    0.000    0.000 flow.py:211(has_bad_bounds)
        1    0.000    0.000  300.000  300.000 toboggan.py:77(find_opt_size)
       22    0.000    0.000    0.000    0.000 numeric.py:534(asanyarray)
       10    0.000    0.000    0.000    0.000 numeric.py:1490(rollaxis)
       22    0.000    0.000    0.000    0.000 {method 'transpose' of 'numpy.ndarray' objects}
        2    0.000    0.000    0.000    0.000 twodim_base.py:139(eye)
        1    0.000    0.000  300.000  300.000 guess_weight.py:62(solve)
       25    0.000    0.000    0.000    0.000 {built-in method builtins.max}
       23    0.000    0.000    0.000    0.000 linalg.py:111(isComplexType)
       11    0.000    0.000    0.000    0.000 linalg.py:192(_assertRank2)
       11    0.000    0.000    0.000    0.000 {method 'view' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.arange}
       10    0.000    0.000    0.000    0.000 {method '__array_wrap__' of 'numpy.ndarray' objects}
       44    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
       11    0.000    0.000    0.000    0.000 _methods.py:31(_sum)
       47    0.000    0.000    0.000    0.000 {built-in method builtins.issubclass}
        1    0.000    0.000    0.000    0.000 partition.py:17(visit)
        1    0.000    0.000    0.000    0.000 graphs.py:67(labeled_neighborhood)
      113    0.000    0.000    0.000    0.000 {built-in method builtins.len}
       11    0.000    0.000    0.000    0.000 {built-in method math.log}
        3    0.000    0.000    0.000    0.000 {built-in method builtins.print}
        1    0.000    0.000    0.000    0.000 flow.py:550(__hash__)
        1    0.000    0.000    0.000    0.000 partition.py:15(algorithm_u)
       11    0.000    0.000    0.000    0.000 linalg.py:124(_realType)
       35    0.000    0.000    0.000    0.000 {built-in method builtins.hash}
        2    0.000    0.000    0.000    0.000 signal.py:35(_enum_to_int)
       24    0.000    0.000    0.000    0.000 {built-in method builtins.getattr}
        3    0.000    0.000    0.000    0.000 {method 'format' of 'str' objects}
       23    0.000    0.000    0.000    0.000 {method '__array_prepare__' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 signal.py:45(signal)
        1    0.000    0.000    0.000    0.000 flow.py:431(__init__)
        1    0.000    0.000    0.000    0.000 graphs.py:52(__iter__)
        1    0.000    0.000    0.000    0.000 fromnumeric.py:1143(squeeze)
       10    0.000    0.000    0.000    0.000 {method 'item' of 'numpy.ndarray' objects}
       11    0.000    0.000    0.000    0.000 {method 'get' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 toboggan.py:39(__enter__)
        2    0.000    0.000    0.000    0.000 {built-in method _signal.alarm}
        1    0.000    0.000    0.000    0.000 {built-in method builtins.sorted}
        1    0.000    0.000    0.000    0.000 toboggan.py:44(__exit__)
        8    0.000    0.000    0.000    0.000 guess_weight.py:74(<genexpr>)
        1    0.000    0.000    0.000    0.000 enum.py:215(__call__)
        1    0.000    0.000    0.000    0.000 numeric.py:2160(isscalar)
        1    0.000    0.000    0.000    0.000 linalg.py:209(_assertNdSquareness)
        1    0.000    0.000    0.000    0.000 partition.py:18(<listcomp>)
       12    0.000    0.000    0.000    0.000 guess_weight.py:78(<genexpr>)
        1    0.000    0.000    0.000    0.000 signal.py:25(_int_to_enum)
        1    0.000    0.000    0.000    0.000 enum.py:459(__new__)
        1    0.000    0.000    0.000    0.000 graphs.py:55(source)
        1    0.000    0.000    0.000    0.000 toboggan.py:32(__init__)
        1    0.000    0.000    0.000    0.000 toboggan.py:36(handle_timeout)
       21    0.000    0.000    0.000    0.000 {method 'tobytes' of 'memoryview' objects}
        1    0.000    0.000    0.000    0.000 {built-in method _signal.signal}
        1    0.000    0.000    0.000    0.000 {method 'tolist' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 {method 'squeeze' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 linalg.py:198(_assertRankAtLeast2)
       11    0.000    0.000    0.000    0.000 {method 'is_integer' of 'float' objects}
        1    0.000    0.000    0.000    0.000 flow.py:488(__hash__)
        1    0.000    0.000    0.000    0.000 linalg.py:101(get_linalg_error_extobj)
        1    0.000    0.000    0.000    0.000 graphs.py:87(in_neighborhood)
        1    0.000    0.000    0.000    0.000 {built-in method builtins.iter}
        1    0.000    0.000    0.000    0.000 graphs.py:129(in_degree)
       11    0.000    0.000    0.000    0.000 linalg.py:130(_linalgRealType)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}


# All_info	n_in	m_in	n_red	m_red	k_gtrue	k_cut	k_impro	k_opt	time_w	time_p
All_info	52	76	7	31	11	11	11	None	300	0
weights	
Finished instance.

# Timeout is set to 300
# Recovering paths
# Running on instances 1637
# Ground-truth available in file ../../research/instances/rnaseq/zebrafish/72.truth

File 72.graph instance 1636 name ENSDARG00000068457 with n = 29, m = 45, and truth = 8:
[(0, 6, 385), (0, 6, 4), (0, 6, 2), (0, 6, 24), (0, 6, 358), (6, 9, 4), (6, 21, 1), (6, 9, 380), (6, 12, 384), (6, 21, 1), (6, 13, 3), (9, 12, 380), (9, 12, 4), (12, 13, 2), (12, 21, 28), (12, 21, 738), (13, 21, 2), (13, 21, 3), (21, 28, 2), (21, 28, 358), (21, 28, 4), (21, 28, 385), (21, 28, 24)]
# Preprocessing
#	Graph has an edge cut of size 6.
#	Investigating cutsets yields bound 7.
#	User supplied k value of 1.
#	Continuing using k = 7
# Reduced instance has n = 7, m = 23, and lower_bound = 7:
Searching for minimum-sized set of weights, timeout set at 300
# 	Call guess_weight with k = 7
Number of 1s is 2
Timed out after 300 seconds
         187463210 function calls (187431395 primitive calls) in 300.000 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
  2780286   47.367    0.000   47.367    0.000 {built-in method numpy.linalg.lapack_lite.dgelsd}
  1390143   41.740    0.000  163.083    0.000 linalg.py:1830(lstsq)
 15292189   23.453    0.000   23.453    0.000 {built-in method numpy.core.multiarray.array}
  1390143   21.248    0.000  254.774    0.000 flow.py:296(_test_row)
  1389615   20.628    0.000   38.226    0.000 linalg.py:296(solve)
  1715634   12.542    0.000   23.963    0.000 flow.py:553(push)
  2781566   11.602    0.000   16.964    0.000 defmatrix.py:314(__getitem__)
       88    9.034    0.103  299.994    3.409 dp.py:14(solve)
  5559516    8.974    0.000    8.974    0.000 {method 'astype' of 'numpy.ndarray' objects}
  1390143    7.306    0.000    7.306    0.000 {method 'reduce' of 'numpy.ufunc' objects}
  1715530    6.259    0.000    8.076    0.000 flow.py:505(copy)
  1390143    6.041    0.000  265.474    0.000 flow.py:343(add_constraint)
  6950718    6.026    0.000    6.026    0.000 {built-in method numpy.core.multiarray.zeros}
  5559516    4.524    0.000   14.216    0.000 linalg.py:106(_makearray)
5562132/5561388    4.306    0.000    5.197    0.000 defmatrix.py:292(__array_finalize__)
  2780286    4.010    0.000   10.500    0.000 fromnumeric.py:1364(ravel)
  1390143    3.887    0.000   12.215    0.000 fromnumeric.py:1710(sum)
  5560044    3.804    0.000    8.669    0.000 numeric.py:463(asarray)
  2779758    3.535    0.000    4.307    0.000 linalg.py:139(_commonType)
  1715634    3.238    0.000    3.345    0.000 flow.py:584(distribute)
  1390143    3.221    0.000    7.842    0.000 linalg.py:180(_fastCopyAndTranspose)
  1389615    3.070    0.000    3.577    0.000 flow.py:431(__init__)
  2780286    3.035    0.000    3.035    0.000 {built-in method numpy.core.multiarray._fastCopyAndTranspose}
  2780286    2.945    0.000    2.945    0.000 {method 'ravel' of 'numpy.ndarray' objects}
 13905669    2.689    0.000    2.689    0.000 {built-in method builtins.isinstance}
  8340331    2.530    0.000    2.530    0.000 {built-in method builtins.min}
  2780286    2.166    0.000    2.663    0.000 numeric.py:534(asanyarray)
  1390759    2.119    0.000    2.119    0.000 {method 'copy' of 'numpy.ndarray' objects}
  1390143    2.031    0.000    2.696    0.000 linalg.py:168(_to_native_byte_order)
  2780286    1.938    0.000    3.544    0.000 {method 'transpose' of 'numpy.ndarray' objects}
  1389615    1.582    0.000    2.484    0.000 linalg.py:209(_assertNdSquareness)
  4169903    1.561    0.000    1.561    0.000 {built-in method builtins.max}
  1837877    1.517    0.000    1.517    0.000 flow.py:464(add_constraint)
  1389615    1.477    0.000    1.477    0.000 {method 'squeeze' of 'numpy.ndarray' objects}
  1389615    1.446    0.000    2.923    0.000 fromnumeric.py:1143(squeeze)
  9729417    1.430    0.000    1.430    0.000 {built-in method builtins.issubclass}
  4169901    1.421    0.000    2.080    0.000 linalg.py:111(isComplexType)
  1715705    1.416    0.000    1.416    0.000 flow.py:495(__init__)
  1389615    1.342    0.000    1.342    0.000 linalg.py:101(get_linalg_error_extobj)
  1390143    1.225    0.000    1.380    0.000 linalg.py:192(_assertRank2)
  1389615    1.141    0.000    1.268    0.000 linalg.py:198(_assertRankAtLeast2)
 11124797    1.065    0.000    1.065    0.000 {built-in method builtins.len}
  5559516    1.025    0.000    1.025    0.000 {built-in method builtins.getattr}
  1389743    1.008    0.000    1.241    0.000 numeric.py:2160(isscalar)
  1389615    0.812    0.000    0.812    0.000 {method 'tolist' of 'numpy.ndarray' objects}
  9727305    0.756    0.000    0.756    0.000 {method 'is_integer' of 'float' objects}
  1390143    0.740    0.000    0.740    0.000 {built-in method math.log}
  1390143    0.669    0.000    7.975    0.000 _methods.py:31(_sum)
  1390143    0.587    0.000    0.897    0.000 linalg.py:124(_realType)
  2869141    0.545    0.000    0.545    0.000 {method 'append' of 'list' objects}
  2781305    0.508    0.000    0.508    0.000 {built-in method builtins.hash}
  4169901    0.479    0.000    0.479    0.000 {method '__array_prepare__' of 'numpy.ndarray' objects}
  3431898    0.401    0.000    0.401    0.000 {method 'items' of 'dict' objects}
  1390143    0.310    0.000    0.310    0.000 {method 'get' of 'dict' objects}
  1390143    0.138    0.000    0.138    0.000 linalg.py:130(_linalgRealType)
    12617    0.060    0.000    0.079    0.000 partition.py:17(visit)
37302/12721    0.019    0.000    0.107    0.000 partition.py:23(f)
    12617    0.011    0.000    0.011    0.000 partition.py:18(<listcomp>)
12810/6320    0.009    0.000    0.045    0.000 partition.py:55(b)
      528    0.008    0.000    0.014    0.000 function_base.py:4740(insert)
      616    0.005    0.000    0.013    0.000 flow.py:239(__init__)
      723    0.004    0.000    0.004    0.000 guess_weight.py:43(is_feasible)
      656    0.003    0.000    0.003    0.000 {method 'dot' of 'numpy.ndarray' objects}
        1    0.002    0.002  300.000  300.000 guess_weight.py:62(solve)
      616    0.001    0.000    0.006    0.000 defmatrix.py:246(__new__)
      528    0.001    0.000    0.001    0.000 numeric.py:1490(rollaxis)
      616    0.001    0.000    0.003    0.000 {method 'view' of 'numpy.ndarray' objects}
      528    0.001    0.000    0.001    0.000 {built-in method numpy.core.multiarray.empty}
      528    0.001    0.000    0.001    0.000 {method '__array_wrap__' of 'numpy.ndarray' objects}
      315    0.000    0.000    0.001    0.000 flow.py:550(__hash__)
      104    0.000    0.000    0.000    0.000 partition.py:15(algorithm_u)
      104    0.000    0.000    0.000    0.000 graphs.py:67(labeled_neighborhood)
     1208    0.000    0.000    0.000    0.000 {built-in method builtins.sum}
      609    0.000    0.000    0.001    0.000 graphs.py:126(out_degree)
       87    0.000    0.000    0.001    0.000 graphs.py:61(sink)
     1144    0.000    0.000    0.000    0.000 {method 'tobytes' of 'memoryview' objects}
      609    0.000    0.000    0.000    0.000 graphs.py:84(out_neighborhood)
      609    0.000    0.000    0.000    0.000 graphs.py:78(neighborhood)
      528    0.000    0.000    0.000    0.000 {method 'item' of 'numpy.ndarray' objects}
       38    0.000    0.000    0.000    0.000 flow.py:441(is_redundant)
       88    0.000    0.000    0.000    0.000 graphs.py:55(source)
      175    0.000    0.000    0.000    0.000 graphs.py:52(__iter__)
       88    0.000    0.000    0.000    0.000 graphs.py:129(in_degree)
      266    0.000    0.000    0.000    0.000 flow.py:444(<genexpr>)
      175    0.000    0.000    0.000    0.000 {built-in method builtins.iter}
       38    0.000    0.000    0.000    0.000 {built-in method builtins.all}
       21    0.000    0.000    0.000    0.000 flow.py:533(__eq__)
       88    0.000    0.000    0.000    0.000 graphs.py:87(in_neighborhood)
       37    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
       83    0.000    0.000    0.000    0.000 flow.py:422(__hash__)
        1    0.000    0.000  300.000  300.000 toboggan.py:77(find_opt_size)
       18    0.000    0.000    0.000    0.000 flow.py:474(__eq__)
        1    0.000    0.000    0.000    0.000 flow.py:211(has_bad_bounds)
       42    0.000    0.000    0.000    0.000 flow.py:488(__hash__)
        2    0.000    0.000    0.000    0.000 twodim_base.py:139(eye)
        4    0.000    0.000    0.000    0.000 {built-in method builtins.print}
        4    0.000    0.000    0.000    0.000 {method 'format' of 'str' objects}
       15    0.000    0.000    0.000    0.000 guess_weight.py:99(<genexpr>)
        1    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.arange}
        1    0.000    0.000    0.000    0.000 signal.py:45(signal)
        2    0.000    0.000    0.000    0.000 signal.py:35(_enum_to_int)
        1    0.000    0.000    0.000    0.000 signal.py:25(_int_to_enum)
        1    0.000    0.000    0.000    0.000 toboggan.py:39(__enter__)
        2    0.000    0.000    0.000    0.000 {built-in method _signal.alarm}
        8    0.000    0.000    0.000    0.000 guess_weight.py:74(<genexpr>)
        1    0.000    0.000    0.000    0.000 {built-in method _signal.signal}
        1    0.000    0.000    0.000    0.000 enum.py:459(__new__)
        1    0.000    0.000    0.000    0.000 toboggan.py:36(handle_timeout)
       11    0.000    0.000    0.000    0.000 guess_weight.py:82(<lambda>)
        1    0.000    0.000    0.000    0.000 enum.py:215(__call__)
        1    0.000    0.000    0.000    0.000 toboggan.py:44(__exit__)
        1    0.000    0.000    0.000    0.000 guess_weight.py:101(<listcomp>)
        1    0.000    0.000    0.000    0.000 toboggan.py:32(__init__)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}


# All_info	n_in	m_in	n_red	m_red	k_gtrue	k_cut	k_impro	k_opt	time_w	time_p
All_info	29	45	7	23	8	6	7	None	300	0
weights	
Finished instance.

# Timeout is set to 300
# Recovering paths
# Running on instances 5338
# Ground-truth available in file ../../research/instances/rnaseq/zebrafish/72.truth

File 72.graph instance 5337 name ENSDARG00000018460 with n = 23, m = 37, and truth = 8:
[(0, 6, 1187), (0, 3, 582), (0, 12, 27), (0, 3, 57), (0, 6, 732), (0, 6, 1), (3, 6, 582), (3, 6, 57), (6, 22, 639), (6, 12, 43), (6, 22, 732), (6, 12, 1145), (12, 14, 1165), (12, 14, 50), (14, 18, 1122), (14, 18, 70), (14, 18, 23), (18, 22, 65), (18, 22, 1122), (18, 22, 27), (18, 22, 1)]
# Preprocessing
#	Graph has an edge cut of size 6.
#	Investigating cutsets yields bound 7.
#	User supplied k value of 1.
#	Continuing using k = 7
# Reduced instance has n = 7, m = 21, and lower_bound = 7:
